[{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"tutorial, illustrate identify conserved spatial ecotypes (SEs) across multiple samples using MultiSpatialEcoTyper function. sample represents single-cell spatial transcriptomics data, including gene expression profile associated single-cell metadata. First load required packages vignette","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(ggplot2)) suppressPackageStartupMessages(library(parallel)) suppressPackageStartupMessages(library(Seurat)) suppressPackageStartupMessages(library(data.table)) suppressPackageStartupMessages(library(googledrive)) suppressPackageStartupMessages(library(NMF)) suppressPackageStartupMessages(library(ComplexHeatmap)) library(SpatialEcoTyper)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"tutorial, analyze single-cell spatial transcriptomics data cancer samples provided Vizgen’s MERSCOPE FFPE Human Immuno-oncology. Specifically, identify conserved SEs melanoma sample colon cancer sample. efficiency, selected subset region sample. can download gene expression profiles single-cell metadata . First, download demo data Google Drive , load text files R. can use read.table small files fread data.table package larger files. Mtx files can loaded R using ReadMtx function Seurat package.","code":"drive_deauth() # Disable Google sign-in requirement drive_download(as_id(\"1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB\"), \"HumanMelanomaPatient1_subset_counts.tsv.gz\") drive_download(as_id(\"1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI\"), \"HumanMelanomaPatient1_subset_scmeta.tsv\") drive_download(as_id(\"1ChwONUjr_yoURodnkDBj68ZUbjdHtmP6\"), \"HumanColonCancerPatient2_subset_counts.tsv.gz\") drive_download(as_id(\"1CipRjjD7cqzqKO0Yf4LUdsEw1XDzP6JS\"), \"HumanColonCancerPatient2_subset_scmeta.tsv\") # Load single-cell metadata # Required columns: X, Y, CellType # Recommend a Region column if pathologist region annotations are available scmeta1 <- read.table(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                       sep = \"\\t\", header = TRUE, row.names = 1) scmeta2 <- read.table(\"HumanColonCancerPatient2_subset_scmeta.tsv\",                       sep = \"\\t\", header = TRUE, row.names = 1) head(scmeta1[, c(\"X\", \"Y\", \"CellType\", \"Region\")]) ##                                         X         Y   CellType Region ## HumanMelanomaPatient1__cell_3655 1894.706 -6367.766 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3657 1942.480 -6369.602 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3658 1963.007 -6374.026 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3660 1981.600 -6372.266 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3661 1742.939 -6374.851 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3663 1921.683 -6383.309 Fibroblast Stroma head(scmeta2[, c(\"X\", \"Y\", \"CellType\", \"Region\")]) ##                                            X         Y   CellType       Region ## HumanColonCancerPatient2__cell_1085 5057.912 -1721.871 Macrophage Inner margin ## HumanColonCancerPatient2__cell_1205 5035.339 -1783.352 Macrophage Inner margin ## HumanColonCancerPatient2__cell_1312 5012.093 -1908.390 Macrophage Inner margin ## HumanColonCancerPatient2__cell_1625 5073.743 -1861.740 Macrophage Inner margin ## HumanColonCancerPatient2__cell_1629 5030.235 -1867.441 Macrophage Inner margin ## HumanColonCancerPatient2__cell_1639 5020.448 -1882.751 Macrophage Inner margin # Load single-cell gene expression data scdata1 <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata1) <- scdata1[, 1] scdata1 <- as.matrix(scdata1[, -1])  scdata2 <- fread(\"HumanColonCancerPatient2_subset_counts.tsv.gz\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata2) <- scdata2[, 1] scdata2 <- as.matrix(scdata2[, -1])  # Match the cell ids in the meta data and gene expression data scdata1 <- scdata1[, rownames(scmeta1)] scdata2 <- scdata2[, rownames(scmeta2)] drive_download(as_id(\"13M3xhRxp0xK9gf5F4DE9idSBFqVQIXDT\"), \"HumanMelanomaPatient1_subset_counts.mtx.gz\") drive_download(as_id(\"136feRaFjMtNvduLTm5xqa3WhyyoG4Xzo\"), \"HumanMelanomaPatient1_subset_cells.tsv.gz\") drive_download(as_id(\"13QprWzJhzzUy_w3XSrjlt9pjf2n-G7HV\"), \"HumanMelanomaPatient1_subset_genes.tsv.gz\")  drive_download(as_id(\"17fH9BAAugYi1FMLrMuTxojtOoklFBB-K\"), \"HumanColonCancerPatient2_subset_counts.mtx.gz\") drive_download(as_id(\"17a1f1VjxJSje_uyPt6zA97zTps9ko6rk\"), \"HumanColonCancerPatient2_subset_cells.tsv.gz\") drive_download(as_id(\"17fH0jE5b2YqJ5fpQtYil27k-7YhzArD6\"), \"HumanColonCancerPatient2_subset_genes.tsv.gz\") scdata1 <- ReadMtx(mtx = \"HumanMelanomaPatient1_subset_counts.mtx.gz\", cells = \"HumanMelanomaPatient1_subset_cells.tsv.gz\", features = \"HumanMelanomaPatient1_subset_genes.tsv.gz\", feature.column = 1, cell.column = 1) scdata2 <- ReadMtx(mtx = \"HumanColonCancerPatient2_subset_counts.mtx.gz\", cells = \"HumanColonCancerPatient2_subset_cells.tsv.gz\", features = \"HumanColonCancerPatient2_subset_genes.tsv.gz\", feature.column = 1, cell.column = 1)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"data-normalization","dir":"Articles","previous_headings":"","what":"Data normalization","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"proceeding SpatialEcoTyper analysis, gene expression data normalized. can done using either NormalizeData SCTransform. , use SCTransform normalization. faster computation, recommended install glmGamPoi package.","code":"if(!\"glmGamPoi\" %in% installed.packages()){   BiocManager::install(\"glmGamPoi\") } tmpobj1 <- CreateSeuratObject(scdata1) %>%       SCTransform(clip.range = c(-10, 10), verbose = FALSE) tmpobj2 <- CreateSeuratObject(scdata2) %>%       SCTransform(clip.range = c(-10, 10), verbose = FALSE)  seurat_version = as.integer(gsub(\"\\\\..*\", \"\", as.character(packageVersion(\"SeuratObject\")))) if(seurat_version<5){   normdata1 <- GetAssayData(tmpobj1, \"data\")   normdata2 <- GetAssayData(tmpobj2, \"data\") }else{   normdata1 <- tmpobj1[[\"SCT\"]]$data   normdata2 <- tmpobj2[[\"SCT\"]]$data } normdata1 <- NormalizeData(scdata1) normdata2 <- NormalizeData(scdata2)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"preview-of-the-samples","dir":"Articles","previous_headings":"","what":"Preview of the samples","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"melanoma sample includes spatial expression data 500 genes across 27,907 cells, colon cancer sample contains data 38,080 cells. samples, cells categorized ten distinct cell types: B cells, CD4+ T cells, CD8+ T cells, NK cells, plasma cells, macrophages, dendritic cells (DCs), fibroblasts, endothelial cells, cancer cells origin (CCOs). Due high heterogeneity, CCOs excluded analysis. can use SpatialView function visualize spatial distribution single cells within tissues:  spatial regions annotated four groups: tumor, inner margin, outer margin, stroma. tumor stroma regions defined based density cancer cells. inner outer margins delineated regions extending 250 μm inside outside tumor boundaries, respectively. SpatialView function can also used visualize regions.  can also visualize continuous characteristics, minimum distance single cell tumor/stroma margin, specific gene expression levels, using SpatialView function:","code":"# Visualize the cell type annotations in the tissue p1 <- SpatialView(scmeta1, by = \"CellType\") + labs(title = \"SKCM\") +         scale_color_manual(values = pals::kelly()[-1]) + theme(legend.position = \"none\") p2 <- SpatialView(scmeta2, by = \"CellType\") + labs(title = \"CRC\") +         scale_color_manual(values = pals::kelly()[-1]) p1 + p2 # Visualize the regions in the tissue p1 <- SpatialView(scmeta1, by = \"Region\") + labs(title = \"SKCM\") +         scale_color_brewer(type = \"qual\", palette = \"Set1\") +          theme(legend.position = \"none\") p2 <- SpatialView(scmeta2, by = \"Region\") + labs(title = \"CRC\") +         scale_color_brewer(type = \"qual\", palette = \"Set1\") p1 + p2 # Visualize the distance to tumor margin p1 <- SpatialView(scmeta1, by = \"Dist2Interface\") + labs(title = \"SKCM\") +          scale_colour_gradient2(low = \"#5e3c99\", high = \"#e66101\", mid = \"#d9d9d9\", midpoint = 0) +         theme(legend.position = \"none\") p2 <- SpatialView(scmeta2, by = \"Dist2Interface\") + labs(title = \"CRC\") +          scale_colour_gradient2(low = \"#5e3c99\", high = \"#e66101\", mid = \"#d9d9d9\", midpoint = 0) p1 + p2 ## Visualize gene expression in the tissue gg <- scmeta1 gg$Expression <- normdata1[\"STAT1\", ] p1 <- SpatialView(gg, by = \"Expression\") + scale_color_viridis_c() gg <- scmeta2 gg$Expression <- normdata2[\"STAT1\", ] p2 <- SpatialView(gg, by = \"Expression\") + scale_color_viridis_c() p1 + p2"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"spatialecotyper-analysis-across-multiple-samples","dir":"Articles","previous_headings":"","what":"SpatialEcoTyper analysis across multiple samples","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"MultiSpatialEcoTyper function enables integration single-cell spatial transcriptomics data across multiple samples, facilitating identification SEs shared across samples cancer types. analysis performed three stages: Independent SpatialEcoTyper Analysis: SpatialEcoTyper run sample independently identify spatial clusters construct cell-type-specific gene expression profiles spatial clusters. Integration via Similarity Network Fusion: Spatial clusters different samples integrated learn unified embedding using Similarity Network Fusion (Wang et al., 2014). NMF Clustering: Non-negative Matrix Factorization (NMF) applied unified embedding identify conserved SEs across samples. data_list named list expression matrices matrix represents gene expression data sample. columns matrix correspond cells, rows correspond genes. list names match sample names; otherwise, samples named ‘Sample1’, ‘Sample2’, etc. metadata_list named list metadata data frames, data frame contains metadata corresponding cells expression matrices. metadata data frame include least three columns (X, Y, CellType), row names match cell IDs (column names) expression matrix. outdir Directory results saved. Defaults current directory subdirectory named “SpatialEcoTyper_results_” followed current date. normalization.method Method normalizing expression data. Options include “None” (default), “SCT”, methods compatible Seurat’s NormalizeData function. nmf_ranks Integer vector specifying number clusters (10 default). vector provided, function tests ranks selects optimal rank NMF, though may increase computation time. radius Numeric specifying radius (units spatial coordinates) defining spatial neighborhoods around cell. Default 50. min.cts.per.region Integer specifying minimum number cell types (default: 2) required microregion. Region Column name metadata data frames containing pathologist region annotation (default: NULL). ncores Integer specifying number cores parallel processing. Default 1. can type ?MultiSpatialEcoTyper visualize full manual.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"preparing-data","dir":"Articles","previous_headings":"SpatialEcoTyper analysis across multiple samples","what":"Preparing data","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"Important note: examples , use 10 clusters 5 runs per rank demonstration purposes. select optimal number clusters obtain robust results, can use nmf_ranks argument vector integers test multiple ranks NMF analysis set nrun.per.rank 30 higher. can also use nmfClustering function detailed rank selection process, outlined next section (NMF clustering SpatialEcoTyper).","code":"data_list <- list(SKCM = normdata1, CRC = normdata2) metadata_list <- list(SKCM = scmeta1, CRC = scmeta2)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"pathologist-region-annotation-unavailable","dir":"Articles","previous_headings":"SpatialEcoTyper analysis across multiple samples","what":"Pathologist region annotation unavailable","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"","code":"MultiSpatialEcoTyper(data_list, metadata_list,                       normalization.method = \"None\",                      nmf_ranks = 10,  # Number of clusters                      nrun.per.rank = 5,  # Recommend 30 or higher for robust results                      ncores = 2) # This step takes ~5 minutes on a macOS with an Apple M1 Pro chip and 16 GB memory."},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"pathologist-region-annotation-available","dir":"Articles","previous_headings":"SpatialEcoTyper analysis across multiple samples","what":"Pathologist region annotation available","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"region annotations available, recommend include region annotations metadata specify Region MultiSpatialEcoTyper function, improve integration accuracy.","code":"MultiSpatialEcoTyper(data_list, metadata_list,                       normalization.method = \"None\",                      nmf_ranks = 10,  # Number of clusters                      nrun.per.rank = 5,  # Recommend 30 or higher for robust results                      Region = \"Region\", # Use pathologist annotations if available                      ncores = 2) ## agg_png  ##       2 ## This step takes ~5 minutes to complete on macOS with an Apple M1 Pro chip and 16 GB memory."},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"using-pre-existing-spatialecotyper-results","dir":"Articles","previous_headings":"SpatialEcoTyper analysis across multiple samples","what":"Using pre-existing SpatialEcoTyper results","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"’ve already run SpatialEcoTyper sample, can integrate results directly using IntegrateSpatialEcoTyper.","code":"drive_download(as_id(\"1nlecuQ90md15oYMKGVES68TaSoKHwZIg\"), \"CRC_SpatialEcoTyper_results.rds\", overwrite = TRUE) drive_download(as_id(\"1nXwimQCgSqcq5NJR4kOtF4xoJoNGlT5t\"), \"SKCM_SpatialEcoTyper_results.rds\", overwrite = TRUE) data_list <- list(SKCM = normdata1, CRC = normdata2) SpatialEcoTyper_list <- list(SKCM = readRDS(\"SKCM_SpatialEcoTyper_results.rds\"),                              CRC = readRDS(\"CRC_SpatialEcoTyper_results.rds\")) IntegrateSpatialEcoTyper(SpatialEcoTyper_list, data_list,                           outdir = \"SpatialEcoTyper_results/\",                          normalization.method = \"None\",                           nmf_ranks = 10, # Number of clusters                          nrun.per.rank = 5,  # recommend 30 or higher for robust results                          ncores = 2) # This step takes ~5 minutes on a macOS with an Apple M1 Pro chip and 16 GB memory."},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"output-results","dir":"Articles","previous_headings":"","what":"Output results","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"results saved specified directory (outdir) subdirectory named SpatialEcoTyper_results_ followed current date. output files include: (SampleName)_SpatialEcoTyper_results.rds SpatialEcoTyper result sample. MultiSE_integrated_final.rds matrix representing fused similarity matrix spatial clusters across samples. MultiSE_integrated_final_hmap.pdf heatmap visualizing fused similarity matrix spatial clusters, grouped samples SEs. MultiSE_metadata_final.rds Single-cell metadata SE column annotating discovered SEs, saved RDS file. MultiSE_metadata_final.tsv MultiSE_metadata_final.rds, saved TSV format. MultiSE_NMF_Cophenetic_Dynamics.pdf figure showing cophenetic coefficients different numbers clusters, available multiple ranks provided NMF analysis. MultiSE_NMF_results.rds NMF result derived nmfClustering function. single rank provided, contains NMFfitX1 object . multiple ranks provided, list containing optimal number communities (bestK), list NMFfitX1 objects (NMFfits), ggplot object (p) displaying cophenetic coefficient different cluster numbers. results demo data can downloaded MultiSpatialEcoTyper_results","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"nmf-clustering-for-spatialecotyper","dir":"Articles","previous_headings":"","what":"NMF clustering for SpatialEcoTyper","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"SpatialEcoTyper uses NMF group spatial clusters multiple samples conserved SEs. determine optimal number clusters, rank, computed cophenetic coefficient, quantifies classification stability given rank (.e., number clusters) ranges 0 1, 1 indicating maximally stability. Typically, rank cophenetic coefficient begins decrease chosen. However, method can challenging cophenetic coefficient exhibits multi-modal shape across different ranks. cases, SpatialEcoTyper analysis, recommend selecting number SEs coefficient drops 0.95 default.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"selecting-the-optimal-rank","dir":"Articles","previous_headings":"NMF clustering for SpatialEcoTyper","what":"Selecting the optimal rank","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"determine optimal rank, can use nmfClustering function, tests multiple ranks computes cophenetic coefficient . analysis requires fused similarity network matrix (MultiSE_integrated_final.rds) generated previous step. integrated similarity matrix metadata demo can downloaded via: Load files R: Next, test multiple ranks find optimal number SEs. running time step depends data size, number ranks test, number runs per rank, number cores parallel analysis. demonstration, test ranks 4 15 5 runs per rank using four cores. better understand cophenetic coefficient changes different ranks, can visualize results.  optimal rank determined, can use generate final SE annotations. can add newly defined SEs meta data","code":"drive_download(as_id(\"1noLABiQEyfwlVDqZ_uYZ4haooxaI7CM6\"), \"MultiSE_integrated_final.rds\") drive_download(as_id(\"1nrXWdvBJPkZRqg0IdP288_oGu-1qPl7A\"), \"MultiSE_metadata_final.rds\") ## A matrix representing the fused similarity matrix of spatial clusters across all samples integrated = readRDS(\"MultiSE_integrated_final.rds\") dim(integrated) ## [1] 376 376 ## Single-cell metadata with an `SE` column annotating the discovered SEs finalmeta = readRDS(\"MultiSE_metadata_final.rds\") head(finalmeta[, c(\"Sample\", \"X\", \"Y\", \"CellType\", \"Region\", \"InitSE\", \"SE\")]) ##                                  Sample        X         Y   CellType Region ## HumanMelanomaPatient1__cell_3657   SKCM 1942.480 -6369.602 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3658   SKCM 1963.007 -6374.026 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3660   SKCM 1981.600 -6372.266 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3661   SKCM 1742.939 -6374.851 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3664   SKCM 1706.253 -6383.428 Fibroblast Stroma ## HumanMelanomaPatient1__cell_3665   SKCM 1968.926 -6385.541 Fibroblast Stroma ##                                           InitSE  SE ## HumanMelanomaPatient1__cell_3657 SKCM..InitSE173 SE6 ## HumanMelanomaPatient1__cell_3658 SKCM..InitSE173 SE6 ## HumanMelanomaPatient1__cell_3660 SKCM..InitSE173 SE6 ## HumanMelanomaPatient1__cell_3661 SKCM..InitSE145 SE5 ## HumanMelanomaPatient1__cell_3664  SKCM..InitSE19 SE5 ## HumanMelanomaPatient1__cell_3665 SKCM..InitSE173 SE6 nmf_res <- nmfClustering(integrated, ranks = seq(4,15,2),                          nrun.per.rank = 5, # Recommend 30 or higher                          min.coph = 0.95, # minimum cophenetic coefficient threshold                          ncores = 4,                          seed = 1) ## This process takes ~3 minutes on a macOS with an Apple M1 Pro chip and 16 GB of memory message(\"The selected rank is \", nmf_res$bestK) plot(nmf_res$p) ses <- predict(nmf_res$NMFfits[[paste0(\"K.\", nmf_res$bestK)]]) head(ses) ##   SKCM..InitSE6 SKCM..InitSE111  SKCM..InitSE42  SKCM..InitSE55  SKCM..InitSE13  ##               1               1               1               1               1  ##  SKCM..InitSE50  ##               5  ## Levels: 1 2 3 4 5 6 7 8 finalmeta$SE = paste0(\"SE\", ses[finalmeta$InitSE]) head(finalmeta) ##                                                            CellID        X ## HumanMelanomaPatient1__cell_3657 HumanMelanomaPatient1__cell_3657 1942.480 ## HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3658 1963.007 ## HumanMelanomaPatient1__cell_3660 HumanMelanomaPatient1__cell_3660 1981.600 ## HumanMelanomaPatient1__cell_3661 HumanMelanomaPatient1__cell_3661 1742.939 ## HumanMelanomaPatient1__cell_3664 HumanMelanomaPatient1__cell_3664 1706.253 ## HumanMelanomaPatient1__cell_3665 HumanMelanomaPatient1__cell_3665 1968.926 ##                                          Y   CellType CellTypeName Region ## HumanMelanomaPatient1__cell_3657 -6369.602 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3658 -6374.026 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3660 -6372.266 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3661 -6374.851 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3664 -6383.428 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3665 -6385.541 Fibroblast  Fibroblasts Stroma ##                                  Dist2Interface          InitSE Sample  SE ## HumanMelanomaPatient1__cell_3657      -894.8463 SKCM..InitSE173   SKCM SE4 ## HumanMelanomaPatient1__cell_3658      -904.1115 SKCM..InitSE173   SKCM SE4 ## HumanMelanomaPatient1__cell_3660      -907.8909 SKCM..InitSE173   SKCM SE4 ## HumanMelanomaPatient1__cell_3661      -874.2712 SKCM..InitSE145   SKCM SE8 ## HumanMelanomaPatient1__cell_3664      -880.4758  SKCM..InitSE19   SKCM SE8 ## HumanMelanomaPatient1__cell_3665      -916.7790 SKCM..InitSE173   SKCM SE4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"using-a-different-rank","dir":"Articles","previous_headings":"NMF clustering for SpatialEcoTyper","what":"Using a different rank","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"simply want experiment different rank, can use nmfClustering function. single rank specified, directly returns NMFfit object predicting SE grouping, shown : can add newly defined SEs meta data","code":"nmf_res <- nmfClustering(integrated, ranks = 6, nrun.per.rank = 30, seed = 1) ses <- predict(nmf_res) ## This process takes ~6 minutes on a macOS with an Apple M1 Pro chip and 16 GB of memory finalmeta$SE = paste0(\"SE\", ses[finalmeta$InitSE]) head(finalmeta) ##                                                            CellID        X ## HumanMelanomaPatient1__cell_3657 HumanMelanomaPatient1__cell_3657 1942.480 ## HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3658 1963.007 ## HumanMelanomaPatient1__cell_3660 HumanMelanomaPatient1__cell_3660 1981.600 ## HumanMelanomaPatient1__cell_3661 HumanMelanomaPatient1__cell_3661 1742.939 ## HumanMelanomaPatient1__cell_3664 HumanMelanomaPatient1__cell_3664 1706.253 ## HumanMelanomaPatient1__cell_3665 HumanMelanomaPatient1__cell_3665 1968.926 ##                                          Y   CellType CellTypeName Region ## HumanMelanomaPatient1__cell_3657 -6369.602 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3658 -6374.026 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3660 -6372.266 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3661 -6374.851 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3664 -6383.428 Fibroblast  Fibroblasts Stroma ## HumanMelanomaPatient1__cell_3665 -6385.541 Fibroblast  Fibroblasts Stroma ##                                  Dist2Interface          InitSE Sample  SE ## HumanMelanomaPatient1__cell_3657      -894.8463 SKCM..InitSE173   SKCM SE2 ## HumanMelanomaPatient1__cell_3658      -904.1115 SKCM..InitSE173   SKCM SE2 ## HumanMelanomaPatient1__cell_3660      -907.8909 SKCM..InitSE173   SKCM SE2 ## HumanMelanomaPatient1__cell_3661      -874.2712 SKCM..InitSE145   SKCM SE3 ## HumanMelanomaPatient1__cell_3664      -880.4758  SKCM..InitSE19   SKCM SE3 ## HumanMelanomaPatient1__cell_3665      -916.7790 SKCM..InitSE173   SKCM SE2"},{"path":[]},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"visualizing-the-integrated-similarity-matrix","dir":"Articles","previous_headings":"Visualizing SEs","what":"Visualizing the integrated similarity matrix","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"reordering spatial clusters based newly identified SEs, can re-draw heatmap show fused similarity matrix spatial clusters across samples.","code":"ords = names(ses)[order(ses)] integrated = integrated[ords, ords] # reorder the cells ann <- data.frame(Sample = gsub(\"\\\\.\\\\..*\", \"\", rownames(integrated)),                   SE = paste0(\"SE\", ses[ords]),                   row.names = rownames(integrated)) # cell groups SE_cols <- getColors(length(unique(ann$SE)), palette = 1) # colors for SEs names(SE_cols) <- unique(ann$SE) sample_cols <- getColors(length(unique(ann$Sample)), palette = 2) # colors for samples names(sample_cols) <- unique(ann$Sample)  ## draw heatmap HeatmapView(integrated, show_row_names = FALSE, show_column_names = FALSE,             top_ann = ann, top_ann_col = list(Sample = sample_cols, SE = SE_cols)) drawRectangleAnnotation(ann$SE, ann$SE)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"visualizing-ses-in-the-tissue","dir":"Articles","previous_headings":"Visualizing SEs","what":"Visualizing SEs in the tissue","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"examine spatial distribution identified SEs, can use SpatialView function visualize SEs tissues.","code":"SpatialView(finalmeta, by = \"SE\")  + facet_wrap(~Sample, scales = \"free\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"association-between-ses-and-pre-annotated-regions","dir":"Articles","previous_headings":"Visualizing SEs","what":"Association between SEs and pre-annotated regions","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"examine enrichment SEs pre-annotated regions, can visualize cell fractions region, SE.","code":"gg <- finalmeta %>% filter(!is.na(SE)) %>% count(SE, Region, Sample) %>%      group_by(Sample, SE) %>% mutate(Frac = n / sum(n)) %>% ## cell type fractions within each sample     group_by(SE, Region) %>% summarise(Frac = mean(Frac)) ## average cell type fractions across all samples ggplot(gg, aes(SE, Frac, fill = Region)) +    geom_bar(stat = \"identity\", position = \"fill\") +    scale_fill_brewer(type = \"qual\", palette = \"Set1\") +   theme_bw(base_size = 14) + coord_flip() +    labs(y = \"Fraction\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"distance-of-ses-to-tumorstroma-interface","dir":"Articles","previous_headings":"Visualizing SEs","what":"Distance of SEs to tumor/stroma interface","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"distance SEs tumor/stroma interface can visualized box plot.","code":"gg <- finalmeta %>% filter(!is.na(SE)) %>% group_by(Sample, SE) %>%    summarise(Dist2Interface = mean(Dist2Interface)) %>% arrange(Dist2Interface) gg$SE = factor(gg$SE, levels = unique(gg$SE)) ggplot(gg, aes(SE, Dist2Interface)) + geom_boxplot() +    geom_point(aes(color = Sample)) + theme_bw() +    labs(y = \"Distance to tumor/stroma interface (μm)\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"cell-type-composition-of-ses","dir":"Articles","previous_headings":"Visualizing SEs","what":"Cell type composition of SEs","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"understand cellular makeup SE, plot average cell type composition. Average cell type composition SEs across samples","code":"gg <- finalmeta %>% filter(!is.na(SE)) %>% count(SE, CellType, Sample) %>%      group_by(Sample, SE) %>% mutate(Frac = n / sum(n)) %>% ## cell type fractions within each sample     group_by(SE, CellType) %>% summarise(Frac = mean(Frac)) ## average cell type fractions across all samples  ggplot(gg, aes(SE, Frac, fill = CellType)) +    geom_bar(stat = \"identity\", position = \"fill\") +   scale_fill_manual(values = pals::kelly()[-1]) +   theme_bw(base_size = 14) + coord_flip() +    labs(y = \"Cell type abundance\") gg <- finalmeta %>% filter(!is.na(SE)) %>% count(SE, CellType, Sample)  ggplot(gg, aes(SE, n, fill = CellType)) +    geom_bar(stat = \"identity\", position = \"fill\") +   scale_fill_manual(values = pals::kelly()[-1]) +   facet_wrap(~Sample) +   theme_bw(base_size = 14) + coord_flip() +    labs(y = \"Cell type abundance\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"identification-of-cell-type-specific-se-markers","dir":"Articles","previous_headings":"","what":"Identification of cell-type-specific SE markers","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"can identify cell-type-specific SE markers differential expression analysis using presto package.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"de-analysis-within-each-sample","dir":"Articles","previous_headings":"Identification of cell-type-specific SE markers","what":"DE analysis within each sample","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"","code":"require(\"presto\") ## DE analysis within the first sample tmpmeta1 = finalmeta %>% filter(CellType==\"CD8T\" & Sample==\"SKCM\" & (!is.na(SE))) tmpdata1 = normdata1[, tmpmeta1$CellID] degs1 = wilcoxauc(tmpdata1, tmpmeta1$SE) ## DE analysis within the second sample tmpmeta2 = finalmeta %>% filter(CellType==\"CD8T\" & Sample==\"CRC\" & (!is.na(SE))) tmpdata2 = normdata2[, tmpmeta2$CellID] degs2 = wilcoxauc(tmpdata2, tmpmeta2$SE) # DE analysis  head(degs1) ##    feature group    avgExpr        logFC statistic       auc      pval padj ## 1     PDK4   SE1 0.00000000  0.000000000  162228.0 0.5000000 1.0000000    1 ## 2 TNFRSF17   SE1 0.00000000  0.000000000  162228.0 0.5000000 1.0000000    1 ## 3    ICAM3   SE1 0.51370888  0.032194821  166290.0 0.5125194 0.6006048    1 ## 4      FAP   SE1 0.00000000  0.000000000  162228.0 0.5000000 1.0000000    1 ## 5     GZMB   SE1 0.19865862 -0.029811340  159553.5 0.4917570 0.6655314    1 ## 6     TSC2   SE1 0.01575335 -0.004433358  161227.5 0.4969164 0.6788433    1 ##      pct_in   pct_out ## 1  0.000000  0.000000 ## 2  0.000000  0.000000 ## 3 50.757576 51.586656 ## 4  0.000000  0.000000 ## 5 21.969697 23.393002 ## 6  2.272727  2.888527 head(degs2) ##    feature group   avgExpr       logFC statistic       auc       pval      padj ## 1     PDK4   SE1 0.0000000  0.00000000  646892.5 0.5000000 1.00000000 1.0000000 ## 2   CX3CL1   SE1 0.0000000  0.00000000  646892.5 0.5000000 1.00000000 1.0000000 ## 3      CD4   SE1 0.2757405 -0.01459332  638083.5 0.4931913 0.53952676 1.0000000 ## 4    SNAI2   SE1 0.0000000  0.00000000  646892.5 0.5000000 1.00000000 1.0000000 ## 5 TNFRSF17   SE1 0.0000000  0.00000000  646892.5 0.5000000 1.00000000 1.0000000 ## 6    ICAM3   SE1 0.5182874  0.05711767  683122.0 0.5280027 0.02831882 0.1944559 ##     pct_in  pct_out ## 1  0.00000  0.00000 ## 2  0.00000  0.00000 ## 3 28.27324 29.36864 ## 4  0.00000  0.00000 ## 5  0.00000  0.00000 ## 6 53.32068 48.10591"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"identifying-conserved-markers-across-samples","dir":"Articles","previous_headings":"Identification of cell-type-specific SE markers","what":"Identifying conserved markers across samples","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"identify markers conserved across different samples, conduct meta-analysis averaging log2 fold changes (log2FC) DE analyses. identify markers specific SE-associated cell state, calculate difference maximum log2FC gene second-highest log2FC:","code":"library(tidyr) degs <- merge(degs1[, c(1,2,4)], degs2[, c(1,2,4)], by = c(\"feature\", \"group\")) degs$AvgLogFC = (degs$logFC.x + degs$logFC.y) / 2 lfcs = degs %>% pivot_wider(id_cols = feature, names_from = group,                              values_from = AvgLogFC) %>% as.data.frame rownames(lfcs) <- lfcs$feature lfcs <- lfcs[, -1] head(lfcs) ##                  SE1         SE3          SE4         SE5          SE6 ## ACKR3    0.000000000  0.00000000  0.000000000  0.00000000  0.000000000 ## ACTA2    0.000000000  0.00000000  0.000000000  0.00000000  0.000000000 ## ADAMTS4  0.000000000  0.00000000  0.000000000  0.00000000  0.000000000 ## AKT1    -0.092686120 -0.10035625 -0.190867965  0.03809412  0.203712806 ## AKT2    -0.017319258  0.01809832  0.007465479 -0.01284803 -0.007846364 ## AKT3    -0.008900001  0.03862885  0.012651430 -0.02977051 -0.007425763 secondmax = apply(lfcs, 1, function(x){ -sort(-x)[2] }) delta = lfcs - secondmax ## Markers are considered specific if they have a positive delta and a log2FC greater than 0.05: idx = delta>0 & lfcs>0.05 markers = lapply(colnames(lfcs), function(se){   gs = rownames(idx)[idx[, se]]   gs = gs[order(-lfcs[gs, se])]   gs }) names(markers) = colnames(lfcs) markers = markers[lengths(markers)>0] ## Select the top five markers top5 = lapply(markers, function(x){ x[1:min(5, length(x))] }) top5 ## $SE1 ## [1] \"TGFBR1\" \"FN1\"    \"IFNGR1\" \"FOS\"    \"COL1A1\" ##  ## $SE3 ## [1] \"EGR1\"   \"CCL5\"   \"ETS1\"   \"TGFBR2\" \"PTPRC\"  ##  ## $SE4 ## [1] \"CXCR4\" \"GZMK\"  \"CCR7\"  \"ZAP70\" \"KLRG1\" ##  ## $SE5 ## [1] \"BST2\"   \"STAT1\"  \"TAP2\"   \"NFKBIA\" \"IL2RB\"  ##  ## $SE6 ## [1] \"PKM\"     \"CDK2\"    \"GZMB\"    \"HAVCR2\"  \"TNFRSF9\""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"visualizing-top-se-cell-state-markers","dir":"Articles","previous_headings":"Identification of cell-type-specific SE markers","what":"Visualizing top SE cell state markers","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"","code":"gg = t(scale(t(lfcs[unlist(top5), ]), center = FALSE)) HeatmapView(gg, breaks = c(0, 1, 1.5))"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Integration.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Discovery of Spatial Ecotypes from Multiple Samples","text":"session info can invaluable users encounter issues, allows replicate exact environment identify potential discrepancies package versions configurations might causing problems.","code":"sessionInfo() ## R version 4.2.0 (2022-04-22) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur/Monterey 10.16 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] grid      parallel  stats     graphics  grDevices utils     datasets  ## [8] methods   base      ##  ## other attached packages: ##  [1] tidyr_1.3.0           presto_1.0.0          Rcpp_1.0.10           ##  [4] pals_1.7              SpatialEcoTyper_0.0.4 RANN_2.6.1            ##  [7] Matrix_1.5-3          ComplexHeatmap_2.12.1 NMF_0.27              ## [10] Biobase_2.56.0        BiocGenerics_0.42.0   cluster_2.1.4         ## [13] rngtools_1.5.2        registry_0.5-1        googledrive_2.1.1     ## [16] data.table_1.14.6     SeuratObject_4.1.3    Seurat_4.3.0          ## [19] ggplot2_3.4.0         dplyr_1.1.0           ##  ## loaded via a namespace (and not attached): ##   [1] circlize_0.4.15        systemfonts_1.0.4      plyr_1.8.8             ##   [4] igraph_1.3.5           lazyeval_0.2.2         sp_1.6-0               ##   [7] splines_4.2.0          listenv_0.9.0          scattermore_0.8        ##  [10] gridBase_0.4-7         digest_0.6.31          foreach_1.5.2          ##  [13] htmltools_0.5.8.1      magick_2.7.3           fansi_1.0.4            ##  [16] magrittr_2.0.3         memoise_2.0.1          tensor_1.5             ##  [19] doParallel_1.0.17      ROCR_1.0-11            globals_0.16.2         ##  [22] matrixStats_0.63.0     R.utils_2.12.2         pkgdown_2.0.9          ##  [25] spatstat.sparse_3.0-0  colorspace_2.1-0       ggrepel_0.9.2          ##  [28] textshaping_0.3.7      xfun_0.37              crayon_1.5.2           ##  [31] jsonlite_1.8.4         progressr_0.13.0       spatstat.data_3.0-0    ##  [34] survival_3.5-0         zoo_1.8-11             iterators_1.0.14       ##  [37] glue_1.6.2             polyclip_1.10-4        gtable_0.3.1           ##  [40] gargle_1.5.1           leiden_0.4.3           GetoptLong_1.0.5       ##  [43] shape_1.4.6            future.apply_1.10.0    maps_3.4.1             ##  [46] abind_1.4-5            scales_1.2.1           DBI_1.1.3              ##  [49] spatstat.random_3.1-3  miniUI_0.1.1.1         viridisLite_0.4.1      ##  [52] xtable_1.8-4           clue_0.3-64            reticulate_1.28        ##  [55] mapproj_1.2.11         stats4_4.2.0           htmlwidgets_1.6.1      ##  [58] httr_1.4.7             RColorBrewer_1.1-3     ellipsis_0.3.2         ##  [61] ica_1.0-3              farver_2.1.1           R.methodsS3_1.8.2      ##  [64] pkgconfig_2.0.3        sass_0.4.9             uwot_0.1.14            ##  [67] deldir_1.0-6           utf8_1.2.3             labeling_0.4.2         ##  [70] tidyselect_1.2.0       rlang_1.1.1            reshape2_1.4.4         ##  [73] later_1.3.0            munsell_0.5.0          tools_4.2.0            ##  [76] cachem_1.0.6           cli_3.6.2              generics_0.1.3         ##  [79] ggridges_0.5.4         evaluate_0.20          stringr_1.5.0          ##  [82] fastmap_1.1.1          yaml_2.3.7             ragg_1.3.0             ##  [85] goftest_1.2-3          knitr_1.42             fs_1.6.0               ##  [88] fitdistrplus_1.1-8     purrr_1.0.1            pbapply_1.7-0          ##  [91] future_1.30.0          nlme_3.1-157           mime_0.12              ##  [94] R.oo_1.25.0            compiler_4.2.0         rstudioapi_0.14        ##  [97] plotly_4.10.1          curl_5.2.1             png_0.1-8              ## [100] spatstat.utils_3.0-1   tibble_3.1.8           bslib_0.7.0            ## [103] stringi_1.7.12         highr_0.10             desc_1.4.2             ## [106] lattice_0.20-45        vctrs_0.6.5            pillar_1.9.0           ## [109] lifecycle_1.0.3        GlobalOptions_0.1.2    spatstat.geom_3.0-6    ## [112] lmtest_0.9-40          jquerylib_0.1.4        RcppAnnoy_0.0.20       ## [115] cowplot_1.1.1          irlba_2.3.5.1          httpuv_1.6.8           ## [118] patchwork_1.1.2        R6_2.5.1               promises_1.2.0.1       ## [121] KernSmooth_2.23-20     gridExtra_2.3          IRanges_2.30.1         ## [124] parallelly_1.34.0      codetools_0.2-18       dichromat_2.0-0.1      ## [127] MASS_7.3-58.2          rjson_0.2.21           rprojroot_2.0.3        ## [130] withr_2.5.0            sctransform_0.3.5      S4Vectors_0.34.0       ## [133] rmarkdown_2.20         Rtsne_0.16             spatstat.explore_3.0-6 ## [136] shiny_1.7.4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Bulk.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Recovery of Spatial Ecotypes from Bulk Gene Expression Data","text":"tutorial, demonstrate infer spatial ecotype (SE) abundances bulk RNA-seq data. Specifically, infer SE abundances RNA-seq data TCGA melanoma samples. gene expression matrix available SKCM_RNASeqV2.geneExp.rds, Transcripts Per Million (TPM) matrix obtained PanCanAtlas. First load required packages vignette","code":"suppressPackageStartupMessages(library(googledrive)) library(SpatialEcoTyper) library(Seurat)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Bulk.html","id":"loading-bulk-expression-of-tcga-melanoma-samples","dir":"Articles","previous_headings":"","what":"Loading bulk expression of TCGA melanoma samples","title":"Recovery of Spatial Ecotypes from Bulk Gene Expression Data","text":"","code":"drive_deauth() # Disable Google sign-in requirement drive_download(as_id(\"14QvmgISxaArTzWt_UHvf55aAYN2zm84Q\"), \"SKCM_RNASeqV2.geneExp.rds\") bulkdata <- readRDS(\"SKCM_RNASeqV2.geneExp.rds\") head(bulkdata[, 1:5]) ##       TCGA-3N-A9WB-06 TCGA-3N-A9WC-06 TCGA-3N-A9WD-06 TCGA-BF-A1PU-01 ## A1BG         381.0660         195.182        360.8790        176.3990 ## A1CF           0.0000           0.000          0.7092          0.0000 ## A2BP1          0.0000           0.000          6.3830          1.2987 ## A2LD1        250.1980         160.755         97.1986        163.2340 ## A2M         2209.5200      169237.000      18257.9000       6716.4500 ## A2ML1          7.2698           0.000          0.0000          7.7922 ##       TCGA-BF-A1PV-01 ## A1BG         216.8470 ## A1CF           0.0000 ## A2BP1          0.0000 ## A2LD1         60.8727 ## A2M         1740.5800 ## A2ML1          0.5977"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Bulk.html","id":"se-deconvolution","dir":"Articles","previous_headings":"","what":"SE deconvolution","title":"Recovery of Spatial Ecotypes from Bulk Gene Expression Data","text":"DeconvoluteSE function used infer SE abundances bulk tissues. Users can utilize default model estimating abundance predefined SEs apply custom model infer abundance newly defined SEs bulk gene expression data. prediction, gene expression data log2-transformed (max value greater 80) normalized mean 0 unit variance gene. default model trained pseudobulk gene expression data capable predicting abundances nine predefined SEs, along NonSE group. NonSE group primarily represents cancer cells cells belong SEs. predicted abundances SEs NonSE sum 1 within sample. Note: 1) SE abundances comparable across different samples, allowing users analyze SE distribution patterns various conditions. 2) Due varying number cell states within SE, direct comparisons abundance different SEs NonSE may meaningful. SEs represent distinct spatial multicellular communities, composed unique combination cell types.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Bulk.html","id":"using-default-model","dir":"Articles","previous_headings":"SE deconvolution","what":"Using default model","title":"Recovery of Spatial Ecotypes from Bulk Gene Expression Data","text":"","code":"sefracs <- DeconvoluteSE(bulkdata, scale = TRUE) head(sefracs) ##                      NonSE       SE01       SE02       SE03       SE04 ## TCGA-3N-A9WB-06 0.19380234 0.05372667 0.16735600 0.12581663 0.07216666 ## TCGA-3N-A9WC-06 0.05293689 0.13901340 0.08427617 0.08372047 0.04243859 ## TCGA-3N-A9WD-06 0.27200075 0.17114795 0.06288761 0.05641549 0.10166721 ## TCGA-BF-A1PU-01 0.16899510 0.13618971 0.06501306 0.09269615 0.17313296 ## TCGA-BF-A1PV-01 0.12078283 0.06921834 0.05970319 0.16813008 0.11059648 ## TCGA-BF-A1PX-01 0.21398415 0.04019509 0.08906215 0.04499893 0.08561680 ##                       SE05         SE07         SE08       SE10       SE11 ## TCGA-3N-A9WB-06 0.06884572 6.495692e-02 4.610809e-03 0.16471168 0.08400658 ## TCGA-3N-A9WC-06 0.05623098 6.781589e-03 3.162253e-01 0.15964259 0.05873404 ## TCGA-3N-A9WD-06 0.02720647 8.345475e-02 9.239064e-02 0.07760029 0.05522884 ## TCGA-BF-A1PU-01 0.13404194 3.330034e-16 3.330034e-16 0.02543647 0.20449461 ## TCGA-BF-A1PV-01 0.14669963 1.677658e-01 1.260194e-03 0.06961553 0.08622790 ## TCGA-BF-A1PX-01 0.09930790 7.771710e-02 1.239738e-01 0.12590726 0.09923685"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Bulk.html","id":"using-custom-model","dir":"Articles","previous_headings":"SE deconvolution","what":"Using custom model","title":"Recovery of Spatial Ecotypes from Bulk Gene Expression Data","text":"identification SEs using SpatialEcoTyper MultiSpatialEcoTyper, users can develop NMF model infer SE abundances bulk tissue samples, following tutorial . Users can also develop NMF model deconvolve SEs bulk gene expression data. training data can pseudo-bulk mixtures aggregating single-cell transcriptomics. tutorial, create pseudo-bulk mixtures single-cell RNA-seq data melanoma sample, also used tutorial Recovery Spatial Ecotypes Single-Cell Gene Expression Data. raw count data available Melanoma_WU2161_counts.rds SE recovery results available Melanoma_WU2161_RecoveredSEs.rds. Loading data Creating pseudobulk data CreatePseudobulks function used create pseudo-bulk mixtures single-cell (spatial) transcriptomics data cells grouped SEs. samples cell fractions Gaussian distribution, sets negative fractions 0 re-normalizes fractions sum 1 across SEs. Based resulting fractions, samples 1,000 cells per pseudo-bulk mixture replacement, aggregates transcriptomes non-log linear space, normalize resulting mixture logarithm CPM using Seurat’s NormalizeData. Training NMFGenerateW function used train NMF model SE deconvolution based provided SE fractions gene expression matrix. applying NMF, gene’s expression scaled mean 0 unit variance (recommended). meet non-negativity requirement NMF, expression matrix transformed using posneg method. transformation splits expression matrix two matrices: one containing positive values containing absolute values negative values. two matrices concatenated form final training data NMF model. resulting W matrix can used infer SE sbundances bulk gene expression profiles using DeconvoluteSE function. example model available SE_Deconvolution_W.rds. can use new model SE deconvolution specifying W parameter:","code":"# Download single-cell gene expression matrix and SE recovery results. # The downloads should be finished within 1min. drive_download(as_id(\"15n9zlXed74oeGaO1pythOOM_iWIfuMn2\"), \"Melanoma_WU2161_counts.rds\") drive_download(as_id(\"1nzhKQM6HtX_rzzn3edSQsbodFBO5ycYG\"), \"Melanoma_WU2161_RecoveredSEs.rds\") # Load single-cell gene expression matrix. counts <- readRDS(\"Melanoma_WU2161_counts.rds\") head(counts[, 1:10]) ## 6 x 10 sparse Matrix of class \"dgCMatrix\" ##                                ## AL627309.1 . . . . . . . . . . ## AL627309.5 . . . 1 . . . . . . ## AP006222.2 . . . . . . . . . . ## AC114498.1 . . . . . . . . . . ## AL669831.2 . . . . . . . . . . ## LINC01409  . . . . . . . . . . # Load SE recovery results SEs = readRDS(\"Melanoma_WU2161_RecoveredSEs.rds\") head(SEs) ## AAACCTGCACATGACT-1 AAACCTGGTGGTCCGT-1 AAACCTGGTTTGTGTG-1 AAACCTGTCCGATATG-1  ##             \"SE10\"            \"NonSE\"             \"SE01\"             \"SE10\"  ## AAACCTGTCTAACGGT-1 AAACGGGCACTTAAGC-1  ##            \"NonSE\"             \"SE03\" result = CreatePseudobulks(counts = counts, groups = SEs, n_mixtures = 100) head(result$Mixtures[, 1:5]) ## Gene expression matrix of pseudobulks ## 6 x 5 sparse Matrix of class \"dgCMatrix\" ##            Pseudobulk1  Pseudobulk2 Pseudobulk3  Pseudobulk4  Pseudobulk5 ## AL627309.1 0.016972085 0.0272125699 0.019494706 0.0151417476 0.0215163218 ## AL627309.5 0.062939626 0.0585763400 0.072680217 0.0832459792 0.0634250393 ## AP006222.2 0.001737547 0.0009746133 0.001615377 0.0012089628 0.0037481743 ## AC114498.1 0.006997929 .            .           0.0009244557 .            ## AL669831.2 0.001110700 0.0003703704 .           0.0007413447 0.0007413447 ## LINC01409  0.046240107 0.0301088599 0.025292195 0.0297990066 0.0390591928 head(result$Fracs) ## SE fractions in pseudobulks ##                  NonSE       SE01       SE02       SE03       SE04       SE05 ## Pseudobulk1 0.13578633 0.02103231 0.06798558 0.12710418 0.03534255 0.05412050 ## Pseudobulk2 0.11636180 0.11980590 0.04819365 0.16457608 0.04770089 0.10847818 ## Pseudobulk3 0.04572172 0.12322551 0.08136232 0.08215961 0.16635320 0.06385032 ## Pseudobulk4 0.09239499 0.09412134 0.07994071 0.15223339 0.07900003 0.08241206 ## Pseudobulk5 0.00000000 0.16352951 0.10843578 0.08475981 0.02459614 0.15638880 ## Pseudobulk6 0.09423837 0.08819713 0.09091754 0.08608907 0.00000000 0.09000149 ##                   SE06       SE07       SE08       SE09       SE10       SE11 ## Pseudobulk1 0.11506530 0.06752668 0.14421556 0.05536032 0.09577202 0.08068867 ## Pseudobulk2 0.07058555 0.08052256 0.01036493 0.11241051 0.04454126 0.07645870 ## Pseudobulk3 0.04810001 0.08344317 0.12046230 0.08193738 0.05990561 0.04347886 ## Pseudobulk4 0.06384581 0.06932315 0.02105041 0.09074042 0.10213406 0.07280364 ## Pseudobulk5 0.10306946 0.03836312 0.08145100 0.11321193 0.04679763 0.07939680 ## Pseudobulk6 0.11000033 0.08445375 0.09840190 0.08880690 0.10736759 0.06152594 W = NMFGenerateW(t(result$Fracs), result$Mixtures) ## This step should be done within 1 min head(W) ##                      NonSE         SE01         SE02         SE03         SE04 ## IGKV3-11__pos 2.987008e-04 6.355080e-05 2.220446e-16 2.383594e-04 4.072495e-09 ## IGLV3-19__pos 3.867063e-03 2.220446e-16 2.220446e-16 3.474920e-16 3.588266e-02 ## IGLV6-57__pos 1.209444e-01 6.262049e-11 1.647007e-07 5.167169e+00 3.178758e-02 ## IGLV1-51__pos 2.220446e-16 2.220446e-16 3.104550e-10 5.030666e+00 2.233484e-15 ## IGKV1-12__pos 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 ## IGHV3-49__pos 3.263314e-15 2.220446e-16 5.526206e-12 1.149316e+00 2.220446e-16 ##                       SE05         SE06         SE07         SE08         SE09 ## IGKV3-11__pos 2.220446e-16 3.661724e-07 4.723919e-15 8.062789e-06 2.220446e-16 ## IGLV3-19__pos 5.062765e-02 2.220446e-16 4.619320e-14 1.623725e-10 2.220446e-16 ## IGLV6-57__pos 7.722227e-06 4.706304e-14 2.220446e-16 7.074166e-06 3.349109e-02 ## IGLV1-51__pos 8.211502e-03 5.429722e-16 4.011192e-09 4.055173e-10 3.365415e-10 ## IGKV1-12__pos 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 ## IGHV3-49__pos 1.402938e-08 2.220446e-16 2.220446e-16 3.961223e+00 2.546958e-11 ##                       SE10         SE11 ## IGKV3-11__pos 3.691078e-01 4.893466e+00 ## IGLV3-19__pos 2.220446e-16 5.196191e+00 ## IGLV6-57__pos 2.779569e-11 5.678181e-03 ## IGLV1-51__pos 2.476805e-01 2.220446e-16 ## IGKV1-12__pos 2.220446e-16 4.806820e+00 ## IGHV3-49__pos 1.507625e-11 8.873149e-14 drive_download(as_id(\"1mRyABC3NtLIlZtQ1UqtUIr7MhF62Vs3e\"), \"SE_Deconvolution_W.rds\") W <- readRDS(\"SE_Deconvolution_W.rds\") sefracs <- DeconvoluteSE(bulkdata, W = W) head(sefracs)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Bulk.html","id":"visualization-of-se-abundances","dir":"Articles","previous_headings":"","what":"Visualization of SE abundances","title":"Recovery of Spatial Ecotypes from Bulk Gene Expression Data","text":"","code":"library(grid) HeatmapView(sefracs, breaks = c(0, 0.15, 0.3),              show_row_names = FALSE, cluster_rows = TRUE)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Bulk.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Recovery of Spatial Ecotypes from Bulk Gene Expression Data","text":"session info can invaluable users encounter issues, allows replicate exact environment identify potential discrepancies package versions configurations might causing problems.","code":"sessionInfo() ## R version 4.2.0 (2022-04-22) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur/Monterey 10.16 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] grid      parallel  stats     graphics  grDevices utils     datasets  ## [8] methods   base      ##  ## other attached packages: ##  [1] SpatialEcoTyper_0.0.4 NMF_0.27              Biobase_2.56.0        ##  [4] BiocGenerics_0.42.0   cluster_2.1.4         rngtools_1.5.2        ##  [7] registry_0.5-1        dplyr_1.1.0           RANN_2.6.1            ## [10] Matrix_1.5-3          SeuratObject_4.1.3    Seurat_4.3.0          ## [13] googledrive_2.1.1     ##  ## loaded via a namespace (and not attached): ##   [1] circlize_0.4.15        systemfonts_1.0.4      plyr_1.8.8             ##   [4] igraph_1.3.5           lazyeval_0.2.2         sp_1.6-0               ##   [7] splines_4.2.0          listenv_0.9.0          scattermore_0.8        ##  [10] ggplot2_3.4.0          gridBase_0.4-7         digest_0.6.31          ##  [13] foreach_1.5.2          htmltools_0.5.8.1      magick_2.7.3           ##  [16] fansi_1.0.4            magrittr_2.0.3         memoise_2.0.1          ##  [19] tensor_1.5             doParallel_1.0.17      ROCR_1.0-11            ##  [22] ComplexHeatmap_2.12.1  globals_0.16.2         matrixStats_0.63.0     ##  [25] pkgdown_2.0.9          spatstat.sparse_3.0-0  colorspace_2.1-0       ##  [28] ggrepel_0.9.2          textshaping_0.3.7      xfun_0.37              ##  [31] crayon_1.5.2           jsonlite_1.8.4         progressr_0.13.0       ##  [34] spatstat.data_3.0-0    survival_3.5-0         zoo_1.8-11             ##  [37] iterators_1.0.14       glue_1.6.2             polyclip_1.10-4        ##  [40] gtable_0.3.1           gargle_1.5.1           leiden_0.4.3           ##  [43] GetoptLong_1.0.5       shape_1.4.6            future.apply_1.10.0    ##  [46] abind_1.4-5            scales_1.2.1           DBI_1.1.3              ##  [49] spatstat.random_3.1-3  miniUI_0.1.1.1         Rcpp_1.0.10            ##  [52] viridisLite_0.4.1      xtable_1.8-4           clue_0.3-64            ##  [55] reticulate_1.28        stats4_4.2.0           htmlwidgets_1.6.1      ##  [58] httr_1.4.7             RColorBrewer_1.1-3     ellipsis_0.3.2         ##  [61] ica_1.0-3              pkgconfig_2.0.3        sass_0.4.9             ##  [64] uwot_0.1.14            deldir_1.0-6           utf8_1.2.3             ##  [67] tidyselect_1.2.0       rlang_1.1.1            reshape2_1.4.4         ##  [70] later_1.3.0            munsell_0.5.0          tools_4.2.0            ##  [73] cachem_1.0.6           cli_3.6.2              generics_0.1.3         ##  [76] ggridges_0.5.4         evaluate_0.20          stringr_1.5.0          ##  [79] fastmap_1.1.1          yaml_2.3.7             ragg_1.3.0             ##  [82] goftest_1.2-3          knitr_1.42             fs_1.6.0               ##  [85] fitdistrplus_1.1-8     purrr_1.0.1            pbapply_1.7-0          ##  [88] future_1.30.0          nlme_3.1-157           mime_0.12              ##  [91] compiler_4.2.0         rstudioapi_0.14        plotly_4.10.1          ##  [94] curl_5.2.1             png_0.1-8              spatstat.utils_3.0-1   ##  [97] tibble_3.1.8           bslib_0.7.0            stringi_1.7.12         ## [100] highr_0.10             desc_1.4.2             lattice_0.20-45        ## [103] vctrs_0.6.5            pillar_1.9.0           lifecycle_1.0.3        ## [106] GlobalOptions_0.1.2    spatstat.geom_3.0-6    lmtest_0.9-40          ## [109] jquerylib_0.1.4        RcppAnnoy_0.0.20       data.table_1.14.6      ## [112] cowplot_1.1.1          irlba_2.3.5.1          httpuv_1.6.8           ## [115] patchwork_1.1.2        R6_2.5.1               promises_1.2.0.1       ## [118] KernSmooth_2.23-20     gridExtra_2.3          IRanges_2.30.1         ## [121] parallelly_1.34.0      codetools_0.2-18       MASS_7.3-58.2          ## [124] rjson_0.2.21           rprojroot_2.0.3        sctransform_0.3.5      ## [127] S4Vectors_0.34.0       tidyr_1.3.0            rmarkdown_2.20         ## [130] Rtsne_0.16             spatstat.explore_3.0-6 shiny_1.7.4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"se-recovery-from-single-cell-spatial-data","dir":"Articles","previous_headings":"","what":"SE recovery from single-cell spatial data","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"tutorial, demonstrate recover spatial ecotypes (SEs) single-cell spatial transcriptomics data profiled platforms MERSCOPE, CosMx SMI, Xenium.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"loading-data","dir":"Articles","previous_headings":"SE recovery from single-cell spatial data","what":"Loading data","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"use subset melanoma MERSCOPE sample illustrate SE recovery process. expression data single-cell metadata can downloaded Google Drive. First, download demo data Google Drive load gene expression matrix meta data R.","code":"drive_deauth() # Disable Google sign-in requirement drive_download(as_id(\"13Rc5Rsu8jbnEYYfUse-xQ7ges51LcI7n\"), \"HumanMelanomaPatient1_subset_counts.tsv.gz\", overwrite = TRUE) drive_download(as_id(\"12xcZNhpT-xbhcG8kX1QAdTeM9TKeFAUW\"), \"HumanMelanomaPatient1_subset_scmeta.tsv\", overwrite = TRUE) # Load single-cell gene expression matrix. Rows are genes, columns are cells. scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                  sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1] scdata <- as.matrix(scdata[, -1]) head(scdata[, 1:5]) ##          HumanMelanomaPatient1__cell_3655 HumanMelanomaPatient1__cell_3657 ## PDK4                                    0                                1 ## TNFRSF17                                0                                0 ## ICAM3                                   0                                0 ## FAP                                     1                                0 ## GZMB                                    0                                0 ## TSC2                                    0                                0 ##          HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3660 ## PDK4                                    1                                0 ## TNFRSF17                                0                                0 ## ICAM3                                   0                                0 ## FAP                                     0                                0 ## GZMB                                    0                                0 ## TSC2                                    0                                0 ##          HumanMelanomaPatient1__cell_3661 ## PDK4                                    0 ## TNFRSF17                                0 ## ICAM3                                   0 ## FAP                                     0 ## GZMB                                    0 ## TSC2                                    0 # Load single-cell metadata, with at least three columns, including X, Y, and CellType scmeta <- read.table(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                        sep = \"\\t\",header = TRUE, row.names = 1) scdata = scdata[, match(rownames(scmeta), colnames(scdata))]  head(scmeta[, c(\"X\", \"Y\", \"CellType\")]) ##                                         X         Y   CellType ## HumanMelanomaPatient1__cell_3655 1894.706 -6367.766 Fibroblast ## HumanMelanomaPatient1__cell_3657 1942.480 -6369.602 Fibroblast ## HumanMelanomaPatient1__cell_3658 1963.007 -6374.026 Fibroblast ## HumanMelanomaPatient1__cell_3660 1981.600 -6372.266 Fibroblast ## HumanMelanomaPatient1__cell_3661 1742.939 -6374.851 Fibroblast ## HumanMelanomaPatient1__cell_3663 1921.683 -6383.309 Fibroblast"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"data-normalization","dir":"Articles","previous_headings":"SE recovery from single-cell spatial data","what":"Data normalization","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"gene expression data normalized SE recovery. data can normalized using SCTransform NormalizeData. , normalizing using SCTransform normalization. recommend install glmGamPoi package faster computation. example sample includes nine major cell types, including B cells, CD4+ T cells, CD8+ T cells, NK cells, plasma cells, macrophages, dendritic cells (DC), fibroblasts, endothelial cells.  example sample, annotated four regions, including tumor, inner margin, outer margin, stroma. tumor stroma regions annotated based density cancer cells. inner margin outer margin annotated certain width (250 μm) inside outside tumor regions.","code":"if(!\"glmGamPoi\" %in% installed.packages()){   BiocManager::install(\"glmGamPoi\") } tmpobj <- CreateSeuratObject(scdata) %>%       SCTransform(clip.range = c(-10, 10), verbose = FALSE)  seurat_version = as.integer(gsub(\"\\\\..*\", \"\", as.character(packageVersion(\"SeuratObject\")))) if(seurat_version<5){   normdata <- GetAssayData(tmpobj, \"data\") }else{   normdata <- tmpobj[[\"SCT\"]]$data } normdata <- NormalizeData(scdata) # Visualize the cell type annotations in the tissue SpatialView(scmeta, by = \"CellType\") +   scale_color_manual(values = pals::kelly()[-1]) # Visualize the regions in the tissue SpatialView(scmeta, by = \"Region\") + scale_color_brewer(type = \"qual\", palette = \"Set1\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"se-recovery","dir":"Articles","previous_headings":"SE recovery from single-cell spatial data","what":"SE recovery","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"RecoverSE function used assign single cells SEs. Users can either use default models recover predefined SEs use custom models recover newly defined SEs. Note: recover SEs single-cell data, must specify either celltypes se_results RecoverSE function. neither provided, assume input data represents spot-level spatial transcriptomics, SE abundances inferred directly spot. default NMF models trained discovery MERSCOPE data, encompassing five cancer types: melanoma, four carcinomas. models tailored nine distinct cell types: B cells, CD4+ T cells, CD8+ T cells, NK cells, plasma cells, macrophages, dendritic cells, fibroblasts, endothelial cells. model facilitates recovery SEs single-cell datasets, allowing cell-type-specific SE analysis. Thus, SE recovery using default models, cells query data grouped one “B”, “CD4T”, “CD8T”, “NK”, “Plasma”, “Macrophage”, “DC”, “Fibroblast”, “Endothelial”, case sensitive. cell types considered non-SE compartments.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"using-default-models-1","dir":"Articles","previous_headings":"SE recovery from single-cell spatial data > SE recovery","what":"Using default models (1)","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"SE recovery, recommend perform SpatialEcoTyper analysis, integrate gene expression spatial information learn unified embedding spatial microregions. resulting embedding help refine SE recovery results. detailed tutorial SpatialEcoTyper analysis available Discovery Spatial Ecotypes Single-cell Spatial Dataset. specify se_results RecoverSE function SE recovery.","code":"## Group cells into spatial clusters with a high resolution  ## This step takes ~2 min to finish emb = SpatialEcoTyper(normdata, scmeta, resolution = 10) class(emb) ## [1] \"list\" emb$obj ## A seurat object including the spatial embedding ## An object of class Seurat  ## 1633 features across 1633 samples within 1 assay  ## Active assay: RNA (1633 features, 1633 variable features) ##  2 dimensional reductions calculated: pca, umap head(emb$metadata[, c(\"X\", \"Y\", \"CellType\", \"SE\")])  ## Single-cell meta data with SE annotations ##                                         X         Y   CellType   SE ## HumanMelanomaPatient1__cell_3655 1894.706 -6367.766 Fibroblast <NA> ## HumanMelanomaPatient1__cell_3657 1942.480 -6369.602 Fibroblast  SE9 ## HumanMelanomaPatient1__cell_3658 1963.007 -6374.026 Fibroblast  SE9 ## HumanMelanomaPatient1__cell_3660 1981.600 -6372.266 Fibroblast  SE9 ## HumanMelanomaPatient1__cell_3661 1742.939 -6374.851 Fibroblast SE46 ## HumanMelanomaPatient1__cell_3663 1921.683 -6383.309 Fibroblast <NA> print(unique(emb$metadata$CellType)) ## [1] \"Fibroblast\"  \"Endothelial\" \"DC\"          \"Macrophage\"  \"CD8T\"        ## [6] \"CD4T\"        \"Plasma\"      \"NK\"          \"B\" sepreds <- RecoverSE(normdata, se_results = emb) head(sepreds) ## HumanMelanomaPatient1__cell_3655 HumanMelanomaPatient1__cell_3657  ##                          \"NonSE\"                           \"SE11\"  ## HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3660  ##                           \"SE11\"                           \"SE11\"  ## HumanMelanomaPatient1__cell_3661 HumanMelanomaPatient1__cell_3663  ##                           \"SE01\"                          \"NonSE\""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"using-default-models-2","dir":"Articles","previous_headings":"SE recovery from single-cell spatial data > SE recovery","what":"Using default models (2)","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"can also recover SEs without using spatial embedding, less accurate due lack spatial information. cell type annotations required case. Cells grouped one “B”, “CD4T”, “CD8T”, “NK”, “Plasma”, “Macrophage”, “DC”, “Fibroblast”, “Endothelial”, case sensitive. cell types considered non-SE compartments.","code":"print(unique(scmeta$CellType)) sepreds <- RecoverSE(normdata, celltypes = scmeta$CellType) head(sepreds)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"using-custom-models","dir":"Articles","previous_headings":"SE recovery from single-cell spatial data > SE recovery","what":"Using custom models","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"use custom models, users first develop recovery models following tutorial Development SE Recovery Models. resulting models can used SE recovery. example model available SE_Recovery_W_list.rds. Using custom models specifying Ws argument:","code":"# Download SE recovery model drive_download(as_id(\"1DJbiPeAHm7-4hSIouaeMMyPBWJUyusK9\"), \"SE_Recovery_W_list.rds\") Ws <- readRDS(\"SE_Recovery_W_list.rds\") sepreds <- RecoverSE(normdata, se_results = emb, Ws = Ws) head(sepreds)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"visualization-of-ses-in-the-tissue","dir":"Articles","previous_headings":"SE recovery from single-cell spatial data","what":"Visualization of SEs in the tissue","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"","code":"## Add the recovery result into the meta data scmeta$RecoveredSE <- sepreds[rownames(scmeta)] ## Visualize the SE recovery results SpatialView(scmeta, by = \"RecoveredSE\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"recovery-of-spatial-ecotypes-from-visium-spatial-gene-expression-data","dir":"Articles","previous_headings":"","what":"Recovery of spatial ecotypes from Visium Spatial Gene Expression data","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"SEs can recovered Visium spatial transcriptomics data inferring SE abundances spot. spot can assigned SE highest inferred abundance, allowing spatial mapping SEs across tissue.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"loading-data-1","dir":"Articles","previous_headings":"Recovery of spatial ecotypes from Visium Spatial Gene Expression data","what":"Loading data","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"tutorial, demonstrate recover SEs using breast cancer sample. expression data can accessed : V1_Breast_Cancer_Block_A_Section_1_filtered_feature_bc_matrix.h5, downloaded https://www.10xgenomics.com/datasets. First, download data Google Drive Load expression data R using Read10X_h5 function Seurat package.","code":"drive_download(as_id(\"15D9LgvZmCZUfsL62cD67JMf8Jcq_UyuB\"), \"V1_Breast_Cancer_Block_A_Section_1_filtered_feature_bc_matrix.h5\") drive_download(as_id(\"15NTZc1HrW_gLS_pmi1ckYLw30kNarf4w\"), \"V1_Breast_Cancer_Block_A_Section_1_tissue_positions_list.csv\") ## This download should be done within 1 min. if(!\"hdf5r\" %in% installed.packages()) BiocManager::install(\"hdf5r\") require(\"hdf5r\") # Load Visium gene expression matrix. Rows are genes, columns are spots. dat <- Read10X_h5(\"V1_Breast_Cancer_Block_A_Section_1_filtered_feature_bc_matrix.h5\")  meta <- read.csv(\"V1_Breast_Cancer_Block_A_Section_1_tissue_positions_list.csv\",                   header = FALSE, row.names = 1) colnames(meta) <- c(\"tissue\", \"row\", \"col\", \"imagerow\", \"imagecol\") meta <- meta[colnames(dat), ] head(meta) ##                    tissue row col imagerow imagecol ## AAACAAGTATCTCCCA-1      1  50 102    15632    17782 ## AAACACCAATAACTGC-1      1  59  19    17734     6447 ## AAACAGAGCGACTCCT-1      1  14  94     7079    16716 ## AAACAGGGTCTATATT-1      1  47  13    14882     5637 ## AAACAGTGTTCCTGGG-1      1  73  43    21069     9712 ## AAACATTTCCCGGATT-1      1  61  97    18242    17091"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"data-normalization-1","dir":"Articles","previous_headings":"Recovery of spatial ecotypes from Visium Spatial Gene Expression data","what":"Data normalization","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":", normalize Visium data using NormalizeData.","code":"normdata <- NormalizeData(dat)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"se-recovery-1","dir":"Articles","previous_headings":"Recovery of spatial ecotypes from Visium Spatial Gene Expression data","what":"SE recovery","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"neither celltypes se_results specified, RecoverSE function assume input data gene--spot gene expression matrix. case, function infer SE abundances across spots. Users option either use default models recover predefined SEs apply custom models recover newly defined SEs.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"using-default-models","dir":"Articles","previous_headings":"Recovery of spatial ecotypes from Visium Spatial Gene Expression data > SE recovery","what":"Using default models","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"","code":"preds <- RecoverSE(normdata) head(preds) ##                            SE01         SE02         SE03         SE04 ## AAACAAGTATCTCCCA-1 2.127701e-04 6.877800e-05 3.979458e-01 8.534547e-02 ## AAACACCAATAACTGC-1 1.321616e-01 6.347672e-02 4.580604e-02 9.893653e-02 ## AAACAGAGCGACTCCT-1 1.658118e-01 2.438595e-15 1.257332e-01 1.021615e-01 ## AAACAGGGTCTATATT-1 6.495088e-02 1.975689e-16 2.208619e-01 6.972421e-10 ## AAACAGTGTTCCTGGG-1 9.104830e-02 2.073793e-01 2.579438e-09 6.489594e-02 ## AAACATTTCCCGGATT-1 6.684999e-13 2.987802e-01 2.908525e-08 7.202254e-07 ##                            SE05         SE06         SE07         SE08 ## AAACAAGTATCTCCCA-1 1.162860e-01 1.055567e-05 1.723712e-16 3.026670e-01 ## AAACACCAATAACTGC-1 4.542600e-07 5.479484e-02 4.511416e-01 3.746409e-16 ## AAACAGAGCGACTCCT-1 7.829883e-03 1.888903e-01 3.928577e-05 3.462729e-01 ## AAACAGGGTCTATATT-1 8.604433e-03 2.053562e-11 1.976922e-16 7.055828e-01 ## AAACAGTGTTCCTGGG-1 1.529680e-06 2.046686e-02 2.947065e-01 2.356171e-15 ## AAACATTTCCCGGATT-1 1.993179e-11 2.597762e-08 1.996192e-01 3.022784e-16 ##                            SE09         SE10         SE11 ## AAACAAGTATCTCCCA-1 5.912467e-02 2.078080e-02 1.755819e-02 ## AAACACCAATAACTGC-1 1.616557e-02 1.333849e-01 4.131729e-03 ## AAACAGAGCGACTCCT-1 4.615261e-02 2.635185e-04 1.684507e-02 ## AAACAGGGTCTATATT-1 9.278320e-15 1.739479e-09 1.975689e-16 ## AAACAGTGTTCCTGGG-1 1.582161e-01 1.632831e-01 2.351639e-06 ## AAACATTTCCCGGATT-1 1.697931e-01 2.576151e-01 7.419167e-02 ## This step would take ~3 minutes to complete"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"using-custom-models-1","dir":"Articles","previous_headings":"Recovery of spatial ecotypes from Visium Spatial Gene Expression data > SE recovery","what":"Using custom models","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"use custom models, users first develop recovery models following tutorial Developing SE Recovery Models. resulting models can used SE recovery. example model available SE_Recovery_W_list.rds. specifying Ws parameter (list cell-type-specific W matrices) RecoverSE function, custom models used recovering SEs.","code":"# Download SE recovery model drive_download(as_id(\"1DJbiPeAHm7-4hSIouaeMMyPBWJUyusK9\"), \"SE_Recovery_W_list.rds\", overwrite = TRUE) Ws <- readRDS(\"SE_Recovery_W_list.rds\")  ## Using custom models by specifying the Ws argument preds <- RecoverSE(normdata, Ws = Ws) ## This step would take ~3 minutes to complete"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"visualization-of-ses-in-the-tissue-1","dir":"Articles","previous_headings":"Recovery of spatial ecotypes from Visium Spatial Gene Expression data","what":"Visualization of SEs in the tissue","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"spot can assigned SE highest inferred abundance, spatial mapping SEs can visualized using SpatialView function.","code":"meta$RecoveredSE = colnames(preds)[apply(preds, 1, which.max)] meta$Y = -meta$row SpatialView(meta, by = \"RecoveredSE\", X = \"col\", Y = \"Y\", pt.size = 2)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_Spatial.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Recovery of Spatial Ecotypes from Spatial Transcriptomics Data","text":"session info can invaluable users encounter issues, allows replicate exact environment identify potential discrepancies package versions configurations might causing problems.","code":"sessionInfo() ## R version 4.2.0 (2022-04-22) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur/Monterey 10.16 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] parallel  stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] hdf5r_1.3.8           SpatialEcoTyper_0.0.4 NMF_0.27              ##  [4] Biobase_2.56.0        BiocGenerics_0.42.0   cluster_2.1.4         ##  [7] rngtools_1.5.2        registry_0.5-1        RANN_2.6.1            ## [10] Matrix_1.5-3          googledrive_2.1.1     data.table_1.14.6     ## [13] SeuratObject_4.1.3    Seurat_4.3.0          ggplot2_3.4.0         ## [16] dplyr_1.1.0           ##  ## loaded via a namespace (and not attached): ##   [1] circlize_0.4.15        systemfonts_1.0.4      plyr_1.8.8             ##   [4] igraph_1.3.5           lazyeval_0.2.2         sp_1.6-0               ##   [7] splines_4.2.0          listenv_0.9.0          scattermore_0.8        ##  [10] gridBase_0.4-7         digest_0.6.31          foreach_1.5.2          ##  [13] htmltools_0.5.8.1      fansi_1.0.4            magrittr_2.0.3         ##  [16] memoise_2.0.1          tensor_1.5             doParallel_1.0.17      ##  [19] ROCR_1.0-11            ComplexHeatmap_2.12.1  globals_0.16.2         ##  [22] matrixStats_0.63.0     R.utils_2.12.2         pkgdown_2.0.9          ##  [25] spatstat.sparse_3.0-0  colorspace_2.1-0       ggrepel_0.9.2          ##  [28] textshaping_0.3.7      xfun_0.37              crayon_1.5.2           ##  [31] jsonlite_1.8.4         progressr_0.13.0       spatstat.data_3.0-0    ##  [34] survival_3.5-0         zoo_1.8-11             iterators_1.0.14       ##  [37] glue_1.6.2             polyclip_1.10-4        pals_1.7               ##  [40] gtable_0.3.1           gargle_1.5.1           leiden_0.4.3           ##  [43] GetoptLong_1.0.5       shape_1.4.6            future.apply_1.10.0    ##  [46] maps_3.4.1             abind_1.4-5            scales_1.2.1           ##  [49] DBI_1.1.3              spatstat.random_3.1-3  miniUI_0.1.1.1         ##  [52] Rcpp_1.0.10            viridisLite_0.4.1      xtable_1.8-4           ##  [55] clue_0.3-64            reticulate_1.28        bit_4.0.5              ##  [58] mapproj_1.2.11         stats4_4.2.0           htmlwidgets_1.6.1      ##  [61] httr_1.4.7             RColorBrewer_1.1-3     ellipsis_0.3.2         ##  [64] ica_1.0-3              farver_2.1.1           R.methodsS3_1.8.2      ##  [67] pkgconfig_2.0.3        sass_0.4.9             uwot_0.1.14            ##  [70] deldir_1.0-6           utf8_1.2.3             labeling_0.4.2         ##  [73] tidyselect_1.2.0       rlang_1.1.1            reshape2_1.4.4         ##  [76] later_1.3.0            munsell_0.5.0          tools_4.2.0            ##  [79] cachem_1.0.6           cli_3.6.2              generics_0.1.3         ##  [82] ggridges_0.5.4         evaluate_0.20          stringr_1.5.0          ##  [85] fastmap_1.1.1          yaml_2.3.7             ragg_1.3.0             ##  [88] goftest_1.2-3          bit64_4.0.5            knitr_1.42             ##  [91] fs_1.6.0               fitdistrplus_1.1-8     purrr_1.0.1            ##  [94] pbapply_1.7-0          future_1.30.0          nlme_3.1-157           ##  [97] mime_0.12              R.oo_1.25.0            compiler_4.2.0         ## [100] rstudioapi_0.14        plotly_4.10.1          curl_5.2.1             ## [103] png_0.1-8              spatstat.utils_3.0-1   tibble_3.1.8           ## [106] bslib_0.7.0            stringi_1.7.12         highr_0.10             ## [109] desc_1.4.2             lattice_0.20-45        vctrs_0.6.5            ## [112] pillar_1.9.0           lifecycle_1.0.3        GlobalOptions_0.1.2    ## [115] spatstat.geom_3.0-6    lmtest_0.9-40          jquerylib_0.1.4        ## [118] RcppAnnoy_0.0.20       cowplot_1.1.1          irlba_2.3.5.1          ## [121] httpuv_1.6.8           patchwork_1.1.2        R6_2.5.1               ## [124] promises_1.2.0.1       KernSmooth_2.23-20     gridExtra_2.3          ## [127] IRanges_2.30.1         parallelly_1.34.0      codetools_0.2-18       ## [130] dichromat_2.0-0.1      MASS_7.3-58.2          rjson_0.2.21           ## [133] rprojroot_2.0.3        withr_2.5.0            sctransform_0.3.5      ## [136] S4Vectors_0.34.0       grid_4.2.0             tidyr_1.3.0            ## [139] rmarkdown_2.20         Rtsne_0.16             spatstat.explore_3.0-6 ## [142] shiny_1.7.4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_scRNA.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Recovery of Spatial Ecotypes from Single-Cell Gene Expression Data","text":"tutorial, illustrate recover spatial ecotypes (SEs) single-cell RNA-seq data. First load required packages vignette","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(ggplot2)) suppressPackageStartupMessages(library(parallel)) suppressPackageStartupMessages(library(Seurat)) suppressPackageStartupMessages(library(data.table)) suppressPackageStartupMessages(library(googledrive)) library(SpatialEcoTyper)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_scRNA.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Recovery of Spatial Ecotypes from Single-Cell Gene Expression Data","text":"illustrate SE recovery using melanoma sample, raw count matrix available Melanoma_WU2161_counts.rds single-cell meta data available Melanoma_WU2161_scmeta.rds.","code":"drive_deauth() # Disable Google sign-in requirement # Download single-cell gene expression matrix and meta data. drive_download(as_id(\"15n9zlXed74oeGaO1pythOOM_iWIfuMn2\"), \"Melanoma_WU2161_counts.rds\") drive_download(as_id(\"15apmSDhcANjx3i05LIFIm01gelbP7etA\"), \"Melanoma_WU2161_scmeta.rds\") # Load single-cell gene expression matrix. scdata <- readRDS(\"Melanoma_WU2161_counts.rds\")  # Load single-cell metadata; cell type annotations are required scmeta <- readRDS(\"Melanoma_WU2161_scmeta.rds\") head(scdata[, 1:10]) ## 6 x 10 sparse Matrix of class \"dgCMatrix\" ##                                ## AL627309.1 . . . . . . . . . . ## AL627309.5 . . . 1 . . . . . . ## AP006222.2 . . . . . . . . . . ## AC114498.1 . . . . . . . . . . ## AL669831.2 . . . . . . . . . . ## LINC01409  . . . . . . . . . . head(scmeta) ##                                   CID   CellType ## AAACCTGCACATGACT-1 AAACCTGCACATGACT-1 Macrophage ## AAACCTGGTGGTCCGT-1 AAACCTGGTGGTCCGT-1          B ## AAACCTGGTTTGTGTG-1 AAACCTGGTTTGTGTG-1       CD4T ## AAACCTGTCCGATATG-1 AAACCTGTCCGATATG-1 Macrophage ## AAACCTGTCTAACGGT-1 AAACCTGTCTAACGGT-1          B ## AAACGGGCACTTAAGC-1 AAACGGGCACTTAAGC-1       CD8T unique(scmeta$CellType) ## [1] \"Macrophage\" \"B\"          \"CD4T\"       \"CD8T\"       \"Neuron\"     ## [6] \"Fibroblast\" \"Epithelial\" \"Plasma\""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_scRNA.html","id":"data-normalization","dir":"Articles","previous_headings":"","what":"Data normalization","title":"Recovery of Spatial Ecotypes from Single-Cell Gene Expression Data","text":"data can normalized using SCTransform NormalizeData. , normalizing using SCTransform normalization. recommend install glmGamPoi package faster computation.","code":"if(!\"glmGamPoi\" %in% installed.packages()){   BiocManager::install(\"glmGamPoi\") } tmpobj <- CreateSeuratObject(scdata) %>% SCTransform(verbose = FALSE)  seurat_version = as.integer(gsub(\"\\\\..*\", \"\", as.character(packageVersion(\"SeuratObject\")))) if(seurat_version<5){   normdata <- GetAssayData(tmpobj, \"data\") }else{   normdata <- tmpobj[[\"SCT\"]]$data } normdata <- NormalizeData(scdata)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_scRNA.html","id":"se-recovery","dir":"Articles","previous_headings":"","what":"SE recovery","title":"Recovery of Spatial Ecotypes from Single-Cell Gene Expression Data","text":"RecoverSE function used assign single cells SEs. Users can either use default models recover predefined SEs use custom models recover newly defined SEs. Note: using RecoverSE single-cell RNA-seq data, essential specify celltypes parameter. cell type annotation provided, function assume input data corresponds spot-level spatial transcriptomics, SE abundances inferred directly spot.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_scRNA.html","id":"using-default-models","dir":"Articles","previous_headings":"SE recovery","what":"Using default models","title":"Recovery of Spatial Ecotypes from Single-Cell Gene Expression Data","text":"default NMF models trained discovery MERSCOPE data, encompassing five cancer types: melanoma, four carcinomas. models tailored nine distinct cell types: B cells, CD4+ T cells, CD8+ T cells, NK cells, plasma cells, macrophages, dendritic cells, fibroblasts, endothelial cells. model facilitates recovery SEs single-cell datasets, allowing cell-type-specific SE analysis. SE recovery, cells query data grouped one “B”, “CD4T”, “CD8T”, “NK”, “Plasma”, “Macrophage”, “DC”, “Fibroblast”, “Endothelial”, case sensitive. cell types considered non-SE compartments.","code":"sepreds <- RecoverSE(normdata, celltypes = scmeta$CellType) head(sepreds) ## AAACCTGCACATGACT-1 AAACCTGGTGGTCCGT-1 AAACCTGGTTTGTGTG-1 AAACCTGTCCGATATG-1  ##             \"SE10\"            \"NonSE\"             \"SE01\"             \"SE10\"  ## AAACCTGTCTAACGGT-1 AAACGGGCACTTAAGC-1  ##            \"NonSE\"             \"SE03\""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_scRNA.html","id":"using-custom-models","dir":"Articles","previous_headings":"SE recovery","what":"Using custom models","title":"Recovery of Spatial Ecotypes from Single-Cell Gene Expression Data","text":"use custom models, users first develop recovery models following tutorial Development SE Recovery Models. resulting models can used SE recovery. example model available SE_Recovery_W_list.rds. Download example models Load custom models Using custom models SE recovery specifying Ws argument.","code":"drive_download(as_id(\"1DJbiPeAHm7-4hSIouaeMMyPBWJUyusK9\"), \"SE_Recovery_W_list.rds\", overwrite = TRUE) Ws <- readRDS(\"SE_Recovery_W_list.rds\") names(Ws) ## named list of W matrices ## [1] \"CD4T\"        \"CD8T\"        \"DC\"          \"Endothelial\" \"Fibroblast\"  ## [6] \"Macrophage\"  \"NK\"          \"Plasma\" head(Ws[[1]]) ## feature by SE matrix ##                  SE01      SE02      SE03      SE04      SE05      SE06 ## CD226__pos  0.4145936 0.2555579 0.3323735 0.3241147 0.2263783 0.3279133 ## CDKN1B__pos 0.5729663 0.4552065 0.5120732 0.4627805 0.4453117 0.5156023 ## CXCR4__pos  0.5865790 0.2771225 0.4093821 0.3607076 0.3589891 0.3937211 ## DUSP1__pos  0.4233067 0.3462390 0.2269798 0.1616814 0.3265539 0.2562118 ## KLF2__pos   0.5889618 0.2314586 0.3867504 0.2295206 0.2998234 0.5173246 ## ICAM2__pos  0.4593230 0.2611751 0.4427930 0.3143084 0.3679498 0.4532637 ##                  SE07      SE08      SE09      SE10      SE11 ## CD226__pos  0.2189382 0.3417897 0.2563481 0.2360192 0.2815938 ## CDKN1B__pos 0.4414750 0.4747166 0.4414508 0.3922732 0.3821411 ## CXCR4__pos  0.3751669 0.4456410 0.3023204 0.2629156 0.2729461 ## DUSP1__pos  0.3682236 0.2211759 0.1713413 0.1699067 0.1121763 ## KLF2__pos   0.3570251 0.4327206 0.1732251 0.2086729 0.2118797 ## ICAM2__pos  0.2660441 0.5494585 0.2878338 0.3711269 0.2575091 sepreds <- RecoverSE(normdata, celltypes = scmeta$CellType, Ws = Ws) head(sepreds) ## AAACCTGCACATGACT-1 AAACCTGGTGGTCCGT-1 AAACCTGGTTTGTGTG-1 AAACCTGTCCGATATG-1  ##             \"SE10\"            \"NonSE\"             \"SE01\"             \"SE10\"  ## AAACCTGTCTAACGGT-1 AAACGGGCACTTAAGC-1  ##            \"NonSE\"             \"SE03\""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/Recovery_scRNA.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Recovery of Spatial Ecotypes from Single-Cell Gene Expression Data","text":"session info can invaluable users encounter issues, allows replicate exact environment identify potential discrepancies package versions configurations might causing problems.","code":"sessionInfo() ## R version 4.2.0 (2022-04-22) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur/Monterey 10.16 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] parallel  stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] SpatialEcoTyper_0.0.4 NMF_0.27              Biobase_2.56.0        ##  [4] BiocGenerics_0.42.0   cluster_2.1.4         rngtools_1.5.2        ##  [7] registry_0.5-1        RANN_2.6.1            Matrix_1.5-3          ## [10] googledrive_2.1.1     data.table_1.14.6     SeuratObject_4.1.3    ## [13] Seurat_4.3.0          ggplot2_3.4.0         dplyr_1.1.0           ##  ## loaded via a namespace (and not attached): ##   [1] circlize_0.4.15        systemfonts_1.0.4      plyr_1.8.8             ##   [4] igraph_1.3.5           lazyeval_0.2.2         sp_1.6-0               ##   [7] splines_4.2.0          listenv_0.9.0          scattermore_0.8        ##  [10] gridBase_0.4-7         digest_0.6.31          foreach_1.5.2          ##  [13] htmltools_0.5.8.1      fansi_1.0.4            magrittr_2.0.3         ##  [16] memoise_2.0.1          tensor_1.5             doParallel_1.0.17      ##  [19] ROCR_1.0-11            ComplexHeatmap_2.12.1  globals_0.16.2         ##  [22] matrixStats_0.63.0     pkgdown_2.0.9          spatstat.sparse_3.0-0  ##  [25] colorspace_2.1-0       ggrepel_0.9.2          textshaping_0.3.7      ##  [28] xfun_0.37              crayon_1.5.2           jsonlite_1.8.4         ##  [31] progressr_0.13.0       spatstat.data_3.0-0    survival_3.5-0         ##  [34] zoo_1.8-11             iterators_1.0.14       glue_1.6.2             ##  [37] polyclip_1.10-4        gtable_0.3.1           gargle_1.5.1           ##  [40] leiden_0.4.3           GetoptLong_1.0.5       shape_1.4.6            ##  [43] future.apply_1.10.0    abind_1.4-5            scales_1.2.1           ##  [46] DBI_1.1.3              spatstat.random_3.1-3  miniUI_0.1.1.1         ##  [49] Rcpp_1.0.10            viridisLite_0.4.1      xtable_1.8-4           ##  [52] clue_0.3-64            reticulate_1.28        stats4_4.2.0           ##  [55] htmlwidgets_1.6.1      httr_1.4.7             RColorBrewer_1.1-3     ##  [58] ellipsis_0.3.2         ica_1.0-3              pkgconfig_2.0.3        ##  [61] sass_0.4.9             uwot_0.1.14            deldir_1.0-6           ##  [64] utf8_1.2.3             tidyselect_1.2.0       rlang_1.1.1            ##  [67] reshape2_1.4.4         later_1.3.0            munsell_0.5.0          ##  [70] tools_4.2.0            cachem_1.0.6           cli_3.6.2              ##  [73] generics_0.1.3         ggridges_0.5.4         evaluate_0.20          ##  [76] stringr_1.5.0          fastmap_1.1.1          yaml_2.3.7             ##  [79] ragg_1.3.0             goftest_1.2-3          knitr_1.42             ##  [82] fs_1.6.0               fitdistrplus_1.1-8     purrr_1.0.1            ##  [85] pbapply_1.7-0          future_1.30.0          nlme_3.1-157           ##  [88] mime_0.12              compiler_4.2.0         rstudioapi_0.14        ##  [91] plotly_4.10.1          curl_5.2.1             png_0.1-8              ##  [94] spatstat.utils_3.0-1   tibble_3.1.8           bslib_0.7.0            ##  [97] stringi_1.7.12         desc_1.4.2             lattice_0.20-45        ## [100] vctrs_0.6.5            pillar_1.9.0           lifecycle_1.0.3        ## [103] GlobalOptions_0.1.2    spatstat.geom_3.0-6    lmtest_0.9-40          ## [106] jquerylib_0.1.4        RcppAnnoy_0.0.20       cowplot_1.1.1          ## [109] irlba_2.3.5.1          httpuv_1.6.8           patchwork_1.1.2        ## [112] R6_2.5.1               promises_1.2.0.1       KernSmooth_2.23-20     ## [115] gridExtra_2.3          IRanges_2.30.1         parallelly_1.34.0      ## [118] codetools_0.2-18       MASS_7.3-58.2          rjson_0.2.21           ## [121] rprojroot_2.0.3        withr_2.5.0            sctransform_0.3.5      ## [124] S4Vectors_0.34.0       grid_4.2.0             tidyr_1.3.0            ## [127] rmarkdown_2.20         Rtsne_0.16             spatstat.explore_3.0-6 ## [130] shiny_1.7.4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"tutorial, illustrate perform de novo discovery spatially distinct cellular ecosystems (SEs) single-cell spatial transcriptomics dataset using SpatialEcoTyper function. First load required packages vignette","code":"suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(ggplot2)) suppressPackageStartupMessages(library(parallel)) suppressPackageStartupMessages(library(Seurat)) suppressPackageStartupMessages(library(data.table)) suppressPackageStartupMessages(library(googledrive)) suppressPackageStartupMessages(library(R.utils))  library(SpatialEcoTyper)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"analyzing single-cell spatial transcriptomics data melanoma sample (raw data available Vizgen’s MERSCOPE FFPE Human Immuno-oncology). quickly demonstrate SpatialEcoTyper works, ’ve selected subset sample, can downloaded . Download data Google Drive Large text files can loaded R using fread function data.table package. SpatialEcoTyper supports sparse matrix input. Mtx files can loaded R using ReadMtx function Seurat package.","code":"drive_deauth() # Disable Google sign-in requirement drive_download(as_id(\"13Rc5Rsu8jbnEYYfUse-xQ7ges51LcI7n\"), \"HumanMelanomaPatient1_subset_counts.tsv.gz\") drive_download(as_id(\"12xcZNhpT-xbhcG8kX1QAdTeM9TKeFAUW\"), \"HumanMelanomaPatient1_subset_scmeta.tsv\") # Load single-cell gene expression matrix. Rows are genes, columns are cells. scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                  sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1]  # set genes as row names scdata <- as.matrix(scdata[, -1]) head(scdata[, 1:5]) ##          HumanMelanomaPatient1__cell_3655 HumanMelanomaPatient1__cell_3657 ## PDK4                                    0                                1 ## TNFRSF17                                0                                0 ## ICAM3                                   0                                0 ## FAP                                     1                                0 ## GZMB                                    0                                0 ## TSC2                                    0                                0 ##          HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3660 ## PDK4                                    1                                0 ## TNFRSF17                                0                                0 ## ICAM3                                   0                                0 ## FAP                                     0                                0 ## GZMB                                    0                                0 ## TSC2                                    0                                0 ##          HumanMelanomaPatient1__cell_3661 ## PDK4                                    0 ## TNFRSF17                                0 ## ICAM3                                   0 ## FAP                                     0 ## GZMB                                    0 ## TSC2                                    0 # Load single-cell metadata. Three columns are required, including X, Y, and CellType. Others are optional. scmeta <- read.table(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                        sep = \"\\t\",header = TRUE, row.names = 1) scmeta <- scmeta[colnames(scdata), ] # match the cell ids in scdata and scmeta head(scmeta) ##                                         X         Y   CellType CellTypeName ## HumanMelanomaPatient1__cell_3655 1894.706 -6367.766 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_3657 1942.480 -6369.602 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_3658 1963.007 -6374.026 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_3660 1981.600 -6372.266 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_3661 1742.939 -6374.851 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_3663 1921.683 -6383.309 Fibroblast  Fibroblasts ##                                  Region Dist2Interface ## HumanMelanomaPatient1__cell_3655 Stroma      -883.1752 ## HumanMelanomaPatient1__cell_3657 Stroma      -894.8463 ## HumanMelanomaPatient1__cell_3658 Stroma      -904.1115 ## HumanMelanomaPatient1__cell_3660 Stroma      -907.8909 ## HumanMelanomaPatient1__cell_3661 Stroma      -874.2712 ## HumanMelanomaPatient1__cell_3663 Stroma      -903.6559 drive_download(as_id(\"13M3xhRxp0xK9gf5F4DE9idSBFqVQIXDT\"), \"HumanMelanomaPatient1_subset_counts.mtx.gz\") drive_download(as_id(\"136feRaFjMtNvduLTm5xqa3WhyyoG4Xzo\"), \"HumanMelanomaPatient1_subset_cells.tsv.gz\") drive_download(as_id(\"13QprWzJhzzUy_w3XSrjlt9pjf2n-G7HV\"), \"HumanMelanomaPatient1_subset_genes.tsv.gz\")  scdata <- ReadMtx(mtx = \"HumanMelanomaPatient1_subset_counts.mtx.gz\", cells = \"HumanMelanomaPatient1_subset_cells.tsv.gz\", features = \"HumanMelanomaPatient1_subset_genes.tsv.gz\", feature.column = 1, cell.column = 1)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"data-normalization","dir":"Articles","previous_headings":"","what":"Data normalization","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"gene expression data normalized SpatialEcoTyper analysis. data can normalized using NormalizeData SCTransform. , normalizing using SCTransform normalization. recommend install glmGamPoi package faster computation.","code":"if(!\"glmGamPoi\" %in% installed.packages()){   BiocManager::install(\"glmGamPoi\") } tmpobj <- CreateSeuratObject(scdata) %>%       SCTransform(clip.range = c(-10, 10), verbose = FALSE)  seurat_version = as.integer(gsub(\"\\\\..*\", \"\", as.character(packageVersion(\"SeuratObject\")))) if(seurat_version<5){   normdata <- GetAssayData(tmpobj, \"data\") }else{   normdata <- tmpobj[[\"SCT\"]]$data } normdata <- NormalizeData(scdata)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"preview-of-the-sample","dir":"Articles","previous_headings":"","what":"Preview of the sample","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"demo sample includes spatial expression 500 genes across 27,907 cells, categorized ten cell types, namely B cells, CD4+ T cells, CD8+ T cells, NK cells, plasma cells, macrophages, dendritic cells (DC), fibroblasts, endothelial cells, well cancer cell origin eliminated analysis. Besides, cells grouped four regions, including tumor, inner margin, outer margin, stroma. tumor stroma regions defined based density cancer cells. detailed information tumor stroma annotations, please refer CytoSPACE paper. inner outer margins delineated regions extending 250 μm inside outside tumor boundaries, respectively. SpatialView function can used visualize single cells spatial space, cell type region.   SpatialView function can also used visualize continuous characteristics, minimum distance single cell tumor/stroma margin gene expression levels.","code":"# Visualize the cell type annotations in the tissue SpatialView(scmeta, by = \"CellType\") + scale_color_manual(values = pals::kelly()[-1]) # Visualize the regions in the tissue SpatialView(scmeta, by = \"Region\") + scale_color_brewer(type = \"qual\", palette = \"Set1\") # Visualize the distance to tumor margin SpatialView(scmeta, by = \"Dist2Interface\") +    scale_colour_gradient2(low = \"#5e3c99\", high = \"#e66101\",                           mid = \"#d9d9d9\", midpoint = 0) ## Visualize gene expression in spatial gg <- scmeta gg$Expression <- normdata[\"STAT1\", ] SpatialView(gg, by = \"Expression\") + scale_color_viridis_c()"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"se-discovery-using-spatialecotyper","dir":"Articles","previous_headings":"","what":"SE discovery using SpatialEcoTyper","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"SpatialEcoTyper designed identify spatial ecotypes single-cell spatial transcriptomics data. workflow begins grouping spatially co-localized single cells microregions, cell-type-specific gene expression profiles (GEPs) constructed microregion. Following , similarity networks microregions constructed based cell type-specific GEPs. integrate networks, SpatialEcoTyper utilizes Similarity Network Fusion (SNF) method, originally developed multi-omics data integration (Wang et al., 2014). fused similarity network represents spatial architecture tissue, enabling identification spatial ecotypes (SEs). Finally, SEs detected grouping similar spatial microregions using Louvain algorithm. normdata matrix representing normalized gene expression data, rows correspond genes columns correspond cells. metadata data frame containing metadata associated cell. Must include spatial coordinates (e.g., X Y) well cell type annotations. row names must match column names . outprefix Character string specifying prefix output file names. radius Numeric specifying radius (default: 50 µm) defining spatial microregion. resolution Numeric specifying resolution Louvain clustering (default: 0.8). nfeatures Integer specifying number top variable features (default: 3000) PCA. min.cts.per.region Integer specifying minimum number cell types (default: 2) required microregion. ncores Integer specifying number CPU cores use parallel processing. can type ?SpatialEcoTyper visualize full manual. , show list important parameters including: outprefix specified, SpatialEcoTyper result saved RDS file named outprefix_SpatialEcoTyper_results.rds (Melanoma1_subset_SpatialEcoTyper_results.rds ). SpatialEcoTyper result list includes two key components: (1) Seurat object constructed integrated embedding spatial microregions, allowing detailed analysis visualization spatial architecture; (2) data frame single-cell metadata, now includes annotations discovered spatial ecotypes. annotations can used explore spatial distribution characteristics SEs within tissue.","code":"## This step takes ~2 minutes to complete on macOS with an Apple M1 Pro chip and 16 GB memory. se_results <- SpatialEcoTyper(normdata, scmeta,                               outprefix = \"Melanoma1_subset\",                               radius = 50, ncores = 2) se_results <- readRDS(\"Melanoma1_subset_SpatialEcoTyper_results.rds\") # Extract the Seurat object and updated single-cell metadata obj <- se_results$obj # A Seurat object scmeta <- se_results$metadata %>% arrange(SE) # Updated single-cell meta data, with SE annotation added head(scmeta) ##                                         X         Y   CellType CellTypeName ## HumanMelanomaPatient1__cell_4675 4578.019 -6445.993 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_4738 4529.162 -6504.117 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_4774 4533.228 -6529.591 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_4803 4340.813 -6562.381 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_4806 4401.938 -6567.152 Fibroblast  Fibroblasts ## HumanMelanomaPatient1__cell_4808 4388.422 -6570.215 Fibroblast  Fibroblasts ##                                        Region Dist2Interface  SE ## HumanMelanomaPatient1__cell_4675 Outer margin     -197.09807 SE0 ## HumanMelanomaPatient1__cell_4738 Outer margin     -186.13295 SE0 ## HumanMelanomaPatient1__cell_4774 Outer margin     -199.69317 SE0 ## HumanMelanomaPatient1__cell_4803 Outer margin      -95.54956 SE0 ## HumanMelanomaPatient1__cell_4806 Outer margin     -124.01602 SE0 ## HumanMelanomaPatient1__cell_4808 Outer margin     -119.07031 SE0"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"embedding-of-spatial-architecture","dir":"Articles","previous_headings":"","what":"Embedding of spatial architecture","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"spatial microregions’ embedding can visualized using standard Seurat functions DimPlot FeaturePlot. visualizations help explore spatial organization heterogeneity within tissue.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-tumorstroma-regions-in-the-embedding","dir":"Articles","previous_headings":"Embedding of spatial architecture","what":"Visualizing tumor/stroma regions in the embedding","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"","code":"DimPlot(obj, group.by = \"Region\") + scale_color_brewer(type = \"qual\", palette = \"Set1\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-the-distance-of-microregions-to-tumorstroma-interface","dir":"Articles","previous_headings":"Embedding of spatial architecture","what":"Visualizing the distance of microregions to tumor/stroma interface","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"plot highlights distance spatial microregion tumor/stroma interface, revealing spatial continuum learnt SpatialEcoTyper.","code":"FeaturePlot(obj, \"Dist2Interface\", min.cutoff = -600, max.cutoff = 600) +    scale_colour_gradient2(low = \"#5e3c99\", high = \"#e66101\", mid = \"#d9d9d9\", midpoint = 0)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-spatial-ecotypes-in-the-embedding","dir":"Articles","previous_headings":"Embedding of spatial architecture","what":"Visualizing spatial ecotypes in the embedding","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"plot visualizes SEs within spatial embedding. SEs represent distinct spatial microenvironments, unique cellular compositions spatial characteristics.","code":"DimPlot(obj, group.by = \"SE\") + scale_color_manual(values = pals::kelly()[-1])"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-the-most-abundant-cell-types-in-each-spatial-microregion","dir":"Articles","previous_headings":"Embedding of spatial architecture","what":"Visualizing the most abundant cell types in each spatial microregion","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"","code":"DimPlot(obj, group.by = \"CellType\") +   scale_color_manual(values = pals::kelly()[-1])"},{"path":[]},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-ses-in-the-tissue","dir":"Articles","previous_headings":"SE characteristics","what":"Visualizing SEs in the tissue","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"spatial distribution SEs within tissue can visualized using SpatialView function. visualization provides insights localization spatial organization different SEs across tissue section.  Note: Cells NA values SE annotations excluded analysis. exclusions occur due absence neighboring cells insufficient number detected genes.","code":"SpatialView(scmeta, by = \"SE\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-the-cell-type-composition-of-ses","dir":"Articles","previous_headings":"SE characteristics","what":"Visualizing the cell type composition of SEs","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"bar plot illustrates cell type composition within SE. visualization helps identify dominant cell types SE compare cellular makeup across different SEs.","code":"gg <- scmeta %>% filter(!is.na(SE)) %>% count(SE, CellType) ggplot(gg, aes(SE, n, fill = CellType)) +    geom_bar(stat = \"identity\", position = \"fill\") +   scale_fill_manual(values = pals::kelly()[-1]) +   theme_bw(base_size = 14) + coord_flip() +    labs(y = \"Cell type abundance\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-the-association-between-ses-and-pre-annotated-regions","dir":"Articles","previous_headings":"SE characteristics","what":"Visualizing the association between SEs and pre-annotated regions","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"bar plot shows relationship SEs pre-annotated regions, tumor stroma. proportion SE associated regions displayed, providing insights SEs correspond different tissue regions.","code":"gg <- scmeta %>% filter(!is.na(SE)) %>% count(SE, Region) ggplot(gg, aes(SE, n, fill = Region)) +    geom_bar(stat = \"identity\", position = \"fill\") +    scale_fill_brewer(type = \"qual\", palette = \"Set1\") +   theme_bw(base_size = 14) + coord_flip() +    labs(y = \"Fraction\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-the-distance-of-ses-to-tumorstroma-interface","dir":"Articles","previous_headings":"SE characteristics","what":"Visualizing the distance of SEs to tumor/stroma interface","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"box plot visualizes distribution distances SEs tumor/stroma interface. SEs ordered median distance, highlighting spatial localization SEs.","code":"gg <- scmeta %>% filter(!is.na(SE)) ## Order SEs by their distance to tumor/stroma interface tmp <-  gg %>% group_by(SE) %>% summarise(Mid = median(Dist2Interface)) %>% arrange(Mid) %>% pull(SE) gg$SE = factor(gg$SE, levels = tmp) ggplot(gg, aes(SE, Dist2Interface)) +    geom_boxplot() + theme_bw() + labs(y = \"Distance to tumor/stroma interface (μm)\")"},{"path":[]},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"differential-expression-analysis","dir":"Articles","previous_headings":"Identification of cell-type-specific SE markers","what":"Differential expression analysis","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"identify cell-type-specific SE markers, can perform differential expression analysis using presto package. example identify fibroblast-specific markers SE. Note: MERSCOPE data used SE discovery includes limited number genes. enhance analysis, can extend differential expression analysis whole transcriptome aligning scRNA-seq data spatial transcriptomics data via CytoSPACE.","code":"if(!\"presto\" %in% installed.packages()){    BiocManager::install(c(\"remotes\", \"immunogenomics/presto\")) } require(\"presto\")  # Ensure the normalized data is aligned with the single-cell metadata normdata = normdata[, rownames(scmeta)]  # Perform differential expression analysis for fibroblasts across SEs idx = which(scmeta$CellType==\"Fibroblast\" & !is.na(scmeta$SE)) degs = wilcoxauc(normdata[, idx], scmeta$SE[idx])  # Filter for significant markers with positive log-fold change degs = degs %>% filter(logFC>0 & pval<0.05) %>% arrange(desc(logFC)) head(degs) ##   feature group  avgExpr     logFC statistic       auc          pval ## 1   ACTA2   SE7 2.163320 1.8197807   3798740 0.7728462 3.967332e-181 ## 2 PLA2G2A   SE2 2.026133 1.4387873   5126624 0.8350462 7.288467e-307 ## 3     PKM   SE8 2.323114 1.3090753   1893378 0.8785406 2.013579e-115 ## 4 PLA2G2A   SE4 1.881473 1.2685947   4812222 0.7964803 5.779646e-237 ## 5     FN1   SE3 2.736915 1.0057420   4577625 0.7694509 1.404543e-156 ## 6  COL1A1   SE0 4.357378 0.9544396   8092777 0.8819916  0.000000e+00 ##            padj    pct_in  pct_out ## 1 5.448469e-179  70.41499 31.61094 ## 2 3.002848e-304  91.39896 34.67463 ## 3 4.147972e-113  99.02280 76.12536 ## 4 2.381214e-234  86.27244 35.59561 ## 5 5.786716e-154  98.38710 84.30514 ## 6  0.000000e+00 100.00000 99.35360"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"visualizing-the-expression-of-cell-state-markers","dir":"Articles","previous_headings":"Identification of cell-type-specific SE markers","what":"Visualizing the expression of cell state markers","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"’ve identified potential markers, can visualize expression across SEs. example using STAT1 gene.","code":"## Gene expression across all SEs gg <- scmeta[idx, ] gg$Expression <- normdata[\"STAT1\", idx] ggplot(gg, aes(SE, Expression)) + geom_boxplot() +    theme_classic(base_size = 14) + ylab(\"STAT1 expression\")"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/SingleSample.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Discovery of Spatial Ecotypes from a Single Sample","text":"session info can invaluable users encounter issues, allows replicate exact environment identify potential discrepancies package versions configurations might causing problems.","code":"sessionInfo() ## R version 4.2.0 (2022-04-22) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur/Monterey 10.16 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] parallel  stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] presto_1.0.0          Rcpp_1.0.10           SpatialEcoTyper_0.0.4 ##  [4] NMF_0.27              Biobase_2.56.0        BiocGenerics_0.42.0   ##  [7] cluster_2.1.4         rngtools_1.5.2        registry_0.5-1        ## [10] RANN_2.6.1            Matrix_1.5-3          R.utils_2.12.2        ## [13] R.oo_1.25.0           R.methodsS3_1.8.2     googledrive_2.1.1     ## [16] data.table_1.14.6     SeuratObject_4.1.3    Seurat_4.3.0          ## [19] ggplot2_3.4.0         dplyr_1.1.0           ##  ## loaded via a namespace (and not attached): ##   [1] circlize_0.4.15        systemfonts_1.0.4      plyr_1.8.8             ##   [4] igraph_1.3.5           lazyeval_0.2.2         sp_1.6-0               ##   [7] splines_4.2.0          listenv_0.9.0          scattermore_0.8        ##  [10] gridBase_0.4-7         digest_0.6.31          foreach_1.5.2          ##  [13] htmltools_0.5.8.1      fansi_1.0.4            magrittr_2.0.3         ##  [16] memoise_2.0.1          tensor_1.5             doParallel_1.0.17      ##  [19] ROCR_1.0-11            ComplexHeatmap_2.12.1  globals_0.16.2         ##  [22] matrixStats_0.63.0     pkgdown_2.0.9          spatstat.sparse_3.0-0  ##  [25] colorspace_2.1-0       ggrepel_0.9.2          textshaping_0.3.7      ##  [28] xfun_0.37              crayon_1.5.2           jsonlite_1.8.4         ##  [31] progressr_0.13.0       spatstat.data_3.0-0    survival_3.5-0         ##  [34] zoo_1.8-11             iterators_1.0.14       glue_1.6.2             ##  [37] polyclip_1.10-4        pals_1.7               gtable_0.3.1           ##  [40] gargle_1.5.1           leiden_0.4.3           GetoptLong_1.0.5       ##  [43] shape_1.4.6            future.apply_1.10.0    maps_3.4.1             ##  [46] abind_1.4-5            scales_1.2.1           DBI_1.1.3              ##  [49] spatstat.random_3.1-3  miniUI_0.1.1.1         viridisLite_0.4.1      ##  [52] xtable_1.8-4           clue_0.3-64            reticulate_1.28        ##  [55] mapproj_1.2.11         stats4_4.2.0           htmlwidgets_1.6.1      ##  [58] httr_1.4.7             RColorBrewer_1.1-3     ellipsis_0.3.2         ##  [61] ica_1.0-3              farver_2.1.1           pkgconfig_2.0.3        ##  [64] sass_0.4.9             uwot_0.1.14            deldir_1.0-6           ##  [67] utf8_1.2.3             labeling_0.4.2         tidyselect_1.2.0       ##  [70] rlang_1.1.1            reshape2_1.4.4         later_1.3.0            ##  [73] munsell_0.5.0          tools_4.2.0            cachem_1.0.6           ##  [76] cli_3.6.2              generics_0.1.3         ggridges_0.5.4         ##  [79] evaluate_0.20          stringr_1.5.0          fastmap_1.1.1          ##  [82] yaml_2.3.7             ragg_1.3.0             goftest_1.2-3          ##  [85] knitr_1.42             fs_1.6.0               fitdistrplus_1.1-8     ##  [88] purrr_1.0.1            pbapply_1.7-0          future_1.30.0          ##  [91] nlme_3.1-157           mime_0.12              compiler_4.2.0         ##  [94] rstudioapi_0.14        plotly_4.10.1          curl_5.2.1             ##  [97] png_0.1-8              spatstat.utils_3.0-1   tibble_3.1.8           ## [100] bslib_0.7.0            stringi_1.7.12         highr_0.10             ## [103] desc_1.4.2             lattice_0.20-45        vctrs_0.6.5            ## [106] pillar_1.9.0           lifecycle_1.0.3        GlobalOptions_0.1.2    ## [109] spatstat.geom_3.0-6    lmtest_0.9-40          jquerylib_0.1.4        ## [112] RcppAnnoy_0.0.20       cowplot_1.1.1          irlba_2.3.5.1          ## [115] httpuv_1.6.8           patchwork_1.1.2        R6_2.5.1               ## [118] promises_1.2.0.1       KernSmooth_2.23-20     gridExtra_2.3          ## [121] IRanges_2.30.1         parallelly_1.34.0      codetools_0.2-18       ## [124] dichromat_2.0-0.1      MASS_7.3-58.2          rjson_0.2.21           ## [127] rprojroot_2.0.3        withr_2.5.0            sctransform_0.3.5      ## [130] S4Vectors_0.34.0       grid_4.2.0             tidyr_1.3.0            ## [133] rmarkdown_2.20         Rtsne_0.16             spatstat.explore_3.0-6 ## [136] shiny_1.7.4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"development-of-se-recovery-models","dir":"Articles","previous_headings":"","what":"Development of SE recovery models","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"performing Spatial EcoTyper analysis, users can develop machine learning models recover spatial ecotypes (SEs) various types gene expression data, including spatial transcriptomics single-cell RNA-seq. First load required packages vignette","code":"suppressPackageStartupMessages(library(googledrive)) suppressPackageStartupMessages(library(Seurat)) suppressPackageStartupMessages(library(NMF)) suppressPackageStartupMessages(library(data.table)) suppressPackageStartupMessages(library(dplyr)) library(SpatialEcoTyper)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"loading-data","dir":"Articles","previous_headings":"Development of SE recovery models","what":"Loading data","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"tutorial, use Vizgen MERSCOPE data melanoma sample demonstrate process training SE recovery models. training requires gene expression matrix, cell type annotations, SE annotations. cell type SE annotations can obtained SpatialEcoTyper results, available Melanoma1_subset_SpatialEcoTyper_results.rds. gene expression matrix melanoma sample can downloaded . Download data Google Drive Load gene expression matrix Load cell type SE annotations","code":"drive_deauth() # Disable Google sign-in requirement drive_download(as_id(\"13Rc5Rsu8jbnEYYfUse-xQ7ges51LcI7n\"), \"HumanMelanomaPatient1_subset_counts.tsv.gz\") drive_download(as_id(\"1mKz0IHHUGYpS7GpDuNh93YAEPLbd-vTE\"), \"Melanoma1_subset_SpatialEcoTyper_results.rds\") scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                  sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1] scdata <- as.matrix(scdata[, -1]) head(scdata[, 1:5]) ##          HumanMelanomaPatient1__cell_3655 HumanMelanomaPatient1__cell_3657 ## PDK4                                    0                                1 ## TNFRSF17                                0                                0 ## ICAM3                                   0                                0 ## FAP                                     1                                0 ## GZMB                                    0                                0 ## TSC2                                    0                                0 ##          HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3660 ## PDK4                                    1                                0 ## TNFRSF17                                0                                0 ## ICAM3                                   0                                0 ## FAP                                     0                                0 ## GZMB                                    0                                0 ## TSC2                                    0                                0 ##          HumanMelanomaPatient1__cell_3661 ## PDK4                                    0 ## TNFRSF17                                0 ## ICAM3                                   0 ## FAP                                     0 ## GZMB                                    0 ## TSC2                                    0 se_results <- readRDS(\"Melanoma1_subset_SpatialEcoTyper_results.rds\") scmeta = se_results$metadata scmeta$SE[is.na(scmeta$SE)] = \"NonSE\" ## cells with NA predictions were assigned into the NonSE group head(scmeta[, c(\"CellType\", \"SE\")]) ##                                    CellType    SE ## HumanMelanomaPatient1__cell_3655 Fibroblast NonSE ## HumanMelanomaPatient1__cell_3657 Fibroblast   SE7 ## HumanMelanomaPatient1__cell_3658 Fibroblast   SE7 ## HumanMelanomaPatient1__cell_3660 Fibroblast   SE7 ## HumanMelanomaPatient1__cell_3661 Fibroblast   SE2 ## HumanMelanomaPatient1__cell_3663 Fibroblast NonSE"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"data-normalization","dir":"Articles","previous_headings":"Development of SE recovery models","what":"Data normalization","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"data can normalized using SCTransform NormalizeData. , normalizing using SCTransform normalization. recommend install glmGamPoi package faster computation.","code":"if(!\"glmGamPoi\" %in% installed.packages()){   BiocManager::install(\"glmGamPoi\") } tmpobj <- CreateSeuratObject(scdata) %>%       SCTransform(clip.range = c(-10, 10), verbose = FALSE)  seurat_version = as.integer(gsub(\"\\\\..*\", \"\", as.character(packageVersion(\"SeuratObject\")))) if(seurat_version<5){   normdata <- GetAssayData(tmpobj, \"data\") }else{   normdata <- tmpobj[[\"SCT\"]]$data } normdata <- NormalizeData(scdata)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"training","dir":"Articles","previous_headings":"Development of SE recovery models","what":"Training","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"NMFGenerateWList function used train cell-type specific NMF models recovering SEs. Prior NMF, gene scaled mean 0 unit variance within cell type-specific expression matrix. satisfy non-negativity requirement NMF, cell type-specific expression matrices individually processed using posneg transformation, converts expression matrix two matrices, one containing positive values containing negative values sign inverted. two matrices subsequently concatenated produce training data. NMFGenerateWList function return list feature × SE matrices, representing cell type-specific gene signature matrix rows features columns SEs. Note: default, NMFGenerateWList selects top 2000 variable features (nfeature argument) -samples 2500 cells (downsample argument) within cell type training. training, retains 50 genes per SE (nfeature.per.se argument) model. Users can tune parameters accordingly. resulting W matrices used recover SEs spatial transcriptomics single-cell RNA-seq, using RecoverSE function. detailed documentation SE recovery available Recovery Spatial Ecotypes Single-Cell Gene Expression Data Recovery Spatial Ecotypes Spatial Transcriptomics Data.","code":"# Before training, ensure that the rows in scmeta matches the columns in normdata. normdata = normdata[, match(rownames(scmeta), colnames(normdata))] Ws = NMFGenerateWList(normdata, scmeta,                        CellType = \"CellType\",                        SE = \"SE\") ## This step would take ~3 mins for the demo. class(Ws) ## [1] \"list\" names(Ws) ## [1] \"B\"           \"CD4T\"        \"CD8T\"        \"DC\"          \"Endothelial\" ## [6] \"Fibroblast\"  \"Macrophage\"  \"NK\"          \"Plasma\" head(Ws[[2]]) ##                   SE1        SE4        SE0       SE6       SE3          SE7 ## ICAM3__pos  0.4602828 0.68105485 0.46715694 0.4675082 0.3917796 6.925485e-01 ## GZMB__pos   0.2488416 0.04870433 0.23949332 0.1045887 0.1098433 2.307047e-01 ## TSC2__pos   0.1187636 0.22960960 0.05278382 0.1243373 0.1470809 2.220446e-16 ## NKG7__pos   0.3449571 0.07637514 0.17873518 0.2234147 0.2530152 2.220446e-16 ## COL1A1__pos 0.3015023 0.17120270 0.62971107 0.2225017 0.3198627 6.758001e-01 ## NFKB1__pos  0.4968451 0.54468453 0.41478627 0.3769514 0.3119630 5.615067e-01 ##                    SE5          SE8          SE2        NonSE ## ICAM3__pos  0.35733113 3.734384e-01 4.443022e-01 2.695361e-01 ## GZMB__pos   0.09598664 6.517511e-01 2.191695e-01 1.511514e-01 ## TSC2__pos   0.07541921 2.220446e-16 2.220446e-16 2.220446e-16 ## NKG7__pos   0.36767473 4.190680e-01 3.224955e-01 2.220446e-16 ## COL1A1__pos 0.26242749 8.284001e-02 3.852061e-01 4.427656e-01 ## NFKB1__pos  0.55042603 4.694376e-01 1.649369e-01 1.801613e-01"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"development-of-se-deconvolution-model","dir":"Articles","previous_headings":"","what":"Development of SE deconvolution model","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"Users can also develop NMF model deconvolve SEs bulk gene expression data. training data can pseudo-bulk mixtures aggregating single-cell transcriptomics. tutorial, create pseudo-bulk mixtures single-cell RNA-seq data melanoma sample, also used tutorial Recovery Spatial Ecotypes Single-Cell Gene Expression Data. raw count data available Melanoma_WU2161_counts.rds SE recovery results available Melanoma_WU2161_RecoveredSEs.rds.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"loading-data-1","dir":"Articles","previous_headings":"Development of SE deconvolution model","what":"Loading data","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"","code":"# Download single-cell gene expression matrix and SE recovery results. drive_download(as_id(\"15n9zlXed74oeGaO1pythOOM_iWIfuMn2\"), \"Melanoma_WU2161_counts.rds\") drive_download(as_id(\"1nzhKQM6HtX_rzzn3edSQsbodFBO5ycYG\"), \"Melanoma_WU2161_RecoveredSEs.rds\") # Load single-cell gene expression matrix. counts <- readRDS(\"Melanoma_WU2161_counts.rds\") head(counts[, 1:10]) ## 6 x 10 sparse Matrix of class \"dgCMatrix\" ##                                ## AL627309.1 . . . . . . . . . . ## AL627309.5 . . . 1 . . . . . . ## AP006222.2 . . . . . . . . . . ## AC114498.1 . . . . . . . . . . ## AL669831.2 . . . . . . . . . . ## LINC01409  . . . . . . . . . . # Load SE recovery results SEs = readRDS(\"Melanoma_WU2161_RecoveredSEs.rds\") head(SEs) ## AAACCTGCACATGACT-1 AAACCTGGTGGTCCGT-1 AAACCTGGTTTGTGTG-1 AAACCTGTCCGATATG-1  ##             \"SE10\"            \"NonSE\"             \"SE01\"             \"SE10\"  ## AAACCTGTCTAACGGT-1 AAACGGGCACTTAAGC-1  ##            \"NonSE\"             \"SE03\""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"creating-pseudobulk-data","dir":"Articles","previous_headings":"Development of SE deconvolution model","what":"Creating pseudobulk data","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"CreatePseudobulks function used create pseudo-bulk mixtures single-cell (spatial) transcriptomics data cells grouped SEs. samples cell fractions Gaussian distribution, sets negative fractions 0 re-normalizes fractions sum 1 across SEs. Based resulting fractions, samples 1,000 cells per pseudo-bulk mixture replacement, aggregates transcriptomes non-log linear space, normalize resulting mixture logarithm CPM using Seurat’s NormalizeData.","code":"result = CreatePseudobulks(counts = counts, groups = SEs, n_mixtures = 100) head(result$Mixtures[, 1:5]) ## Gene expression matrix of pseudobulks ## 6 x 5 sparse Matrix of class \"dgCMatrix\" ##             Pseudobulk1 Pseudobulk2  Pseudobulk3 Pseudobulk4  Pseudobulk5 ## AL627309.1 0.0343937521 0.021640535 0.0170462425 0.014167639 0.0153182452 ## AL627309.5 0.0639772941 0.052209771 0.0527358043 0.043242637 0.0495989846 ## AP006222.2 0.0005117182 0.003035767 0.0004621582 0.001253268 0.0004626203 ## AC114498.1 .            .           .            0.006997929 0.0009235317 ## AL669831.2 0.0003700004 0.001110700 0.0003700004 0.001110700 0.0011106999 ## LINC01409  0.0292987853 0.034893356 0.0359603217 0.020077520 0.0287993391 head(result$Fracs) ## SE fractions in pseudobulks ##                  NonSE       SE01       SE02       SE03       SE04       SE05 ## Pseudobulk1 0.11235130 0.13806322 0.09011557 0.07781085 0.13683850 0.04875623 ## Pseudobulk2 0.07805355 0.05541045 0.12062976 0.06458164 0.09817475 0.08205461 ## Pseudobulk3 0.07979042 0.11866467 0.09893247 0.10360987 0.08585473 0.08719972 ## Pseudobulk4 0.13133824 0.11739958 0.03449139 0.04325339 0.09051472 0.08992931 ## Pseudobulk5 0.06343129 0.09475496 0.11817109 0.00643102 0.10974664 0.06458885 ## Pseudobulk6 0.07562488 0.09858894 0.17418506 0.04682772 0.06299713 0.05126319 ##                   SE06       SE07       SE08       SE09       SE10       SE11 ## Pseudobulk1 0.03860297 0.04623464 0.05792983 0.09854653 0.06519633 0.08955402 ## Pseudobulk2 0.08688914 0.10248104 0.10326609 0.04826384 0.07551141 0.08468373 ## Pseudobulk3 0.11771347 0.03439627 0.11011146 0.03980684 0.03433973 0.08958035 ## Pseudobulk4 0.07696805 0.08457932 0.10827692 0.09354075 0.09662320 0.03308514 ## Pseudobulk5 0.06665770 0.13418141 0.11607981 0.04818743 0.10910353 0.06866627 ## Pseudobulk6 0.09638301 0.08546799 0.08951046 0.13391742 0.04531018 0.03992402"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"training-1","dir":"Articles","previous_headings":"Development of SE deconvolution model","what":"Training","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"NMFGenerateW function used train NMF model SE deconvolution based provided SE fractions gene expression matrix. applying NMF, gene’s expression scaled mean 0 unit variance (recommended). meet non-negativity requirement NMF, expression matrix transformed using posneg method. transformation splits expression matrix two matrices: one containing positive values containing absolute values negative values. two matrices concatenated form final training data NMF model. Note: default, NMFGenerateW selects top 2000 variable features (nfeature argument) training. training, retains 50 genes per SE (nfeature.per.se argument) model. Users can tune parameters accordingly. resulting W matrix can used infer SE sbundances bulk gene expression profiles, using DeconvoluteSE function. detailed documentation SE deconvolution available Recovery Spatial Ecotypes Bulk Gene Expression Data.","code":"W = NMFGenerateW(t(result$Fracs), result$Mixtures) ## This step would take ~1 min for the demo. head(W) ##                      NonSE         SE01         SE02         SE03         SE04 ## IGKV3-11__pos 2.220446e-16 2.220446e-16 1.297543e-11 3.680766e-01 4.577781e-02 ## IGLV3-19__pos 2.220446e-16 2.220446e-16 2.220446e-16 1.166077e-14 2.220446e-16 ## IGLV6-57__pos 1.933388e-05 9.010422e-01 4.752353e-07 3.778070e+00 5.905614e-09 ## IGLV1-51__pos 3.961831e-02 1.174834e-01 2.220446e-16 5.177512e+00 3.443881e-01 ## IGKV1-6__pos  1.018897e-13 1.321957e-03 2.220446e-16 1.981312e-06 2.069945e-03 ## IGHV3-49__pos 1.178233e-11 5.771047e-01 2.220446e-16 1.256758e-06 6.744953e-02 ##                       SE05         SE06         SE07         SE08         SE09 ## IGKV3-11__pos 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 ## IGLV3-19__pos 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 ## IGLV6-57__pos 7.026100e-09 1.298919e-11 3.597849e-11 1.211816e-01 4.107317e-11 ## IGLV1-51__pos 2.220446e-16 3.529110e-07 3.978048e-16 2.220446e-16 2.220446e-16 ## IGKV1-6__pos  2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 2.220446e-16 ## IGHV3-49__pos 2.220446e-16 2.220446e-16 2.220446e-16 5.343617e+00 2.220446e-16 ##                       SE10         SE11 ## IGKV3-11__pos 1.034755e-08 4.696292e+00 ## IGLV3-19__pos 2.220446e-16 5.177722e+00 ## IGLV6-57__pos 6.337725e-01 1.826789e-09 ## IGLV1-51__pos 5.065311e-05 7.663140e-09 ## IGKV1-6__pos  2.749733e-05 4.986856e+00 ## IGHV3-49__pos 2.220446e-16 6.721149e-08"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/articles/TrainRecoveryModels.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Development of NMF Models for Spatial Ecotype Recovery","text":"session info can invaluable users encounter issues, allows replicate exact environment identify potential discrepancies package versions configurations might causing problems.","code":"sessionInfo() ## R version 4.2.0 (2022-04-22) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Big Sur/Monterey 10.16 ##  ## Matrix products: default ## BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib ##  ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ##  ## attached base packages: ## [1] parallel  stats     graphics  grDevices utils     datasets  methods   ## [8] base      ##  ## other attached packages: ##  [1] SpatialEcoTyper_0.0.4 RANN_2.6.1            Matrix_1.5-3          ##  [4] dplyr_1.1.0           data.table_1.14.6     NMF_0.27              ##  [7] Biobase_2.56.0        BiocGenerics_0.42.0   cluster_2.1.4         ## [10] rngtools_1.5.2        registry_0.5-1        SeuratObject_4.1.3    ## [13] Seurat_4.3.0          googledrive_2.1.1     ##  ## loaded via a namespace (and not attached): ##   [1] circlize_0.4.15        systemfonts_1.0.4      plyr_1.8.8             ##   [4] igraph_1.3.5           lazyeval_0.2.2         sp_1.6-0               ##   [7] splines_4.2.0          listenv_0.9.0          scattermore_0.8        ##  [10] ggplot2_3.4.0          gridBase_0.4-7         digest_0.6.31          ##  [13] foreach_1.5.2          htmltools_0.5.8.1      fansi_1.0.4            ##  [16] magrittr_2.0.3         memoise_2.0.1          tensor_1.5             ##  [19] doParallel_1.0.17      ROCR_1.0-11            ComplexHeatmap_2.12.1  ##  [22] globals_0.16.2         matrixStats_0.63.0     R.utils_2.12.2         ##  [25] pkgdown_2.0.9          spatstat.sparse_3.0-0  colorspace_2.1-0       ##  [28] ggrepel_0.9.2          textshaping_0.3.7      xfun_0.37              ##  [31] crayon_1.5.2           jsonlite_1.8.4         progressr_0.13.0       ##  [34] spatstat.data_3.0-0    survival_3.5-0         zoo_1.8-11             ##  [37] iterators_1.0.14       glue_1.6.2             polyclip_1.10-4        ##  [40] gtable_0.3.1           gargle_1.5.1           leiden_0.4.3           ##  [43] GetoptLong_1.0.5       shape_1.4.6            future.apply_1.10.0    ##  [46] abind_1.4-5            scales_1.2.1           DBI_1.1.3              ##  [49] spatstat.random_3.1-3  miniUI_0.1.1.1         Rcpp_1.0.10            ##  [52] viridisLite_0.4.1      xtable_1.8-4           clue_0.3-64            ##  [55] reticulate_1.28        stats4_4.2.0           htmlwidgets_1.6.1      ##  [58] httr_1.4.7             RColorBrewer_1.1-3     ellipsis_0.3.2         ##  [61] ica_1.0-3              R.methodsS3_1.8.2      pkgconfig_2.0.3        ##  [64] sass_0.4.9             uwot_0.1.14            deldir_1.0-6           ##  [67] utf8_1.2.3             tidyselect_1.2.0       rlang_1.1.1            ##  [70] reshape2_1.4.4         later_1.3.0            munsell_0.5.0          ##  [73] tools_4.2.0            cachem_1.0.6           cli_3.6.2              ##  [76] generics_0.1.3         ggridges_0.5.4         evaluate_0.20          ##  [79] stringr_1.5.0          fastmap_1.1.1          yaml_2.3.7             ##  [82] ragg_1.3.0             goftest_1.2-3          knitr_1.42             ##  [85] fs_1.6.0               fitdistrplus_1.1-8     purrr_1.0.1            ##  [88] pbapply_1.7-0          future_1.30.0          nlme_3.1-157           ##  [91] mime_0.12              R.oo_1.25.0            compiler_4.2.0         ##  [94] rstudioapi_0.14        plotly_4.10.1          curl_5.2.1             ##  [97] png_0.1-8              spatstat.utils_3.0-1   tibble_3.1.8           ## [100] bslib_0.7.0            stringi_1.7.12         desc_1.4.2             ## [103] lattice_0.20-45        vctrs_0.6.5            pillar_1.9.0           ## [106] lifecycle_1.0.3        GlobalOptions_0.1.2    spatstat.geom_3.0-6    ## [109] lmtest_0.9-40          jquerylib_0.1.4        RcppAnnoy_0.0.20       ## [112] cowplot_1.1.1          irlba_2.3.5.1          httpuv_1.6.8           ## [115] patchwork_1.1.2        R6_2.5.1               promises_1.2.0.1       ## [118] KernSmooth_2.23-20     gridExtra_2.3          IRanges_2.30.1         ## [121] parallelly_1.34.0      codetools_0.2-18       MASS_7.3-58.2          ## [124] rjson_0.2.21           rprojroot_2.0.3        withr_2.5.0            ## [127] sctransform_0.3.5      S4Vectors_0.34.0       grid_4.2.0             ## [130] tidyr_1.3.0            rmarkdown_2.20         Rtsne_0.16             ## [133] spatstat.explore_3.0-6 shiny_1.7.4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wubing Zhang. Author, maintainer.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhang W (2024). SpatialEcoTyper: Spatial ecotype analaysis. R package version 0.0.4, https://digitalcytometry.github/SpatialEcoTyper.","code":"@Manual{,   title = {SpatialEcoTyper: Spatial ecotype analaysis},   author = {Wubing Zhang},   year = {2024},   note = {R package version 0.0.4},   url = {https://digitalcytometry.github/SpatialEcoTyper}, }"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/index.html","id":"identification-of-spatial-cellular-communities-ecotypes-from-single-cell-spatial-transcriptomes","dir":"","previous_headings":"","what":"Spatial ecotype analaysis","title":"Spatial ecotype analaysis","text":"SpatialEcoTyper comprehensive framework systematic analysis spatial cellular communities, known ecotypes, single-cell spatial transcriptomics data. tool available R package, detailed documentation accessible https://digitalcytometry.github.io/SpatialEcoTyper. Additionally, SpatialEcoTyper can used via web platform https://ecotyper.stanford.edu/, enables recovery spatial ecotypes various data types, including single-cell spatial data, scRNA-seq data, Visium spatial transcriptomics data, bulk tumor expression data.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Spatial ecotype analaysis","text":"SpatialEcoTyper R package can installed using BiocManager package R console. encounter difficulties installing dependencies, try installing specific versions used development SpatialEcoTyper commands : installation within R console fails, can also try installing necessary packages via conda install mamba install. instance: source code SpatialEcoTyper available https://github.com/digitalcytometry/SpatialEcoTyper. downloading package, can install source code using command:","code":"if(!\"BiocManager\" %in% installed.packages()){   install.packages(\"BiocManager\") }  ## Install dependencies BiocManager::install(c(\"Seurat\", \"NMF\", \"RANN\", \"parallel\", \"dplyr\", \"pals\",                         \"data.table\", \"ComplexHeatmap\", \"googledrive\"))  ## Install SpatialEcoTyper BiocManager::install(\"digitalcytometry/SpatialEcoTyper\") install.packages(\"https://cran.r-project.org/src/contrib/Archive/Matrix/Matrix_1.5-3.tar.gz\", repo = NULL, type = \"source\") install.packages(\"http://cran.r-project.org/src/contrib/Archive/sctransform/sctransform_0.3.5.tar.gz\", repo = NULL, type = \"source\") install.packages(\"https://cran.r-project.org/src/contrib/Archive/SeuratObject/SeuratObject_4.1.3.tar.gz\", repo = NULL, type = \"source\") install.packages('remotes') # Install the remotes package remotes::install_version(package = 'Seurat', version = package_version(\"4.3.0\")) install.packages(\"NMF\") install.packages(\"RANN\") install.packages(\"dichromat\") install.packages(\"https://cran.r-project.org/src/contrib/Archive/maps/maps_3.4.1.tar.gz\", repo = NULL, type = \"source\") install.packages(\"mapproj\") install.packages(\"https://cran.r-project.org/src/contrib/Archive/pals/pals_1.7.tar.gz\", repo = NULL, type = \"source\") install.packages(\"https://cran.r-project.org/src/contrib/Archive/data.table/data.table_1.14.6.tar.gz\", repo = NULL, type = \"source\") BiocManager::install(\"ComplexHeatmap\") install.packages(\"googledrive\") conda install mamba mamba install bioconda::bioconductor-complexheatmap mamba install bioconda::r-seurat mamba install r::r-nmf install.packages(\"SpatialEcoTyper.tar.gz\", repos = NULL)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/index.html","id":"spatialecotyper-overview","dir":"","previous_headings":"","what":"SpatialEcoTyper overview","title":"Spatial ecotype analaysis","text":"provide 6 tutorials illustrating functionalities included SpatialEcoTyper. first tutorial demonstrate identify spatial ecotypes single-cell spatial transcriptomics data. second demonstrate integrate spatial ecotypes across multiple samples. third demonstrate develop NMF models recovery spatial ecotypes unseen data. remaining tutorials introduce recover spatial ecotypes spatial transcriptomics, scRNA-seq, bulk RNA-seq data. Tutorial 1: Discovery Spatial Ecotypes Single Sample Tutorial 2: Discovery Spatial Ecotypes Multiple Samples Tutorial 3: Development NMF Models Spatial Ecotype Recovery Tutorial 4: Recovery Spatial Ecotypes Spatial Transcriptomics Data Tutorial 5: Recovery Spatial Ecotypes Single-Cell Gene Expression Data Tutorial 6: Recovery Spatial Ecotypes Bulk Gene Expression Data","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/index.html","id":"contribution","dir":"","previous_headings":"","what":"Contribution","title":"Spatial ecotype analaysis","text":"encounter bugs suggestions improvements, please feel free open issue submit pull request. feedback contributions help us make tool better everyone.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Spatial ecotype analaysis","text":"Please see LICENSE file.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/index.html","id":"authors","dir":"","previous_headings":"","what":"Authors","title":"Spatial ecotype analaysis","text":"SpatialEcoTyper developed Newman Lab Wubing Zhang.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Spatial ecotype analaysis","text":"use SpatialEcoTyper, please cite:","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/AnnotateCells.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Spatial Ecotype Annotations for Single Cells — AnnotateCells","title":"Extract Spatial Ecotype Annotations for Single Cells — AnnotateCells","text":"function adds spatial ecotype annotations metadata single cells.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/AnnotateCells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Spatial Ecotype Annotations for Single Cells — AnnotateCells","text":"","code":"AnnotateCells(scmeta, obj)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/AnnotateCells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Spatial Ecotype Annotations for Single Cells — AnnotateCells","text":"scmeta Data frame containing single-cell metadata. Two columns (X Y) spatial coordinates required. obj Seurat object returned SpatialEcoTyper function.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/AnnotateCells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Spatial Ecotype Annotations for Single Cells — AnnotateCells","text":"modified version `scmeta` spatial ecotype annotations added.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/AnnotateCells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Spatial Ecotype Annotations for Single Cells — AnnotateCells","text":"","code":"library(data.table) #>  #> Attaching package: ‘data.table’ #> The following objects are masked from ‘package:dplyr’: #>  #>     between, first, last library(Seurat) library(SpatialEcoTyper) library(googledrive) drive_deauth() # no Google sign-in is required ## Download a single-cell meta data drive_download(as_id(\"1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI\"),                     \"HumanMelanomaPatient1_subset_scmeta.tsv\",                      overwrite = TRUE) #> File downloaded: #> • HumanMelanomaPatient1_subset_scmeta.tsv #>   <id: 1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI> #> Saved locally as: #> • HumanMelanomaPatient1_subset_scmeta.tsv ## Obtain a Seurat object from SpatialEcoTyper result drive_download(as_id(\"1nSPj2zRywFUdbo1fwiz77ds4NuM6bmV2\"),               \"Melanoma1_subset_SpatialEcoTyper_results.rds\", overwrite = TRUE) #> File downloaded: #> • Melanoma1_subset_SpatialEcoTyper_results.rds #>   <id: 1nSPj2zRywFUdbo1fwiz77ds4NuM6bmV2> #> Saved locally as: #> • Melanoma1_subset_SpatialEcoTyper_results.rds  scmeta <- read.table(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                      sep = \"\\t\", header = TRUE, row.names = 1) head(scmeta) #>                                         X         Y   CellType CellTypeName #> HumanMelanomaPatient1__cell_3655 1894.706 -6367.766 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3657 1942.480 -6369.602 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3658 1963.007 -6374.026 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3660 1981.600 -6372.266 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3661 1742.939 -6374.851 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3663 1921.683 -6383.309 Fibroblast  Fibroblasts #>                                  Region Dist2Interface #> HumanMelanomaPatient1__cell_3655 Stroma      -883.1752 #> HumanMelanomaPatient1__cell_3657 Stroma      -894.8463 #> HumanMelanomaPatient1__cell_3658 Stroma      -904.1115 #> HumanMelanomaPatient1__cell_3660 Stroma      -907.8909 #> HumanMelanomaPatient1__cell_3661 Stroma      -874.2712 #> HumanMelanomaPatient1__cell_3663 Stroma      -903.6559 obj <- readRDS(\"Melanoma1_subset_SpatialEcoTyper_results.rds\")$obj  ## Transfer SE annotations to single cells scmeta <- AnnotateCells(scmeta = scmeta, obj = obj) head(scmeta) #>                                         X         Y   CellType CellTypeName #> HumanMelanomaPatient1__cell_3655 1894.706 -6367.766 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3657 1942.480 -6369.602 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3658 1963.007 -6374.026 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3660 1981.600 -6372.266 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3661 1742.939 -6374.851 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3663 1921.683 -6383.309 Fibroblast  Fibroblasts #>                                  Region Dist2Interface   SE #> HumanMelanomaPatient1__cell_3655 Stroma      -883.1752 <NA> #> HumanMelanomaPatient1__cell_3657 Stroma      -894.8463  SE7 #> HumanMelanomaPatient1__cell_3658 Stroma      -904.1115  SE7 #> HumanMelanomaPatient1__cell_3660 Stroma      -907.8909  SE7 #> HumanMelanomaPatient1__cell_3661 Stroma      -874.2712  SE2 #> HumanMelanomaPatient1__cell_3663 Stroma      -903.6559 <NA>"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvg.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvg","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvg","text":"Compute Cell-Type-Specific Average Expression Spatial Clusters","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvg","text":"","code":"ComputeAvg(   normdata,   scmeta,   cluster = \"SE\",   Region = NULL,   scale = TRUE,   ncores = 4 )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvg","text":"normdata Numeric matrix normalized expression data, rows represent genes columns represent cells. scmeta Data frame containing metadata associated cell, including spatial cluster cell type annotations. cluster Character string specifying column name 'scmeta' containing spatial cluster annotations. Region Character string specifying column name metadata data frames containing region annotations (default: NULL). scale boolean specifying whether univariance normalization. ncores Integer specifying number CPU cores use parallel processing.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvg","text":"matrix average expression, rows represent genes columns represent spatial clusters sample.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvg","text":"","code":"library(data.table) library(Seurat) library(SpatialEcoTyper) library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"13Rc5Rsu8jbnEYYfUse-xQ7ges51LcI7n\"),                     \"HumanMelanomaPatient1_subset_counts.tsv.gz\",                     overwrite = TRUE, verbose = FALSE) drive_download(as_id(\"1GUbbEBttiu2ntVpaIcIK7YobaKKwbqnM\"),                     \"HumanMelanomaPatient1_subset_SpatialEcoTyper_results.rds\",                     overwrite = TRUE, verbose = FALSE) scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1] scdata <- as.matrix(scdata[, -1]) tmpobj <- CreateSeuratObject(scdata) %>%         SCTransform(clip.range = c(-10, 10), verbose = FALSE) seurat_version = as.integer(gsub(\"\\\\..*\", \"\", as.character(packageVersion(\"Seurat\")))) if(seurat_version<5){   normdata <- GetAssayData(tmpobj, \"data\") }else{   normdata <- tmpobj[[\"SCT\"]]$data } metadata = readRDS(\"HumanMelanomaPatient1_subset_SpatialEcoTyper_results.rds\")$metadata  # Construct cell-type-specific gene expression signatures of SEs avgexprs <- ComputeAvg(normdata = normdata, scmeta = metadata) head(avgexprs) #>                             SE09        SE01        SE08         SE07 #> Fibroblast..PDK4      0.35259620  0.13410953  0.06966571  0.118335435 #> Fibroblast..TNFRSF17  0.00000000  0.00000000  0.00000000  0.000000000 #> Fibroblast..ICAM3     0.00000000  0.00000000  0.00000000  0.000000000 #> Fibroblast..FAP      -0.29331695  0.02505667 -0.07346211  0.077473474 #> Fibroblast..GZMB     -0.09797678 -0.04104210 -0.09082236 -0.002063296 #> Fibroblast..TSC2     -0.05899541 -0.02658523 -0.02690466 -0.016824868 #>                             SE04        SE03         SE06       SE02       SE05 #> Fibroblast..PDK4     -0.04187951 -0.18236328 -0.121186218 0.02876511 0.01315714 #> Fibroblast..TNFRSF17  0.00000000  0.00000000  0.000000000 0.00000000 0.00000000 #> Fibroblast..ICAM3     0.00000000  0.00000000  0.000000000 0.00000000 0.00000000 #> Fibroblast..FAP       0.05147663 -0.08659207  0.053183806 0.02960319 0.11607862 #> Fibroblast..GZMB      0.01127651  0.02282926 -0.009071706 0.03888278 0.04906746 #> Fibroblast..TSC2      0.02419604 -0.04820711 -0.001317502 0.07683963 0.09783272"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvgs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvgs","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvgs","text":"Compute Cell-Type-Specific Average Expression Spatial Clusters","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvgs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvgs","text":"","code":"ComputeAvgs(   normdata,   scmeta,   cluster = \"SE\",   Region = NULL,   scale = TRUE,   ncores = 4 )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvgs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvgs","text":"normdata Numeric matrix normalized expression data, rows represent genes columns represent cells. scmeta Data frame containing metadata associated cell, including spatial cluster cell type annotations. cluster Character string specifying column name 'scmeta' containing spatial cluster annotations. Region Character string specifying column name metadata data frames containing region annotations (default: NULL). scale boolean specifying whether univariance normalization. ncores Integer specifying number CPU cores use parallel processing.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvgs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvgs","text":"matrix average expression, rows represent genes columns represent spatial clusters sample.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeAvgs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Cell-Type-Specific Average Expression of Spatial Clusters — ComputeAvgs","text":"","code":"library(data.table) library(Seurat) library(SpatialEcoTyper) library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB\"),               \"HumanMelanomaPatient1_subset_counts.tsv.gz\", overwrite = TRUE) #> File downloaded: #> • HumanMelanomaPatient1_subset_counts.tsv.gz #>   <id: 1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB> #> Saved locally as: #> • HumanMelanomaPatient1_subset_counts.tsv.gz drive_download(as_id(\"1nSPj2zRywFUdbo1fwiz77ds4NuM6bmV2\"),               \"Melanoma1_subset_SpatialEcoTyper_results.rds\", overwrite = TRUE) #> File downloaded: #> • Melanoma1_subset_SpatialEcoTyper_results.rds #>   <id: 1nSPj2zRywFUdbo1fwiz77ds4NuM6bmV2> #> Saved locally as: #> • Melanoma1_subset_SpatialEcoTyper_results.rds scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1] scdata <- as.matrix(scdata[, -1]) tmpobj <- CreateSeuratObject(scdata) %>%         SCTransform(clip.range = c(-10, 10), verbose = FALSE) seurat_version = as.integer(gsub(\"\\\\..*\", \"\", as.character(packageVersion(\"SeuratObject\")))) if(seurat_version<5){   normdata <- GetAssayData(tmpobj, \"data\") }else{   normdata <- tmpobj[[\"SCT\"]]$data } metadata = readRDS(\"Melanoma1_subset_SpatialEcoTyper_results.rds\")$metadata  # Construct cell-type-specific gene expression signatures of SEs avgexprs <- ComputeAvgs(normdata = normdata, scmeta = metadata) head(avgexprs) #>                              SE7          SE2          SE4          SE1 #> Fibroblast..PDK4      0.16877662  0.125425787  0.129077478 -0.048618850 #> Fibroblast..TNFRSF17  0.00000000  0.000000000  0.000000000  0.000000000 #> Fibroblast..ICAM3     0.00000000  0.000000000  0.000000000  0.000000000 #> Fibroblast..FAP      -0.16245753  0.008769572  0.076137301  0.051954130 #> Fibroblast..GZMB     -0.09869274 -0.027129039 -0.031853513 -0.007981858 #> Fibroblast..TSC2     -0.04840011 -0.037245579  0.009784921  0.053147770 #>                              SE6         SE0         SE3        SE5         SE8 #> Fibroblast..PDK4     -0.10288344 -0.18612179 -0.03040986 0.07024450  0.11917138 #> Fibroblast..TNFRSF17  0.00000000  0.00000000  0.00000000 0.00000000  0.00000000 #> Fibroblast..ICAM3     0.00000000  0.00000000  0.00000000 0.00000000  0.00000000 #> Fibroblast..FAP       0.04412527 -0.07947213  0.08198545 0.07579472 -0.02290463 #> Fibroblast..GZMB     -0.01636766  0.02581098  0.02334403 0.11797776  0.07086087 #> Fibroblast..TSC2     -0.04157964 -0.04773077  0.03064768 0.08075058  0.21924574"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeFCs.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Cell-Type-Specific Fold Changes (FCs) for Spatial Clusters — ComputeFCs","title":"Compute Cell-Type-Specific Fold Changes (FCs) for Spatial Clusters — ComputeFCs","text":"function computes fold changes (FCs) spatial transcriptomic data, comparing expression levels spatial clusters within cell type.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeFCs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Cell-Type-Specific Fold Changes (FCs) for Spatial Clusters — ComputeFCs","text":"","code":"ComputeFCs(   normdata,   scmeta,   cluster = \"SE\",   Region = NULL,   scale = FALSE,   ncores = parallel::detectCores() )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeFCs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Cell-Type-Specific Fold Changes (FCs) for Spatial Clusters — ComputeFCs","text":"normdata Numeric matrix normalized expression data, rows represent genes columns represent cells. scmeta Data frame containing metadata associated cell, including spatial cluster cell type annotations. cluster Character string specifying column name 'scmeta' containing spatial cluster annotations. Region Character string specifying column name metadata data frames containing region annotations (default: NULL). scale boolean specifying whether univariance normalization. ncores Integer specifying number CPU cores use parallel processing.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/ComputeFCs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Cell-Type-Specific Fold Changes (FCs) for Spatial Clusters — ComputeFCs","text":"matrix fold changes (FCs), rows represent genes columns represent spatial clusters sample.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/CreatePseudobulks.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Pseudo-bulk Mixtures — CreatePseudobulks","title":"Create Pseudo-bulk Mixtures — CreatePseudobulks","text":"function generates pseudobulk samples aggregating single-cell transcriptomics.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/CreatePseudobulks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Pseudo-bulk Mixtures — CreatePseudobulks","text":"","code":"CreatePseudobulks(data = NULL, groups, counts = NULL, n_mixtures = 100)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/CreatePseudobulks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Pseudo-bulk Mixtures — CreatePseudobulks","text":"data matrix normalized gene expression data (genes x cells). NULL, counts must provided. groups named vector indicating group (e.g., spatial ecotype) cell. names correspond column names data matrix. counts matrix raw counts data (genes x cells). Used generate normalized data data provided. n_mixtures integer specifying number pseudobulk samples create. Default 100.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/CreatePseudobulks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Pseudo-bulk Mixtures — CreatePseudobulks","text":"list containing two elements: Fracs matrix fractions group pseudobulk samples (rows represent pseudobulk samples, columns represent groups). Mixtures matrix pseudobulk gene expression data (genes x pseudobulk samples).","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/CreatePseudobulks.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Pseudo-bulk Mixtures — CreatePseudobulks","text":"`data` provided, function normalize `counts` matrix dividing column sum multiplying 10,000. maximum value `data` less 80, assumes data log2 scale converts back non-log scale. `groups` vector used ensure cells correctly assigned respective groups.   `groups` names, assumed names correspond column names `data` matrix. Pseudobulk samples created sampling cells group based predefined fractions,   calculating average expression gene pseudobulk samples. pseudobulk data normalized using Seurat's `NormalizeData` function.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/CreatePseudobulks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Pseudo-bulk Mixtures — CreatePseudobulks","text":"","code":"library(SpatialEcoTyper) library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"15n9zlXed74oeGaO1pythOOM_iWIfuMn2\"), \"Melanoma_WU2161_counts.rds\",                     overwrite = TRUE) #> File downloaded: #> • Melanoma_WU2161_counts.rds <id: 15n9zlXed74oeGaO1pythOOM_iWIfuMn2> #> Saved locally as: #> • Melanoma_WU2161_counts.rds counts <- readRDS(\"Melanoma_WU2161_counts.rds\") ## raw counts of scRNA-seq data groups <- sample(paste0(\"SE\", 1:10), ncol(counts), replace = TRUE) names(groups) <- colnames(counts) result = CreatePseudobulks(counts = counts, groups = groups, n_mixtures = 20) head(result$Mixtures[, 1:5]) ## Gene expression matrix of pseudobulks #> 6 x 5 sparse Matrix of class \"dgCMatrix\" #>             Pseudobulk1  Pseudobulk2  Pseudobulk3 Pseudobulk4  Pseudobulk5 #> AL627309.1 0.0170774126 0.0096560498 0.0098908642 0.016333106 0.0148383654 #> AL627309.5 0.0724089313 0.0544761905 0.0499550597 0.036653115 0.0641282721 #> AP006222.2 0.0002829895 0.0032032008 0.0030569764 0.002291994 0.0006918195 #> AC114498.1 0.0009235317 0.0009244557 0.0009244557 .           0.0009235317 #> AL669831.2 0.0011106999 .            .            .           0.0003703704 #> LINC01409  0.0492211891 0.0409479946 0.0352681901 0.030226979 0.0490582373 head(result$Fracs) ## SE fractions in pseudobulks #>                    SE1       SE10         SE2        SE3        SE4        SE5 #> Pseudobulk1 0.01588077 0.05541215 0.130600187 0.07039210 0.13159610 0.09220927 #> Pseudobulk2 0.09690164 0.05431308 0.016464393 0.19632362 0.09960266 0.17535487 #> Pseudobulk3 0.09651193 0.16935237 0.001700718 0.03021154 0.12808637 0.14141145 #> Pseudobulk4 0.14612813 0.10944945 0.090658202 0.12045223 0.10678805 0.07394643 #> Pseudobulk5 0.08157403 0.13225814 0.118458596 0.05712014 0.00000000 0.13601322 #> Pseudobulk6 0.14475245 0.11604037 0.104034693 0.07548245 0.08918957 0.02025746 #>                    SE6         SE7        SE8        SE9 #> Pseudobulk1 0.07134958 0.081540845 0.19234296 0.15867603 #> Pseudobulk2 0.01173687 0.159310082 0.11378162 0.07621116 #> Pseudobulk3 0.01647371 0.131464561 0.10057296 0.18421439 #> Pseudobulk4 0.05541814 0.123692563 0.08776271 0.08570410 #> Pseudobulk5 0.11964030 0.110722905 0.04891948 0.19529319 #> Pseudobulk6 0.15816323 0.003081876 0.09426407 0.19473385"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/DeconvoluteSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer SE Abundances Using Pretrained NMF Model — DeconvoluteSE","title":"Infer SE Abundances Using Pretrained NMF Model — DeconvoluteSE","text":"function predicts SE abundances mixture.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/DeconvoluteSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer SE Abundances Using Pretrained NMF Model — DeconvoluteSE","text":"","code":"DeconvoluteSE(dat, scale = TRUE, W = NULL)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/DeconvoluteSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer SE Abundances Using Pretrained NMF Model — DeconvoluteSE","text":"dat numeric matrix bulk gene expression data. scale Logical indicating whether scale input data predictions. W W matrix inferring SE abundances bulk expression data.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/DeconvoluteSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer SE Abundances Using Pretrained NMF Model — DeconvoluteSE","text":"matrix SE abundances bulk tumors.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/DeconvoluteSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Infer SE Abundances Using Pretrained NMF Model — DeconvoluteSE","text":"","code":"library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"14QvmgISxaArTzWt_UHvf55aAYN2zm84Q\"), \"SKCM_RNASeqV2.geneExp.rds\",                     overwrite = TRUE) #> File downloaded: #> • SKCM_RNASeqV2.geneExp.rds <id: 14QvmgISxaArTzWt_UHvf55aAYN2zm84Q> #> Saved locally as: #> • SKCM_RNASeqV2.geneExp.rds bulkdata <- readRDS(\"SKCM_RNASeqV2.geneExp.rds\")  # Predict SE abundances in bulk tumors se_abundances <- DeconvoluteSE(dat = bulkdata) head(se_abundances[, 1:5]) #>                      NonSE       SE01       SE02       SE03       SE04 #> TCGA-3N-A9WB-06 0.19380234 0.05372667 0.16735600 0.12581663 0.07216666 #> TCGA-3N-A9WC-06 0.05293689 0.13901340 0.08427617 0.08372047 0.04243859 #> TCGA-3N-A9WD-06 0.27200075 0.17114795 0.06288761 0.05641549 0.10166721 #> TCGA-BF-A1PU-01 0.16899510 0.13618971 0.06501306 0.09269615 0.17313296 #> TCGA-BF-A1PV-01 0.12078283 0.06921834 0.05970319 0.16813008 0.11059648 #> TCGA-BF-A1PX-01 0.21398415 0.04019509 0.08906215 0.04499893 0.08561680"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetPCList.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Principal Component (PC) List for Spatial Microregions — GetPCList","title":"Generate Principal Component (PC) List for Spatial Microregions — GetPCList","text":"function performs principal component analysis based cell-type-specific gene expression spatial microregions.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetPCList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Principal Component (PC) List for Spatial Microregions — GetPCList","text":"","code":"GetPCList(   mergedncem,   min.cells = 3,   min.features = 5,   nfeatures = 3000,   ncores = 1,   do.scale = TRUE )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetPCList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Principal Component (PC) List for Spatial Microregions — GetPCList","text":"mergedncem matrix cell-type-specific gene expression data, rows representing genes columns representing spatial microregions cell type. min.cells Integer, minimum number non-zero counts required per gene retain gene analysis. Default 3. min.features Integer, minimum number features (genes) required per spatial microregion retain microregion analysis. Default 5. nfeatures Integer, number variable features select PCA. Default 3000. ncores Integer, number cores use parallel processing. Default 1. .scale Logical, whether scale data performing PCA. Default TRUE.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetPCList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Principal Component (PC) List for Spatial Microregions — GetPCList","text":"named list matrices, matrix contains PCs specific cell type. Cell types insufficient data excluded result.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetPCList.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Principal Component (PC) List for Spatial Microregions — GetPCList","text":"function first filters input matrix based specified minimum number cells features. creates Seurat objects cell type, normalizes data, identifies variable features, scales data, performs PCA. resulting PCs cell type returned list.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSNlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Cell-Type-Specific Similarity Network — GetSNList","title":"Construct Cell-Type-Specific Similarity Network — GetSNList","text":"function generates list similarity networks (SNs) given list embeddings. embeddings represent spatial microregions, function computes K-nearest neighbor (KNN) graphs based provided embeddings create similarity matrices.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSNlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Cell-Type-Specific Similarity Network — GetSNList","text":"","code":"GetSNList(emb_list, npcs = 20, k = 50, min.cts.per.region = 1, ncores = 1)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSNlist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Cell-Type-Specific Similarity Network — GetSNList","text":"emb_list list matrices matrix contains embeddings single sample. rows correspond different principal components (PCs) features, columns correspond spatial regions cells. npcs integer specifying number principal components features use embedding matrix. Default 20. k integer specifying number nearest neighbors consider constructing KNN graph. Default 50. min.cts.per.region integer specifying minimum number distinct cell types must present spatial region retained analysis. Default 1. ncores integer specifying number cores use parallel computation. Default 1.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSNlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Cell-Type-Specific Similarity Network — GetSNList","text":"list sparse matrices matrix represents similarity network (SN) sample. rows columns matrix correspond spatial regions, values represent similarity scores.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSNlist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct Cell-Type-Specific Similarity Network — GetSNList","text":"function first trims input embeddings retain top `npcs` principal components features. filters spatial regions meet minimum cell type threshold. sample, function computes KNN graph using trimmed embeddings converts resulting distances similarity scores. Missing spatial regions filled zeros ensure samples regions.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSpatialMetacells.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct Spatial Metacells from Single-Cell Spatial Data — GetSpatialMetacells","title":"Construct Spatial Metacells from Single-Cell Spatial Data — GetSpatialMetacells","text":"function computes spatial metacells single-cell spatial transcriptomics. Spatial metacells represent aggregated expression profiles spatially proximal cells. function utilizes k-nearest neighbor (KNN) weighting aggregate expression profiles neighboring cells generate metacell expression profiles cell type.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSpatialMetacells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct Spatial Metacells from Single-Cell Spatial Data — GetSpatialMetacells","text":"","code":"GetSpatialMetacells(   normdata,   metadata,   X = \"X\",   Y = \"Y\",   CellType = \"CellType\",   k = 20,   radius = 50,   bin = \"SpotID\",   bin.X = \"Spot.X\",   bin.Y = \"Spot.Y\",   min.cells.per.region = 2,   ncores = 1 )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSpatialMetacells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct Spatial Metacells from Single-Cell Spatial Data — GetSpatialMetacells","text":"normdata matrix data frame representing normalized gene expression data, rows correspond genes columns correspond cells. metadata data frame containing metadata associated cell. Must include spatial coordinates (e.g., X Y) well cell type annotations. row names metadata must match column names normdata. X Character string specifying column name metadata containing X spatial coordinates. Y Character string specifying column name metadata containing Y spatial coordinates. CellType Character string specifying column name metadata containing cell type annotations. k Integer specifying number nearest spatial neighbors constructing metacells. radius Numeric value specifying radius (units spatial coordinates) within neighboring cells considered. bin Character string specifying column name metadata containing microregion identifier. bin.X Character string specifying column name metadata containing X spatial coordinates microregions. bin.Y Character string specifying column name metadata containing Y spatial coordinates microregions. min.cells.per.region Integer specifying minimum number cells required spatial microregion compute metacells. ncores Integer specifying number CPU cores use parallel processing (default: 1).","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSpatialMetacells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct Spatial Metacells from Single-Cell Spatial Data — GetSpatialMetacells","text":"matrix containing spatial metacell expression profiles, rows representing individual genes         columns representing metacells.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/GetSpatialMetacells.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct Spatial Metacells from Single-Cell Spatial Data — GetSpatialMetacells","text":"","code":"library(data.table) library(Seurat) library(SpatialEcoTyper) library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI\"),                     \"HumanMelanomaPatient1_subset_scmeta.tsv\", overwrite = TRUE) #> File downloaded: #> • HumanMelanomaPatient1_subset_scmeta.tsv #>   <id: 1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI> #> Saved locally as: #> • HumanMelanomaPatient1_subset_scmeta.tsv drive_download(as_id(\"1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB\"),               \"HumanMelanomaPatient1_subset_counts.tsv.gz\", overwrite = TRUE) #> File downloaded: #> • HumanMelanomaPatient1_subset_counts.tsv.gz #>   <id: 1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB> #> Saved locally as: #> • HumanMelanomaPatient1_subset_counts.tsv.gz scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1] scdata <- as.matrix(scdata[, -1]) normdata = NormalizeData(scdata) scmeta <- read.table(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                       sep = \"\\t\",header = TRUE, row.names = 1)  # Construct spatial metacells from single-cell spatial data metacells <- GetSpatialMetacells(normdata = normdata, metadata = scmeta,                                  X = \"X\", Y = \"Y\", CellType = \"CellType\",                                  min.cells.per.region = 2) head(metacells) #> 6 x 390 sparse Matrix of class \"dgCMatrix\" #>   [[ suppressing 390 column names ‘X-91_Y-91..B’, ‘X-92_Y-92..B’, ‘X-93_Y-93..B’ ... ]] #>                                                                              #> PDK4     .         .         .         .         .        .         .        #> TNFRSF17 0.6544829 .         0.4175847 .         1.264464 2.0349031 .        #> ICAM3    2.4550440 2.7259684 2.6240964 3.3432630 4.074004 1.5776727 2.339249 #> FAP      .         .         .         .         .        .         .        #> GZMB     .         0.2362506 0.7086796 .         .        0.5231711 .        #> TSC2     .         .         .         0.5619819 .        .         .        #>                                                                            #> PDK4     .        .         .         .        .        .        .         #> TNFRSF17 2.075125 0.6507723 0.7586164 0.803498 1.063637 0.293977 0.6992404 #> ICAM3    2.819178 2.4270566 3.0788990 1.808787 3.170151 1.974216 2.5348550 #> FAP      .        .         .         .        .        .        .         #> GZMB     .        0.4860334 .         .        .        .        0.2107297 #> TSC2     .        .         .         .        .        .        .         #>                                                                               #> PDK4     .         .         .         .        .         .         .         #> TNFRSF17 0.4269010 0.7234476 0.4021635 .        0.2771736 0.3897001 0.8802495 #> ICAM3    2.5542980 2.9837018 3.4999791 3.140392 2.1379927 2.6634697 1.8515150 #> FAP      .         .         .         .        .         .         .         #> GZMB     0.4153259 0.6800209 0.2671964 .        0.6743574 .         .         #> TSC2     .         .         0.2283413 .        .         .         .         #>                                                                                #> PDK4     .         .         .         .         .         .         .         #> TNFRSF17 0.6444861 1.1535714 0.2124001 0.2698584 0.2260400 0.7285162 0.6506251 #> ICAM3    2.8541354 2.6135363 3.0868468 2.8681769 2.9581242 2.5694730 2.8433845 #> FAP      .         .         .         .         .         .         .         #> GZMB     .         0.6531461 .         0.4481639 0.2221523 .         .         #> TSC2     .         .         .         0.2124001 0.2130847 .         .         #>                                                                              #> PDK4     .         .         .         .        .         .         .        #> TNFRSF17 0.2081711 0.2327773 0.3701375 .        0.9364823 0.8657987 0.840786 #> ICAM3    2.0815837 2.9877662 3.5032758 2.231905 2.9240027 3.2251307 1.863237 #> FAP      .         .         .         .        .         .         .        #> GZMB     0.2399883 0.4576690 0.6595242 .        .         0.1949055 .        #> TSC2     0.2209223 .         .         .        .         0.1991069 .        #>                                                                                #> PDK4     .        .         .         .        .         . .         .         #> TNFRSF17 1.210397 0.6245759 0.4394449 .        0.9210538 . .         0.5213488 #> ICAM3    2.073252 2.6591540 3.2826420 2.129434 1.6783614 . 0.8773159 2.8655548 #> FAP      .        .         .         .        .         . .         .         #> GZMB     .        0.3124665 0.6175867 0.452080 0.7573076 . 0.8339345 .         #> TSC2     .        .         .         .        .         . .         .         #>                                                                            #> PDK4     .         .         .        .         .       .         .        #> TNFRSF17 0.9123604 .         .        .         .       .         .        #> ICAM3    3.3184522 3.2481927 2.661054 2.1067963 2.98845 2.6580686 2.694117 #> FAP      .         .         .        .         .       .         .        #> GZMB     .         0.2159238 0.207552 0.2622667 .       .         .        #> TSC2     .         0.2343499 .        .         .       0.2225693 .        #>                                                                            #> PDK4     .        .         .        .        .        .         .         #> TNFRSF17 .        .         .        .        .        .         .         #> ICAM3    2.352396 1.6403401 2.153412 3.261016 1.642338 2.6158517 4.0367157 #> FAP      .        .         .        .        .        .         .         #> GZMB     .        0.2513632 .        .        .        .         0.1935062 #> TSC2     .        .         .        .        .        0.4806539 .         #>                                                                          #> PDK4     .        .         .        .        .        .        .        #> TNFRSF17 .        .         .        .        .        .        .        #> ICAM3    3.718786 2.6932140 3.384322 1.734639 1.850746 3.247609 2.267498 #> FAP      .        .         .        .        .        .        .        #> GZMB     .        0.1961036 .        .        .        .        0.275043 #> TSC2     .        .         .        .        .        .        .        #>                                                                              #> PDK4     .        .        .         .         .         .         .         #> TNFRSF17 .        .        .         .         .         .         .         #> ICAM3    2.209121 3.661897 2.9055060 2.4884698 3.0916244 3.3684981 2.1944636 #> FAP      .        .        .         .         .         .         .         #> GZMB     .        .        0.4866689 0.2450162 .         0.1988493 0.2411979 #> TSC2     .        .        0.2014891 .         0.2017612 .         .         #>                                                                               #> PDK4     .         .         .         .         .         .        .         #> TNFRSF17 .         .         .         .         .         .        .         #> ICAM3    2.8888087 2.3907300 2.5080751 1.8866217 2.3343320 2.615067 2.0112396 #> FAP      .         .         .         .         .         .        .         #> GZMB     0.6999925 1.3139516 0.2651652 0.2081711 0.2709646 .        0.2057408 #> TSC2     0.2031452 0.2274077 0.4654402 0.2661704 .         .        .         #>                                                                             #> PDK4     .         .         .        .         .        .         .        #> TNFRSF17 .         .         .        .         .        .         .        #> ICAM3    3.0613972 2.4068099 2.447891 3.2194577 1.938482 2.6015475 2.700411 #> FAP      .         .         .        .         .        .         .        #> GZMB     .         0.5289607 .        0.2687764 .        .         .        #> TSC2     0.2463577 .         .        .         .        0.4641257 .        #>                                                                              #> PDK4     .        .         .         .         .         .        .         #> TNFRSF17 .        .         .         .         .         .        .         #> ICAM3    2.269408 0.9489672 2.5817088 1.8017008 1.9775697 2.605423 2.8804254 #> FAP      .        .         .         .         .         .        .         #> GZMB     .        .         0.4314681 1.6397395 0.5287651 1.193708 1.4091318 #> TSC2     .        .         .         0.2393944 0.2213289 .        0.2051518 #>                                                                               #> PDK4     .         .         .         .         .         .        .         #> TNFRSF17 .         .         .         .         .         .        .         #> ICAM3    2.6076950 3.3470302 2.2187896 2.7504711 2.6651482 2.108225 2.7845421 #> FAP      .         .         .         .         .         .        .         #> GZMB     0.8810538 0.9619033 0.7208446 1.2240569 0.7219464 1.092021 0.5355330 #> TSC2     .         0.2560989 .         0.2370883 .         .        0.4995151 #>                                                                            #> PDK4     .         .        .        .         .        .        .         #> TNFRSF17 .         .        .        .         .        .        .         #> ICAM3    1.0805223 2.539781 1.418539 2.7131510 2.510669 2.304236 2.1329565 #> FAP      .         .        .        .         .        .        .         #> GZMB     1.7279168 1.424386 1.128606 0.2677175 1.204423 1.506020 0.9323715 #> TSC2     0.1662692 .        .        0.1758448 .        .        .         #>                                                                           #> PDK4     .        .        .         .         .        .        .        #> TNFRSF17 .        .        .         .         .        .        .        #> ICAM3    3.326815 3.132616 2.3915625 2.5171377 3.042002 2.757046 2.939314 #> FAP      .        .        .         .         .        .        .        #> GZMB     1.947208 1.595812 1.8038635 0.4736165 1.880746 1.861779 1.196432 #> TSC2     .        .        0.2544693 0.1951427 0.248441 .        .        #>                                                                              #> PDK4     .         .         .         .        .        .         .         #> TNFRSF17 .         .         .         .        .        .         .         #> ICAM3    2.0389190 1.8700239 2.6950142 3.025181 2.951156 1.0938623 1.8833771 #> FAP      .         .         .         .        .        .         .         #> GZMB     0.5160454 0.5196073 0.8921513 1.410914 1.403760 1.0841155 0.6744100 #> TSC2     0.1749030 .         0.2288148 .        .        0.4759744 0.2327773 #>                                                                              #> PDK4     .         .         .        .        .         .         .         #> TNFRSF17 .         .         .        .        .         .         .         #> ICAM3    1.5948809 1.4559048 2.797505 1.669694 2.9915786 3.0622097 2.0882418 #> FAP      .         .         .        .        .         .         .         #> GZMB     0.4486093 0.4655083 1.112943 1.134259 1.3371663 0.8640992 0.7224095 #> TSC2     0.1817480 0.2278723 0.191481 .        0.4202619 .         .         #>                                                                               #> PDK4     .         .         .        .         .         0.6721268 0.5777224 #> TNFRSF17 .         .         .        .         .         .         .         #> ICAM3    2.6304309 2.8175271 1.799939 1.8560540 2.8720481 2.0909612 1.4339229 #> FAP      .         .         .        .         .         .         .         #> GZMB     0.9174394 2.1903889 1.356037 0.7205789 0.9291368 .         .         #> TSC2     0.2569343 0.2017612 .        0.2247095 0.2552774 0.4161715 .         #>                                                                               #> PDK4     0.2151848 1.9538824 1.550975 0.2593085 0.8897096 0.5263809 0.9804341 #> TNFRSF17 .         .         .        .         .         .         .         #> ICAM3    0.8862776 1.0964768 2.350320 1.6117519 1.4258686 1.6114262 2.2472793 #> FAP      .         .         .        .         .         .         .         #> GZMB     0.1918842 .         .        .         0.3659154 .         0.3811077 #> TSC2     .         0.1694787 .        .         0.2812897 .         0.1749030 #>                                                                              #> PDK4     1.267374 0.7523609 1.410662 0.6016010 0.6998461 1.2510781 0.7752687 #> TNFRSF17 .        .         .        .         .         .         .         #> ICAM3    1.684209 2.8418969 1.805333 2.1237841 0.2838192 2.8558944 1.5863079 #> FAP      .        .         .        .         .         .         .         #> GZMB     0.252164 .         .        .         .         0.3884015 .         #> TSC2     .        .         .        0.3232802 .         .         0.1637539 #>                                                                            #> PDK4     1.344222 0.8693882 1.962452 0.7557593 0.9761035 .        1.302667 #> TNFRSF17 .        .         .        .         .         .        .        #> ICAM3    1.421307 1.2766308 2.510840 1.2947254 1.3729438 4.205427 2.078886 #> FAP      .        .         .        .         .         .        .        #> GZMB     .        .         .        .         .         .        .        #> TSC2     .        .         .        .         .         .        .        #>                                                                           #> PDK4     1.3642321 1.0150225 .       0.691606 1.110163 1.077798 .         #> TNFRSF17 .         .         .       .        .        .        .         #> ICAM3    2.2525109 0.4720003 2.95211 1.404622 2.273123 1.077798 0.5165948 #> FAP      .         .         .       .        .        .        .         #> GZMB     .         .         .       .        .        .        .         #> TSC2     0.7564669 .         .       .        .        .        .         #>                                                                            #> PDK4     1.308167 0.560643 1.087698 0.7743722 0.7405078 0.9220588 .        #> TNFRSF17 .        .        .        .         .         .         .        #> ICAM3    2.555106 1.551848 1.030582 0.3995826 2.2734382 1.5979620 2.174079 #> FAP      .        .        .        .         .         .         .        #> GZMB     .        .        .        .         .         0.4333204 .        #> TSC2     .        .        .        .         .         .         .        #>                                                                             #> PDK4     2.002619 0.5654545 0.5092751 1.405295 0.5031320 0.825989 1.2666457 #> TNFRSF17 .        .         .         .        .         .        .         #> ICAM3    1.181576 1.9442164 0.8655169 1.415085 1.8753491 2.381560 1.4720859 #> FAP      .        .         .         .        .         .        .         #> GZMB     .        0.6413099 .         .        0.5180635 .        .         #> TSC2     .        0.2633816 .         .        .         .        0.2417005 #>                                                                               #> PDK4     1.1627010 0.1886991 0.7742990 0.6019194 0.6623059 0.5476020 1.213516 #> TNFRSF17 .         .         .         .         .         .         .        #> ICAM3    .         .         .         .         .         .         .        #> FAP      0.3893810 0.4059865 .         0.1841427 0.1424201 0.1626651 .        #> GZMB     0.1694787 .         0.1745932 .         0.3653346 .         .        #> TSC2     .         .         .         0.2120614 0.1884917 .         .        #>                                                                                #> PDK4     0.7018900 1.1720950 1.0525231 0.7075257 0.3193786 0.6871473 0.6254852 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      .         0.7419234 0.8879133 0.1613681 0.3852947 0.1682491 0.1714580 #> GZMB     .         0.2463577 .         .         0.7868361 .         0.1939681 #> TSC2     0.1597685 .         .         0.3196826 .         0.1682491 .         #>                                                                                #> PDK4     0.2484410 0.1530914 1.2657517 0.7845304 1.1712250 0.8447723 0.9651236 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      0.2134307 0.2368074 0.1847129 0.9131424 .         .         0.8272398 #> GZMB     .         0.2463577 0.2084836 0.1476121 0.1985932 0.1229100 0.4513565 #> TSC2     .         .         .         .         .         .         0.2260400 #>                                                                                #> PDK4     0.6396284 0.9225859 1.2567108 0.9416234 0.6257305 0.6183192 0.2459065 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      .         0.3777682 0.3482939 0.3488451 .         0.5958435 0.1998880 #> GZMB     0.4516062 .         0.1625456 .         0.1572555 .         .         #> TSC2     .         .         0.1455939 .         .         .         .         #>                                                                                #> PDK4     1.1436099 0.1605614 0.7291590 0.3314464 0.9711474 0.2317563 0.4959660 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      0.5111735 .         0.4105836 0.4014640 0.3871480 0.4421309 0.3712461 #> GZMB     .         .         .         0.4216995 .         0.4316623 .         #> TSC2     0.2066379 .         .         .         0.1824721 .         .         #>                                                                                #> PDK4     0.9550457 0.2069407 0.9510292 1.7775318 1.0277420 0.3306178 1.1001530 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      0.1849044 .         0.3555773 0.2025868 0.1665283 0.3937549 0.1341966 #> GZMB     .         .         0.1889075 .         .         .         0.1733741 #> TSC2     0.3446825 .         .         0.2185514 .         .         .         #>                                                                                #> PDK4     0.9136417 0.7375121 0.8442152 0.3508610 0.2307560 0.5853667 0.1928216 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      .         0.3796194 1.7051766 0.5534571 0.9086273 0.2909049 0.3478969 #> GZMB     .         0.8436475 0.1897500 .         .         .         .         #> TSC2     .         .         .         .         .         .         .         #>                                                                                #> PDK4     0.3833703 0.5800734 0.3820236 0.6046471 0.6096568 0.4500156 0.1479574 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      1.1188588 1.1273693 0.6267170 0.3553790 0.3580661 0.8820832 1.5345110 #> GZMB     .         .         .         .         0.1382560 0.4831283 0.2117250 #> TSC2     0.1258949 .         .         .         .         .         .         #>                                                                               #> PDK4     0.2042816 0.2063370 1.1307577 .        0.7146263 1.1447852 .         #> TNFRSF17 .         .         .         .        .         .         .         #> ICAM3    .         .         .         .        .         .         .         #> FAP      0.7962302 1.2130316 0.5017743 0.510985 1.1977907 0.9339003 0.4954266 #> GZMB     .         0.1903918 0.1573619 0.191481 0.1689282 .         .         #> TSC2     .         .         .         .        .         .         0.2148396 #>                                                                                #> PDK4     0.1517524 0.5670232 0.8698162 0.1637539 0.3696494 0.1016129 0.7851283 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      1.1275889 0.5638223 0.4307200 0.3936369 0.6520385 0.9392034 0.6904686 #> GZMB     .         0.4052187 0.3526905 .         .         .         .         #> TSC2     .         .         .         .         0.1944345 .         .         #>                                                                                #> PDK4     0.2054454 0.3601386 0.3271071 0.7331518 0.4034587 0.5518261 0.1769679 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      0.7812682 0.9995687 0.7188326 0.7873114 0.1610207 0.1876709 0.4363381 #> GZMB     .         0.1641226 0.4060103 0.1396010 .         .         0.1696173 #> TSC2     .         0.3449809 0.4130268 0.1998880 0.1723327 .         .         #>                                                                              #> PDK4     0.6366271 0.5125880 0.9258237 0.2558235 .        0.430857 0.3606961 #> TNFRSF17 .         .         .         .         .        .        .         #> ICAM3    .         .         .         .         .        .        .         #> FAP      0.5623080 0.9737224 0.9275480 0.3332545 1.174189 0.189963 0.4993355 #> GZMB     .         0.1771306 .         .         .        .        .         #> TSC2     .         .         .         0.1886991 .        .        .         #>                                                                                #> PDK4     0.3619712 0.3824599 0.3979787 0.5289367 1.0244530 1.4071443 1.2033558 #> TNFRSF17 .         .         .         .         .         .         .         #> ICAM3    .         .         .         .         .         .         .         #> FAP      0.5294469 0.3884222 0.9865208 0.8786052 .         .         .         #> GZMB     0.4239187 0.1761630 .         .         0.1891167 0.1925955 0.4594442 #> TSC2     0.3623193 .         .         .         .         .         .         #>                                                                               #> PDK4     0.9370442 0.4295889 1.649515 0.4096543 0.6272938 0.6509813 1.1178334 #> TNFRSF17 .         .         .        .         .         .         .         #> ICAM3    .         .         .        .         .         .         .         #> FAP      .         .         .        .         .         .         .         #> GZMB     .         0.3762156 .        0.2443589 0.1843320 .         0.2292929 #> TSC2     .         .         .        0.2443589 .         0.2104024 0.1739797 #>                                                                               #> PDK4     1.0781587 0.6916388 0.6727012 1.328545 0.8761082 0.8068752 0.8351528 #> TNFRSF17 .         .         .         .        .         .         .         #> ICAM3    .         .         .         .        .         .         .         #> FAP      .         .         .         .        .         .         .         #> GZMB     0.4975071 0.2213289 .         .        0.2480876 .         .         #> TSC2     .         .         .         .        .         0.1805070 .         #>                                                                              #> PDK4     1.685659 0.6121596 1.3239812 0.3969014 1.604153 1.3238941 0.8400419 #> TNFRSF17 .        .         .         .         .        .         .         #> ICAM3    .        .         .         .         .        .         .         #> FAP      .        .         .         .         .        .         .         #> GZMB     .        0.2569343 0.4008008 0.2638560 .        0.1854839 0.4082143 #> TSC2     .        .         .         0.1874679 .        0.1895380 0.1657551 #>                                                                               #> PDK4     0.3858890 1.0302486 0.7097701 1.0220129 1.492092 0.7326239 0.9761929 #> TNFRSF17 .         .         .         .         .        .         .         #> ICAM3    .         .         .         .         .        .         .         #> FAP      .         .         .         .         .        .         .         #> GZMB     0.1638765 0.2002833 .         0.1485682 .        0.3916174 0.3835622 #> TSC2     .         0.3567406 .         .         .        .         0.4402635 #>                                                                               #> PDK4     1.6147421 0.8084328 2.0180415 0.4060164 1.075883 0.5614577 1.2615632 #> TNFRSF17 .         .         .         .         .        .         .         #> ICAM3    .         .         .         .         .        .         .         #> FAP      .         .         .         .         .        .         .         #> GZMB     0.1542714 0.2075520 .         .         .        .         0.5762879 #> TSC2     0.1736759 0.1638765 0.2017612 .         .        0.1249105 .         #>                                                                               #> PDK4     0.6241975 0.5578205 0.9675281 0.6808135 0.4154361 0.5436584 .        #> TNFRSF17 .         .         .         .         .         .         .        #> ICAM3    .         .         .         .         .         .         1.223828 #> FAP      .         .         .         .         .         .         .        #> GZMB     0.1946694 0.1874679 .         .         .         0.5046447 2.072505 #> TSC2     0.1669198 0.1956208 .         .         .         0.1644943 .        #>                                                                              #> PDK4     .        .        .         .         .         .         .         #> TNFRSF17 .        .        .         .         .         .         .         #> ICAM3    1.802485 2.075318 3.2894150 0.9697523 0.8145297 2.8004099 2.3900841 #> FAP      .        .        .         .         .         .         .         #> GZMB     .        1.329268 0.5548593 .         0.8469007 .         0.6125405 #> TSC2     .        .        .         .         .         0.5645194 1.0878796 #>                                                                             #> PDK4     .        .         .         . .        .        .        .        #> TNFRSF17 .        .         .         . .        .        .        .        #> ICAM3    2.952899 3.1949526 1.9814483 . 1.983549 2.934933 2.334114 .        #> FAP      .        .         .         . .        .        .        .        #> GZMB     2.880698 1.9992169 0.9343665 . 1.545959 4.111746 .        .        #> TSC2     1.558801 0.9937641 .         . .        .        .        1.670775 #>                                                                          #> PDK4     .        .        .         .        .        .        .        #> TNFRSF17 .        .        .         .        .        .        .        #> ICAM3    3.117911 4.945499 2.6751936 2.361608 4.944884 2.432021 3.366057 #> FAP      .        .        .         .        .        .        .        #> GZMB     3.153962 .        1.5653551 1.162464 1.748497 1.209149 3.500917 #> TSC2     .        .        0.4839691 .        .        .        .        #>                                                                          #> PDK4     .        .        .        .         .        .        .        #> TNFRSF17 .        .        .        .         .        .        .        #> ICAM3    1.151317 4.126723 4.435517 2.1636765 .        2.581101 3.896530 #> FAP      .        .        .        .         .        .        .        #> GZMB     3.749509 .        .        1.4956185 .        .        3.066501 #> TSC2     1.245778 .        .        0.4798306 1.253081 .        .        #>                                                                         #> PDK4     .        .        .        .        .        .        .        #> TNFRSF17 .        .        .        .        .        .        .        #> ICAM3    2.608787 1.185441 1.639332 1.569513 3.021302 3.206785 0.871931 #> FAP      .        .        .        .        .        .        .        #> GZMB     .        2.113686 1.073360 1.535090 1.258004 2.979279 1.360329 #> TSC2     .        .        .        .        .        .        .        #>                                                                            #> PDK4     .        .        0.6972153 0.1884917 .        0.7939925 .        #> TNFRSF17 .        .        1.2165561 1.9935838 1.183298 0.7751313 2.016898 #> ICAM3    2.269476 3.220389 2.6474173 3.1150602 3.457400 1.3780484 2.127905 #> FAP      .        .        .         .         .        .         .        #> GZMB     .        .        1.5317956 1.5563737 1.853594 3.0576691 1.999913 #> TSC2     .        .        .         .         .        .         .        #>                                                                              #> PDK4     0.7364076 .        0.5685193 0.9434252 .         0.3331466 1.758241 #> TNFRSF17 1.4805428 1.166117 2.3278663 1.4651472 0.6402209 1.5421945 3.007102 #> ICAM3    1.5016807 2.900115 2.5482026 2.1274349 1.6713046 2.2073857 1.886853 #> FAP      .         .        .         .         .         .         .        #> GZMB     4.5555136 1.467949 1.4404367 3.1550420 1.3500698 1.8767081 1.283244 #> TSC2     .         .        .         .         .         .         .        #>                                                                            #> PDK4     0.5477196 0.7675449 0.681212 1.239706 1.3878340 1.435087 .        #> TNFRSF17 1.2680576 0.7222006 2.793247 1.279220 0.6486377 1.115905 2.739642 #> ICAM3    2.7000409 2.2182937 1.353881 2.961550 3.0513625 2.516795 2.101882 #> FAP      .         .         .        .        .         .        .        #> GZMB     1.7595718 1.9452350 1.516360 2.850711 0.3449012 1.884570 2.386950 #> TSC2     .         .         .        .        .         .        .        #>                                                                              #> PDK4     1.446884 0.7552811 0.5931933 0.2373661 0.5956401 0.4417934 .        #> TNFRSF17 2.826489 1.7379933 0.9365347 0.5284846 1.2979420 1.1825275 .        #> ICAM3    2.749241 3.2720699 3.2887507 3.3479078 2.9612091 3.0282056 3.693063 #> FAP      .        .         .         .         .         .         .        #> GZMB     .        1.3864504 1.7920635 1.4293033 1.2834571 0.5312479 1.096959 #> TSC2     .        .         .         .         .         .         .        #>                                                                              #> PDK4     .        0.6114597 0.3996979 0.9234839 0.2174079 1.068628 .         #> TNFRSF17 1.628742 1.2010023 1.8421455 1.2845608 0.9884584 1.498147 0.2455236 #> ICAM3    2.925930 3.4709615 2.9111497 3.7205964 3.0424221 2.789474 2.8523507 #> FAP      .        .         .         .         .         .        .         #> GZMB     1.192256 1.0596876 1.1691955 1.2390702 0.4948967 1.285955 1.0761320 #> TSC2     .        .         .         .         .         .        .         #>                                                                              #> PDK4     .        0.4598034 .         .         1.399232 0.2059514 0.8081269 #> TNFRSF17 4.498930 0.4113915 0.9921520 0.6034497 .        1.3432743 0.7137668 #> ICAM3    4.358957 2.6201706 0.5793906 2.4784173 1.816917 2.3051774 1.8183247 #> FAP      .        .         .         .         .        .         .         #> GZMB     .        3.5560720 1.6287532 5.0245933 2.325537 1.9650682 4.3522638 #> TSC2     .        .         .         .         .        .         .         #>                                      #> PDK4     1.140120 .        0.1945096 #> TNFRSF17 1.386295 1.689997 1.5427200 #> ICAM3    3.471813 1.762560 3.3795050 #> FAP      .        .        .         #> GZMB     2.013692 2.009341 1.6912014 #> TSC2     .        .        ."},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/HeatmapView.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Heatmap — HeatmapView","title":"Draw Heatmap — HeatmapView","text":"Draw Heatmap","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/HeatmapView.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Heatmap — HeatmapView","text":"","code":"HeatmapView(   mat,   breaks = c(0, 0.6, 1.2),   colors = c(\"#ffffd9\", \"#edf8b1\", \"#225ea8\"),   na_col = \"grey\",   name = \"hmap\",   cluster_rows = FALSE,   row_dend_side = c(\"left\", \"right\"),   cluster_cols = FALSE,   column_dend_side = c(\"top\", \"bottom\"),   show_row_names = TRUE,   row_names_side = \"left\",   row_names_gp = gpar(fontsize = 12),   row_names_rot = 0,   show_column_names = TRUE,   column_names_side = \"bottom\",   column_names_gp = gpar(fontsize = 12),   column_names_rot = 90,   show_legend = TRUE,   top_ann = NULL,   top_ann_col = NULL,   show_top_legend = show_legend,   bott_ann = NULL,   bott_ann_col = NULL,   show_bott_legend = show_legend,   left_ann = NULL,   left_ann_col = NULL,   show_left_legend = show_legend,   right_ann = NULL,   right_ann_col = NULL,   show_right_legend = show_legend,   show_ann_name = TRUE,   annotation_legend_param = list(),   row_split = NULL,   column_split = NULL,   show_heatmap_legend = TRUE,   legend_title = NULL,   legend_title_position = \"lefttop\",   legend_direction = \"vertical\",   legend_title_gp = gpar(fontsize = 12),   legend_labels_gp = gpar(fontsize = 12),   legend_height = 2,   legend_width = 0.3,   legend_side = \"right\",   ... )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/HeatmapView.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Heatmap — HeatmapView","text":"mat Matrix like object breaks vector indicating numeric breaks colors vector colors correspond values breaks na_col Color NA values. cluster_rows ComplexHeatmap::Heatmap. row_dend_side ComplexHeatmap::Heatmap. cluster_cols ComplexHeatmap::Heatmap. column_dend_side ComplexHeatmap::Heatmap. show_row_names ComplexHeatmap::Heatmap. row_names_side ComplexHeatmap::Heatmap. row_names_gp ComplexHeatmap::Heatmap. row_names_rot ComplexHeatmap::Heatmap. show_column_names ComplexHeatmap::Heatmap. column_names_side ComplexHeatmap::Heatmap. column_names_gp ComplexHeatmap::Heatmap. column_names_rot ComplexHeatmap::Heatmap. show_legend Whether show annotation legends. top_ann data frame. column treated simple annotation. data frame must column names. Can also HeatmapAnnotation-class object. top_ann_col list colors contain color mapping df. show_top_legend Whether show annotation legends. bott_ann top_ann. bott_ann_col list colors contain color mapping df. show_bott_legend Whether show annotation legends. left_ann top_ann. left_ann_col list colors contain color mapping df. show_left_legend Whether show annotation legends. right_ann top_ann. right_ann_col list colors contain color mapping df. show_right_legend Whether show annotation legends. show_ann_name Whether show annotation names. row_split vector data frame rows split. cluster_rows clustering object, split can single number indicating split dendrogram cutree. column_split row_split. show_heatmap_legend Whether show legends. legend_title Character specifyin legend title. legend_title_position Position title relative legend. topleft, topcenter, leftcenter-rot lefttop-rot vertical legend leftcenter, lefttop horizontal legend. legend_direction Vertical horizontal? legend_title_gp Graphic parameters title. legend_labels_gp Graphic parameters labels. legend_height Height whole legend body. used vertical continous legend. legend_width Width whole legend body. used horizontal continous legend. legend_side Side put heatmap legend ... parameters draw.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/HeatmapView.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw Heatmap — HeatmapView","text":"return.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/HeatmapView.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw Heatmap — HeatmapView","text":"Wubing Zhang","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/HeatmapView.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Heatmap — HeatmapView","text":"","code":"library(grid) library(SpatialEcoTyper) library(ComplexHeatmap) #> Warning: package ‘ComplexHeatmap’ was built under R version 4.2.1 #> ======================================== #> ComplexHeatmap version 2.12.1 #> Bioconductor page: http://bioconductor.org/packages/ComplexHeatmap/ #> Github page: https://github.com/jokergoo/ComplexHeatmap #> Documentation: http://jokergoo.github.io/ComplexHeatmap-reference #>  #> If you use it in published research, please cite either one: #> - Gu, Z. Complex heatmaps reveal patterns and correlations in multidimensional  #>     genomic data. Bioinformatics 2016. #> - Gu, Z. Complex Heatmap Visualization. iMeta 2022. #>  #>  #> The new InteractiveComplexHeatmap package can directly export static  #> complex heatmaps into an interactive Shiny app with zero effort. Have a try! #>  #> This message can be suppressed by: #>   suppressPackageStartupMessages(library(ComplexHeatmap)) #> ========================================  dat = matrix(rnorm(100), 10) rownames(dat) = letters[1:10] colnames(dat) = letters[11:20] rowann = data.frame(Group = rep(letters[1:2], each=5), index = 1:10) colann = data.frame(Group = rep(letters[1:2], each=5), index = 11:20) HeatmapView(dat, left_ann = rowann, top_ann = colann) #> Loading required package: pals"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/IntegrateSpatialEcoTyper.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — IntegrateSpatialEcoTyper","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — IntegrateSpatialEcoTyper","text":"Integrate Multiple Spatial Transcriptomics Datasets Identify Conserved Spatial Ecotypes","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/IntegrateSpatialEcoTyper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — IntegrateSpatialEcoTyper","text":"","code":"IntegrateSpatialEcoTyper(   SpatialEcoTyper_list,   data_list,   outdir = \"./\",   normalization.method = \"None\",   nmf_ranks = 10,   nrun.per.rank = 30,   nfeatures = 3000,   min.features = 10,   Region = NULL,   subresolution = 30,   ncores = 1,   seed = 1 )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/IntegrateSpatialEcoTyper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — IntegrateSpatialEcoTyper","text":"SpatialEcoTyper_list named list SpatialEcoTyper results, item represents list returned SpatialEcoTyper function. data_list named list expression matrices matrix represents gene expression data used SpatialEcoTyper analysis. list name match SpatialEcoTyper_list. outdir Directory results saved. Defaults current directory subdirectory named \"SpatialEcoTyper_results_\" followed current date. normalization.method Method normalizing expression data. Options include \"None\" (default), \"SCT\", methods compatible Seurat's `NormalizeData` function. nmf_ranks Integer vector specifying number clusters (10 default). integer vector supplied, function test supplied numbers select optimal number, takes time. nrun.per.rank integer specifying number runs per rank NMF (default: 30). nfeatures integer specifying maximum number top variable genes select cell type. min.features integer specifying minimum number shared features (genes) required across samples. Region character string specifying column name metadata data frames containing region annotations (default: NULL). Pathologist annotation recommended available. subresolution numeric specifying resolution clustering within sample. ncores integer specifying number cores parallel processing. Default 1. seed integer used seed random number generator NMF analysis.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/IntegrateSpatialEcoTyper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — IntegrateSpatialEcoTyper","text":"","code":"# See https://digitalcytometry.github.io/SpatialEcoTyper/docs/articles/Integration.html"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/MultiSpatialEcoTyper.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — MultiSpatialEcoTyper","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — MultiSpatialEcoTyper","text":"function performs SpatialEcoTyper analysis multiple spatial transcriptomics datasets. normalizes input data, performs SpatialEcoTyper analysis dataset, integrates results across samples.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/MultiSpatialEcoTyper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — MultiSpatialEcoTyper","text":"","code":"MultiSpatialEcoTyper(   data_list,   metadata_list,   outdir = \"./\",   normalization.method = \"None\",   nmf_ranks = 10,   nrun.per.rank = 30,   radius = 50,   min.cts.per.region = 2,   nfeatures = 3000,   min.features = 10,   Region = NULL,   subresolution = 30,   ncores = 1,   seed = 1,   ... )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/MultiSpatialEcoTyper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — MultiSpatialEcoTyper","text":"data_list named list expression matrices matrix represents gene expression data sample. columns matrix correspond cells, rows correspond genes. Sample names used list names. Otherwise, samples named 'Sample1' 'SampleN'. metadata_list named list metadata data frames data frame contains metadata corresponding cells expression matrices. row correspond column (cell) expression matrices. metadata include least three columns, including X, Y CellType. outdir Directory results saved. Defaults current directory subdirectory named \"SpatialEcoTyper_results_\" followed current date. normalization.method Method normalizing expression data. Options include \"None\" (default), \"SCT\", methods compatible Seurat's `NormalizeData` function. nmf_ranks Integer vector specifying number clusters (10 default). integer vector supplied, function test supplied numbers select optimal number, takes time. nrun.per.rank integer specifying number runs per rank NMF (default: 30). radius Numeric specifying radius (units spatial coordinates) defining spatial neighborhoods around cell. Default 50. min.cts.per.region Integer specifying minimum number cell types (default: 2) required microregion. nfeatures integer specifying maximum number top variable genes select cell type. min.features integer specifying minimum number shared features (genes) required across samples. Region Character string specifying column name metadata data frames containing region annotations (default: NULL). Pathologist annotation recommended available. subresolution Numeric specifying resolution clustering within sample. ncores Integer specifying number cores parallel processing. Default 1. seed integer used seed random number generator NMF analysis. ... Additional arguments passed `SpatialEcoTyper` function.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/MultiSpatialEcoTyper.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — MultiSpatialEcoTyper","text":"function saves results specified output directory.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/MultiSpatialEcoTyper.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — MultiSpatialEcoTyper","text":"function takes list gene expression matrices corresponding metadata,          normalizes data specified, performs SpatialEcoTyper sample,          integrates results across multiple samples identify conserved spatial ecotypes.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/MultiSpatialEcoTyper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Integrate Multiple Spatial Transcriptomics Datasets to Identify Conserved Spatial Ecotypes — MultiSpatialEcoTyper","text":"","code":"# See https://digitalcytometry.github.io/SpatialEcoTyper/docs/articles/Integration.html"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFGenerateW.html","id":null,"dir":"Reference","previous_headings":"","what":"Train SE Deconvolution Model — NMFGenerateW","title":"Train SE Deconvolution Model — NMFGenerateW","text":"function trains Non-negative Matrix Factorization (NMF) model SE deconvolution based given spatial ecotype fractions gene expression matrix. Prior NMF, gene scaled mean 0 unit variance. satisfy non-negativity requirement NMF, expression matrix processed using posneg transformation, converts expression matrix two matrices, one containing positive values containing negative values sign inverted. two matrices subsequently concatenated produce training data.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFGenerateW.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train SE Deconvolution Model — NMFGenerateW","text":"","code":"NMFGenerateW(   Fracs,   ExpMat,   scale = TRUE,   nfeature = 2000,   nfeature.per.se = 50,   method = \"brunet\" )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFGenerateW.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train SE Deconvolution Model — NMFGenerateW","text":"Fracs matrix spatial ecotype fractions. ExpMat gene expression matrix genes rows samples columns. scale Logical indicating whether scale gene expression matrix. Default TRUE. nfeature Integer specifying top variable features training models (default: 2000). nfeature.per.se Integer specifying maximal number features select SE (default: 50). method character string specifying NMF method use. Default \"brunet\".","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFGenerateW.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train SE Deconvolution Model — NMFGenerateW","text":"matrix containing basis NMF W matrix rows features columns SEs.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFGenerateWList.html","id":null,"dir":"Reference","previous_headings":"","what":"Train Cell Type-Specific NMF Models for Recovering Spatial EcoTypes — NMFGenerateWList","title":"Train Cell Type-Specific NMF Models for Recovering Spatial EcoTypes — NMFGenerateWList","text":"function trains cell type-specific NMF (Non-Negative Matrix Factorization) models recover SE-specific cell states single-cell data, part Spatial EcoTyper analysis workflow. downsamples cells training dataset size large, selects subset features highest specificity.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFGenerateWList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Train Cell Type-Specific NMF Models for Recovering Spatial EcoTypes — NMFGenerateWList","text":"","code":"NMFGenerateWList(   scdata,   scmeta,   CellType = \"CellType\",   SE = \"SE\",   scale = TRUE,   nfeature = 2000,   nfeature.per.se = 50,   min.cells = 20,   downsample = 2500,   ncores = 1,   seed = 2024 )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFGenerateWList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Train Cell Type-Specific NMF Models for Recovering Spatial EcoTypes — NMFGenerateWList","text":"scdata Numeric matrix containing single-cell expression data. scmeta Data frame containing metadata information associated single-cell data, including cell types spatial clusters. CellType Character string specifying column name metadata data frame containing cell type annotations. SE Character string specifying column name metadata data frame containing spatial ecotype annotations. scale Boolean specifying whether perform univariance normalization training models (default: TRUE). nfeature Integer specifying top variable features training models (default: 2000). nfeature.per.se Integer specifying maximal number features select SE (default: 50). min.cells Integer specifying minimal number cells required SE cell state. downsample Integer specifying number cells per cell type (downsampling) training NMF models (default: 2500). ncores Integer specifying number CPU cores use parallel processing. seed Integer specifying seed random sampling downsampling.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFGenerateWList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Train Cell Type-Specific NMF Models for Recovering Spatial EcoTypes — NMFGenerateWList","text":"list cell type-specific NMF models, represented corresponding factorization matrix W.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFpredict.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Using Pretrained NMF Model — NMFpredict","title":"Prediction Using Pretrained NMF Model — NMFpredict","text":"function uses pretrained NMF models recover cell states / spatial ecotypes. takes factorization matrix W representing pretrained NMF model numeric gene expression matrix.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFpredict.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Using Pretrained NMF Model — NMFpredict","text":"","code":"NMFpredict(W, testdat, scale = FALSE, ncell.per.run = 500)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFpredict.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Using Pretrained NMF Model — NMFpredict","text":"W Matrix representing factorization matrix W pretrained NMF model. testdat Numeric matrix containing new data NMF scores predicted. scale Logical indicating whether scale input data. ncell.per.run Integer specifying maximum number cells per NMF prediction run avoid memory issues.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFpredict.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction Using Pretrained NMF Model — NMFpredict","text":"matrix representing NMF prediction scores.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/NMFpredict.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prediction Using Pretrained NMF Model — NMFpredict","text":"","code":"library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"14QvmgISxaArTzWt_UHvf55aAYN2zm84Q\"), \"SKCM_RNASeqV2.geneExp.rds\",                     overwrite = TRUE) #> File downloaded: #> • SKCM_RNASeqV2.geneExp.rds <id: 14QvmgISxaArTzWt_UHvf55aAYN2zm84Q> #> Saved locally as: #> • SKCM_RNASeqV2.geneExp.rds bulkdata <- readRDS(\"SKCM_RNASeqV2.geneExp.rds\") W <- readRDS(file.path(system.file(\"extdata\", package = \"SpatialEcoTyper\"), \"Bulk_SE_Recovery_W.rds\"))  # Predict SE abundances in bulk tumors preds <- NMFpredict(W = W, bulkdata, scale = TRUE) head(preds[, 1:5]) #>       TCGA-3N-A9WB-06 TCGA-3N-A9WC-06 TCGA-3N-A9WD-06 TCGA-BF-A1PU-01 #> NonSE      0.10378493     0.031103139     0.469932888      0.12913097 #> SE01       0.08326065     0.063022079     0.151414386      0.18470256 #> SE02       0.25368726     0.051110136     0.068248720      0.09710288 #> SE03       0.09417615     0.173416088     0.004969678      0.06966202 #> SE04       0.07931696     0.028829349     0.056418588      0.16008800 #> SE05       0.05088193     0.003203951     0.056310297      0.05303787 #>       TCGA-BF-A1PV-01 #> NonSE      0.10221472 #> SE01       0.05277487 #> SE02       0.05740510 #> SE03       0.15960054 #> SE04       0.12876903 #> SE05       0.12002292"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/PreprocessST.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess Spatial Transcriptomics Data — PreprocessST","title":"Preprocess Spatial Transcriptomics Data — PreprocessST","text":"function preprocesses single-cell spatial transcriptomics data filtering low-quality genes cells based specified thresholds. ensures genes expressed minimum number cells cells expressing minimum number features retained. Additionally, reformats metadata include spatial coordinates (X Y).","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/PreprocessST.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess Spatial Transcriptomics Data — PreprocessST","text":"","code":"PreprocessST(   expdat,   metadata,   min.cells = 3,   min.features = 5,   X = \"X\",   Y = \"Y\" )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/PreprocessST.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess Spatial Transcriptomics Data — PreprocessST","text":"expdat matrix data frame representing gene expression data, rows correspond genes columns correspond cells. metadata data frame containing metadata associated cell. Must include spatial coordinates (e.g., X Y) well cell-specific annotations. row names `metadata` must match column names `expdat`. min.cells integer specifying minimum number cells gene must expressed retained (default 3). min.features integer specifying minimum number features (genes) cell must express retained (default 5). X string specifying column name metadata data frame represents X spatial coordinate (default \"X\"). Y string specifying column name metadata data frame represents Y spatial coordinate (default \"Y\").","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/PreprocessST.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess Spatial Transcriptomics Data — PreprocessST","text":"list containing two elements: expdat filtered matrix gene expression data, converted sparse matrix metadata filtered data frame metadata, aligned filtered gene expression data, including reformatted spatial coordinates.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/PreprocessST.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess Spatial Transcriptomics Data — PreprocessST","text":"","code":"library(SpatialEcoTyper) library(data.table) library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI\"),                     \"HumanMelanomaPatient1_subset_scmeta.tsv\", overwrite = TRUE) #> File downloaded: #> • HumanMelanomaPatient1_subset_scmeta.tsv #>   <id: 1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI> #> Saved locally as: #> • HumanMelanomaPatient1_subset_scmeta.tsv drive_download(as_id(\"1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB\"),               \"HumanMelanomaPatient1_subset_counts.tsv.gz\", overwrite = TRUE) #> File downloaded: #> • HumanMelanomaPatient1_subset_counts.tsv.gz #>   <id: 1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB> #> Saved locally as: #> • HumanMelanomaPatient1_subset_counts.tsv.gz scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1] scdata <- as.matrix(scdata[, -1]) scmeta <- read.table(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                      sep = \"\\t\", header = TRUE, row.names = 1) processed <- PreprocessST(expdat = scdata, scmeta, X = \"X\", Y = \"Y\",                           min.cells = 3, min.features = 5) #> 2024-08-21 17:27:25 Remove 87 genes expressed in fewer than 3 cells head(processed$metadata) #>                                         X         Y   CellType CellTypeName #> HumanMelanomaPatient1__cell_3655 1894.706 -6367.766 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3657 1942.480 -6369.602 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3658 1963.007 -6374.026 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3660 1981.600 -6372.266 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3661 1742.939 -6374.851 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3663 1921.683 -6383.309 Fibroblast  Fibroblasts #>                                  Region Dist2Interface #> HumanMelanomaPatient1__cell_3655 Stroma      -883.1752 #> HumanMelanomaPatient1__cell_3657 Stroma      -894.8463 #> HumanMelanomaPatient1__cell_3658 Stroma      -904.1115 #> HumanMelanomaPatient1__cell_3660 Stroma      -907.8909 #> HumanMelanomaPatient1__cell_3661 Stroma      -874.2712 #> HumanMelanomaPatient1__cell_3663 Stroma      -903.6559 head(processed$expdat) #> 6 x 27907 sparse Matrix of class \"dgCMatrix\" #>   [[ suppressing 34 column names ‘HumanMelanomaPatient1__cell_3655’, ‘HumanMelanomaPatient1__cell_3657’, ‘HumanMelanomaPatient1__cell_3658’suppressing 27873 columns in show(); maybe adjust 'options(max.print= *, width = *)' #>  .............................."},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/RecoverSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Recovery of SEs Using Pretrained NMF Models — RecoverSE","title":"Recovery of SEs Using Pretrained NMF Models — RecoverSE","text":"function can recover SEs Visium, scRNA-seq data single-cell spatial data.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/RecoverSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recovery of SEs Using Pretrained NMF Models — RecoverSE","text":"","code":"RecoverSE(dat, scale = TRUE, Ws = NULL, celltypes = NULL, se_results = NULL)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/RecoverSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recovery of SEs Using Pretrained NMF Models — RecoverSE","text":"dat numeric matrix gene expression data, single-cell spatial transcriptomics, scRNA-seq spot-resolution spatial transcriptomics data. scale Logical indicating whether scale input data predictions. Ws list cell-type-specific W matrices used recover SE-specific cell states. element list named corresponding cell type contain W matrix NMF model. celltypes Character string specifying cell type annotations, required scRNA-seq single-cell spatial data. se_results list including seurat object metadata spatial cluster annotations (SE column) returned SpatialEcoTyper. supplied, `dat` single cell gene expression data used SpatialEcoTyper analysis.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/RecoverSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recovery of SEs Using Pretrained NMF Models — RecoverSE","text":"Depending input data: - single-cell data: vector predicted SEs cell. - spot-resolution data (e.g., Visium): matrix SE abundances across spots.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/RecoverSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recovery of SEs Using Pretrained NMF Models — RecoverSE","text":"","code":"# see https://digitalcytometry.github.io/SpatialEcoTyper_dev/articles/Recovery_scRNA.html # see https://digitalcytometry.github.io/SpatialEcoTyper_dev/articles/Recovery_Spatial.html"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SNF2.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhanced Similarity Network Fusion — SNF2","title":"Enhanced Similarity Network Fusion — SNF2","text":"Similarity Network Fusion (SNF) integrates multiple views (similarity matrices) construct overall status matrix. function adopted SNFtool (https://github.com/maxconway/SNFtool/) enhanced unsupervised analysis spatial ecosystem. new function supports sparse matrix missing data input matrices.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SNF2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhanced Similarity Network Fusion — SNF2","text":"","code":"SNF2(Wall, K = 50, t = 5, ncores = 1, verbose = FALSE)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SNF2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhanced Similarity Network Fusion — SNF2","text":"Wall List similarity matrices. element list square, symmetric matrix shows affinities data points certain view. K Number neighbors K-nearest neighbors part algorithm. t Number iterations diffusion process. ncores Integer specifying number CPU cores use parallel processing. verbose Boolean specifying whether show progress messages.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SNF2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enhanced Similarity Network Fusion — SNF2","text":"fused matrix.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialEcoTyper.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify Spatial EcoTypes from Single-cell Spatial Data (A Single Sample) — SpatialEcoTyper","title":"Identify Spatial EcoTypes from Single-cell Spatial Data (A Single Sample) — SpatialEcoTyper","text":"function identifies spatially distinct cellular ecosystems (SE) single sample.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialEcoTyper.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify Spatial EcoTypes from Single-cell Spatial Data (A Single Sample) — SpatialEcoTyper","text":"","code":"SpatialEcoTyper(   normdata,   metadata,   outprefix = \"SE\",   radius = 50,   resolution = 0.8,   nfeatures = 3000,   npcs = 20,   k.sn = 50,   k = 20,   min.cells = 5,   min.features = 10,   min.cts.per.region = 2,   min.cells.per.region = 2,   iterations = 5,   ncores = 1,   binsize = round(radius * 1.4) )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialEcoTyper.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify Spatial EcoTypes from Single-cell Spatial Data (A Single Sample) — SpatialEcoTyper","text":"normdata matrix representing normalized gene expression data, rows correspond genes columns correspond cells. metadata data frame containing metadata associated cell. Must include spatial coordinates (e.g., X Y) well cell type annotations. row names metadata must match column names normdata. outprefix Character string specifying prefix output file names. radius Numeric specifying radius (units spatial coordinates) defining spatial neighborhoods around cell. Default 50. resolution Numeric specifying resolution Louvain clustering (default: 0.8). nfeatures Integer specifying number top variable features (default: 3000) used PCA. npcs Integer specifying number principal components (PCs) (default: 20). k.sn Integer specifying number spatial nearest neighbors (default: 50) constructing similarity network. k Integer specifying number spatial nearest neighbors (default: 20) used construct spatial meta-cells. min.cells Minimum number cells / spatial-meta-cells (default: 5)  expressing feature/gene. min.features Minimum number features (default: 10) detected cell / spatial-meta-cell. min.cts.per.region Integer specifying minimum number cell types (default: 2) required microregion. min.cells.per.region Integer specifying minimum number cells (default: 2) spatial microregion. iterations Integer specifying number iterations (default: 5) SNF analysis. ncores Integer specifying number CPU cores use parallel processing. binsize Numeric specifying bin size spatial discretization coordinates. default, size determined based specified radius (radius*1.4 µm). Increasing binsize downsample microregions expedite analysis, might eliminate cells located bins SE discovery analysis. #' @return list containing two elements: obj seurat object constructed fused similarity network sptial microregions metadata Updated metadata, new column (`SE`) added","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialEcoTyper.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify Spatial EcoTypes from Single-cell Spatial Data (A Single Sample) — SpatialEcoTyper","text":"","code":"# See https://digitalcytometry.github.io/SpatialEcoTyper/docs/articles/SingleSample.html suppressPackageStartupMessages(library(dplyr)) suppressPackageStartupMessages(library(ggplot2)) suppressPackageStartupMessages(library(parallel)) suppressPackageStartupMessages(library(Seurat)) suppressPackageStartupMessages(library(data.table)) suppressPackageStartupMessages(library(googledrive)) suppressPackageStartupMessages(library(R.utils)) library(SpatialEcoTyper)  drive_deauth() # Disable Google sign-in requirement drive_download(as_id(\"13Rc5Rsu8jbnEYYfUse-xQ7ges51LcI7n\"), \"HumanMelanomaPatient1_subset_counts.tsv.gz\") #> Error in drive_download(as_id(\"13Rc5Rsu8jbnEYYfUse-xQ7ges51LcI7n\"), \"HumanMelanomaPatient1_subset_counts.tsv.gz\"): Local `path` already exists and overwrite is `FALSE`: #> • HumanMelanomaPatient1_subset_counts.tsv.gz drive_download(as_id(\"12xcZNhpT-xbhcG8kX1QAdTeM9TKeFAUW\"), \"HumanMelanomaPatient1_subset_scmeta.tsv\") #> Error in drive_download(as_id(\"12xcZNhpT-xbhcG8kX1QAdTeM9TKeFAUW\"), \"HumanMelanomaPatient1_subset_scmeta.tsv\"): Local `path` already exists and overwrite is `FALSE`: #> • HumanMelanomaPatient1_subset_scmeta.tsv  # Load single-cell gene expression matrix. Rows are genes, columns are cells. scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1]  # set genes as row names scdata <- as.matrix(scdata[, -1]) normdata <- NormalizeData(scdata) head(normdata[, 1:5]) #> 6 x 5 sparse Matrix of class \"dgCMatrix\" #>          HumanMelanomaPatient1__cell_3655 HumanMelanomaPatient1__cell_3657 #> PDK4                             .                                4.221184 #> TNFRSF17                         .                                .        #> ICAM3                            .                                .        #> FAP                              3.552438                         .        #> GZMB                             .                                .        #> TSC2                             .                                .        #>          HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3660 #> PDK4                             3.208945                                . #> TNFRSF17                         .                                       . #> ICAM3                            .                                       . #> FAP                              .                                       . #> GZMB                             .                                       . #> TSC2                             .                                       . #>          HumanMelanomaPatient1__cell_3661 #> PDK4                                    . #> TNFRSF17                                . #> ICAM3                                   . #> FAP                                     . #> GZMB                                    . #> TSC2                                    .  # Load single-cell metadata. Three columns are required, including X, Y, and CellType. Others are optional. scmeta <- read.table(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                      sep = \"\\t\",header = TRUE, row.names = 1) scmeta <- scmeta[colnames(scdata), ] # match the cell ids in scdata and scmeta head(scmeta) #>                                         X         Y   CellType CellTypeName #> HumanMelanomaPatient1__cell_3655 1894.706 -6367.766 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3657 1942.480 -6369.602 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3658 1963.007 -6374.026 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3660 1981.600 -6372.266 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3661 1742.939 -6374.851 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_3663 1921.683 -6383.309 Fibroblast  Fibroblasts #>                                  Region Dist2Interface #> HumanMelanomaPatient1__cell_3655 Stroma      -883.1752 #> HumanMelanomaPatient1__cell_3657 Stroma      -894.8463 #> HumanMelanomaPatient1__cell_3658 Stroma      -904.1115 #> HumanMelanomaPatient1__cell_3660 Stroma      -907.8909 #> HumanMelanomaPatient1__cell_3661 Stroma      -874.2712 #> HumanMelanomaPatient1__cell_3663 Stroma      -903.6559  se_results <- SpatialEcoTyper(normdata, scmeta,                               outprefix = \"Melanoma1_subset\",                               radius = 50, ncores = 2) #> 2024-08-21 17:27:29 Remove 88 genes expressed in fewer than 5 cells #> 2024-08-21 17:27:29 Construct spatial meta cells for each cell type #> \t\tTotal spatial microregions: 2315 #> \t\tTotal spatial meta cells: 6343 #> \t\tTotal single cells: 27907 #> 2024-08-21 17:27:30 PCA for each cell type #> 2024-08-21 17:27:32 Construct cell-type-specific similarity network #> \t\tRemove 609 spatial microregions with fewer than 2 cell types  #> 2024-08-21 17:27:33 Similarity network fusion #> 2024-08-21 17:27:33 Normalize networks ... #> 2024-08-21 17:27:33 Calculate the local transition matrix ... #> 2024-08-21 17:27:33 Perform the diffusion ... #> \t2024-08-21 17:27:33 Iteration: 1 #> \t2024-08-21 17:27:37 Iteration: 2 #> \t2024-08-21 17:27:48 Iteration: 3 #> \t2024-08-21 17:28:01 Iteration: 4 #> \t2024-08-21 17:28:13 Iteration: 5 #> Warning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric #> To use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation' #> This message will be shown once per session # Extract the Seurat object and updated single-cell metadata obj <- se_results$obj # A Seurat object obj #> An object of class Seurat  #> 1633 features across 1633 samples within 1 assay  #> Active assay: RNA (1633 features, 1633 variable features) #>  2 dimensional reductions calculated: pca, umap scmeta <- se_results$metadata %>% arrange(SE) # Updated single-cell meta data, with SE annotation added head(scmeta) #>                                         X         Y   CellType CellTypeName #> HumanMelanomaPatient1__cell_4675 4578.019 -6445.993 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_4738 4529.162 -6504.117 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_4774 4533.228 -6529.591 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_4803 4340.813 -6562.381 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_4806 4401.938 -6567.152 Fibroblast  Fibroblasts #> HumanMelanomaPatient1__cell_4808 4388.422 -6570.215 Fibroblast  Fibroblasts #>                                        Region Dist2Interface  SE #> HumanMelanomaPatient1__cell_4675 Outer margin     -197.09807 SE0 #> HumanMelanomaPatient1__cell_4738 Outer margin     -186.13295 SE0 #> HumanMelanomaPatient1__cell_4774 Outer margin     -199.69317 SE0 #> HumanMelanomaPatient1__cell_4803 Outer margin      -95.54956 SE0 #> HumanMelanomaPatient1__cell_4806 Outer margin     -124.01602 SE0 #> HumanMelanomaPatient1__cell_4808 Outer margin     -119.07031 SE0"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialView.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Spatial Landscape of Cells / Spots — SpatialView","title":"Visualize Spatial Landscape of Cells / Spots — SpatialView","text":"Visualize Spatial Landscape Cells / Spots","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialView.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Spatial Landscape of Cells / Spots — SpatialView","text":"","code":"SpatialView(   obj,   by,   X = \"X\",   Y = \"Y\",   pt.shape = 20,   pt.size = 0.5,   pt.alpha = 1,   jitter = FALSE,   slot = \"data\",   coord.fix = FALSE,   highlight.cells = NULL,   control.cells = NULL,   ncol = 3,   bg.downsample = 2000,   bg.color = \"gray80\",   bg.size = 0.5,   bg.alpha = 0.7 )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialView.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Spatial Landscape of Cells / Spots — SpatialView","text":"obj Seurat object data frame (cell names row names). feature name plotting, e.g. cell type, region, gene expression. X character specifying spatial coordinate x-axis. Y character specifying spatial coordinate y-axis. pt.shape Point shape plotting pt.size numeric specifying point size non-control cells. pt.alpha numeric specifying point transparency non-control cells. jitter boolean specifying whether add jitters cells. slot slot Seurat object pull feature . highlight.cells vector specifying cells highlighting. control.cells vector specifying control cells background. specified, non-highlighting cells considered control.cells. bg.downsample integer specifying aim downsampling control.cells. bg.color Color control cells. bg.size numeric specifying point size control cells. bg.alpha numeric specifying point transparency control cells.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialView.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Spatial Landscape of Cells / Spots — SpatialView","text":"ggplot object.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/SpatialView.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize Spatial Landscape of Cells / Spots — SpatialView","text":"","code":"library(data.table) library(Seurat) library(SpatialEcoTyper) library(ggplot2) library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI\"),                     \"HumanMelanomaPatient1_subset_scmeta.tsv\", overwrite = TRUE) #> File downloaded: #> • HumanMelanomaPatient1_subset_scmeta.tsv #>   <id: 1CgUOQKrWY_TG61o5aw7J9LZzE20D6NuI> #> Saved locally as: #> • HumanMelanomaPatient1_subset_scmeta.tsv scmeta <- fread(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                 sep = \"\\t\",header = TRUE, data.table = FALSE)  # Visualize the cell type annotations in the tissue SpatialView(scmeta, by = \"CellType\", X = \"X\", Y = \"Y\") +             scale_color_manual(values = pals::kelly()[-1]) #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale.  SpatialView(scmeta, by = \"Region\", X = \"X\", Y = \"Y\") +             scale_color_brewer(type = \"qual\", palette = \"Set1\") #> Scale for colour is already present. #> Adding another scale for colour, which will replace the existing scale."},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/Znorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted / Unweighted Uni-variance Normalization — Znorm","title":"Weighted / Unweighted Uni-variance Normalization — Znorm","text":"Z-score normalization scales feature (gene) across cells mean 0 standard deviation 1. function allows optional weighted univariance normalization, cells grouped categorical variable.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/Znorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted / Unweighted Uni-variance Normalization — Znorm","text":"","code":"Znorm(mat, groups = NULL)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/Znorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted / Unweighted Uni-variance Normalization — Znorm","text":"mat matrix gene expression data, rows represent genes columns represent cells. groups character vector specifying group labels cell. provided, weighted univariance normalization performed.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/Znorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted / Unweighted Uni-variance Normalization — Znorm","text":"matrix Z-score normalized gene expression data, rows representing genes columns representing cells.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/Znorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted / Unweighted Uni-variance Normalization — Znorm","text":"","code":"library(Seurat) library(data.table) library(SpatialEcoTyper) library(googledrive) drive_deauth() # no Google sign-in is required drive_download(as_id(\"1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB\"),               \"HumanMelanomaPatient1_subset_counts.tsv.gz\", overwrite = TRUE) #> File downloaded: #> • HumanMelanomaPatient1_subset_counts.tsv.gz #>   <id: 1CoQmU3u8MoVC8RbLUvTDQmOuJJ703HHB> #> Saved locally as: #> • HumanMelanomaPatient1_subset_counts.tsv.gz scdata <- fread(\"HumanMelanomaPatient1_subset_counts.tsv.gz\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) rownames(scdata) <- scdata[, 1] scdata <- as.matrix(scdata[, -1]) tmpobj <- CreateSeuratObject(scdata) %>%           SCTransform(clip.range = c(-10, 10), verbose = FALSE) seurat_version = as.integer(gsub(\"\\\\..*\", \"\", as.character(packageVersion(\"SeuratObject\")))) if(seurat_version<5){   normdata <- GetAssayData(tmpobj, \"data\") }else{   normdata <- tmpobj[[\"SCT\"]]$data } # Z-score normalization znorm_data <- Znorm(normdata) #> Centering and scaling data matrix head(znorm_data[, 1:5]) #>          HumanMelanomaPatient1__cell_3655 HumanMelanomaPatient1__cell_3657 #> PDK4                           -0.3431986                        2.6014585 #> TNFRSF17                       -0.1081785                       -0.1081785 #> ICAM3                          -0.4466016                       -0.4466016 #> FAP                             3.2243388                       -0.2852697 #> GZMB                           -0.2232932                       -0.2232932 #> TSC2                           -0.1339602                       -0.1339602 #>          HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3660 #> PDK4                            2.6014585                       -0.3431986 #> TNFRSF17                       -0.1081785                       -0.1081785 #> ICAM3                          -0.4466016                       -0.4466016 #> FAP                            -0.2852697                       -0.2852697 #> GZMB                           -0.2232932                       -0.2232932 #> TSC2                           -0.1339602                       -0.1339602 #>          HumanMelanomaPatient1__cell_3661 #> PDK4                           -0.3431986 #> TNFRSF17                       -0.1081785 #> ICAM3                          -0.4466016 #> FAP                            -0.2852697 #> GZMB                           -0.2232932 #> TSC2                           -0.1339602  # Weighted Z-score normalization drive_download(as_id(\"12xcZNhpT-xbhcG8kX1QAdTeM9TKeFAUW\"),                      \"HumanMelanomaPatient1_subset_scmeta.tsv\",                     overwrite = TRUE, verbose = FALSE) #> Warning: The `verbose` argument of `drive_download()` is deprecated as of googledrive #> 2.0.0. #> ℹ Set `options(googledrive_quiet = TRUE)` to suppress all googledrive messages. #> ℹ For finer control, use `local_drive_quiet()` or `with_drive_quiet()`. #> ℹ googledrive's `verbose` argument will be removed in the future. scmeta <- fread(\"HumanMelanomaPatient1_subset_scmeta.tsv\",                 sep = \"\\t\",header = TRUE, data.table = FALSE) wtdznorm_data <- Znorm(normdata, groups = scmeta$Region) head(wtdznorm_data[, 1:5]) #> 6 x 5 Matrix of class \"dgeMatrix\" #>          HumanMelanomaPatient1__cell_3655 HumanMelanomaPatient1__cell_3657 #> PDK4                           -0.2934465                        2.2923239 #> TNFRSF17                       -0.0954038                       -0.0954038 #> ICAM3                          -0.3887801                       -0.3887801 #> FAP                             2.7982009                       -0.2469281 #> GZMB                           -0.1990137                       -0.1990137 #> TSC2                           -0.1176330                       -0.1176330 #>          HumanMelanomaPatient1__cell_3658 HumanMelanomaPatient1__cell_3660 #> PDK4                            2.2923239                       -0.2934465 #> TNFRSF17                       -0.0954038                       -0.0954038 #> ICAM3                          -0.3887801                       -0.3887801 #> FAP                            -0.2469281                       -0.2469281 #> GZMB                           -0.1990137                       -0.1990137 #> TSC2                           -0.1176330                       -0.1176330 #>          HumanMelanomaPatient1__cell_3661 #> PDK4                           -0.2934465 #> TNFRSF17                       -0.0954038 #> ICAM3                          -0.3887801 #> FAP                            -0.2469281 #> GZMB                           -0.1990137 #> TSC2                           -0.1176330"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/dot-Integrate.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate Spatial Clusters From Multiple Samples Via Similarity Network Fusion — .Integrate","title":"Integrate Spatial Clusters From Multiple Samples Via Similarity Network Fusion — .Integrate","text":"function identifies conserved spatial ecotypes based cell type specific gene expression signature spatial clusters samples.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/dot-Integrate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate Spatial Clusters From Multiple Samples Via Similarity Network Fusion — .Integrate","text":"","code":".Integrate(   avgexprs,   Region = NULL,   nfeatures = 3000,   min.features = 5,   ncores = 1 )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/dot-Integrate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate Spatial Clusters From Multiple Samples Via Similarity Network Fusion — .Integrate","text":"avgexprs Gene expression signature spatial clusters, column represents spatial cluster. Region character vector specifying region annotations spatial clusters. nfeatures Integer specifying maximum number top variable genes select cell type. min.features Integer specifying minimum number shared features (genes) required across samples. ncores Integer specifying number cores parallel processing. Default 1.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/dot-Integrate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Integrate Spatial Clusters From Multiple Samples Via Similarity Network Fusion — .Integrate","text":"Integrated similarity matrix spatial clusters across samples.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/drawRectangleAnnotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Rectangle Annotations — drawRectangleAnnotation","title":"Draw Rectangle Annotations — drawRectangleAnnotation","text":"function draw rectangle grids based given row column factors.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/drawRectangleAnnotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Rectangle Annotations — drawRectangleAnnotation","text":"","code":"drawRectangleAnnotation(rows, columns)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/drawRectangleAnnotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Rectangle Annotations — drawRectangleAnnotation","text":"rows vector row identifiers. columns vector column identifiers.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/drawRectangleAnnotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Rectangle Annotations — drawRectangleAnnotation","text":"","code":"library(grid) library(SpatialEcoTyper) library(ComplexHeatmap)  dat = matrix(rnorm(100), 10) rownames(dat) = letters[1:10] colnames(dat) = letters[11:20] rowann = data.frame(Group = rep(letters[1:2], each=5), index = 1:10) colann = data.frame(Group = rep(letters[1:2], each=5), index = 11:20) HeatmapView(dat, left_ann = rowann, top_ann = colann) drawRectangleAnnotation(rowann$Group, colann$Group)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/draw_rectangle_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw Rectangle Annotations — draw_rectangle_annotation","title":"Draw Rectangle Annotations — draw_rectangle_annotation","text":"function draw rectangle grids based given row column factors.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/draw_rectangle_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw Rectangle Annotations — draw_rectangle_annotation","text":"","code":"draw_rectangle_annotation(rows, columns)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/draw_rectangle_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw Rectangle Annotations — draw_rectangle_annotation","text":"rows vector row identifiers. columns vector column identifiers.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/draw_rectangle_annotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw Rectangle Annotations — draw_rectangle_annotation","text":"","code":"library(grid) library(SpatialEcoTyper) library(ComplexHeatmap)  dat = matrix(rnorm(100), 10) rownames(dat) = letters[1:10] colnames(dat) = letters[11:20] rowann = data.frame(Group = rep(letters[1:2], each=5), index = 1:10) colann = data.frame(Group = rep(letters[1:2], each=5), index = 11:20) HeatmapView(dat, left_ann = rowann, top_ann = colann) draw_rectangle_annotation(rowann$Group, colann$Group)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/fillspots.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle Missing Values — fillspots","title":"Handle Missing Values — fillspots","text":"function fills missing spatial regions similarity network matrices zeros. ensures matrices list set spatial regions.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/fillspots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle Missing Values — fillspots","text":"","code":"fillspots(snlist)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/fillspots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle Missing Values — fillspots","text":"snlist list similarity network matrices rows columns correspond spatial regions.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/fillspots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle Missing Values — fillspots","text":"list similarity network matrices missing spatial regions filled zero values.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/fillspots.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Handle Missing Values — fillspots","text":"function first identifies unique spatial regions across input list matrices. ensures matrix set regions adding missing regions zero similarity values. step crucial downstream analyses require consistent dimensions across samples.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/getColors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a List of Colors — getColors","title":"Generate a List of Colors — getColors","text":"function generates list colors based specified number palette type. supports categorical continuous color palettes.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/getColors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a List of Colors — getColors","text":"","code":"getColors(n, palette = 1, categoric = TRUE, exclude = NULL)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/getColors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a List of Colors — getColors","text":"n integer specifying number colors required. palette integer specifying color palette use. categorical palettes, valid values 1 7, continuous palettes, valid values 1 14. categoric logical value indicating whether use categorical palettes (TRUE) continuous palettes (FALSE). Default TRUE. exclude character vector colors exclude generated list. Default NULL.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/getColors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a List of Colors — getColors","text":"vector colors.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/getColors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate a List of Colors — getColors","text":"function uses different sets color palettes categorical continuous data. categorical data, function includes palettes kelly, cols25, polychrome, glasbey, alphabet2, alphabet. continuous data, function includes palettes like viridis, parula, magma, coolwarm, warmcool, inferno, plasma, several kovesi linear palettes. number requested colors exceeds available colors chosen palette, additional colors sampled combined set available colors, ensuring uniqueness generated colors. function uses `setdiff` exclude specified colors ensures colors repeated setting seed reproducibility.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/getColors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a List of Colors — getColors","text":"","code":"# Generate 5 categorical colors using the first palette getColors(5, palette = 1, categoric = TRUE) #> [1] \"#F3C300\" \"#875692\" \"#F38400\" \"#A1CAF1\" \"#222222\"  # Generate 10 continuous colors using the viridis palette getColors(10, palette = 1, categoric = FALSE) #>  [1] \"#440154\" \"#462777\" \"#3D4988\" \"#30678D\" \"#25818E\" \"#1F9D87\" \"#36B677\" #>  [8] \"#6DCC57\" \"#B3DC2B\" \"#FDE725\""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/nmfClustering.html","id":null,"dir":"Reference","previous_headings":"","what":"Robust Clustering via NMF (non-negative matrix factorization) — nmfClustering","title":"Robust Clustering via NMF (non-negative matrix factorization) — nmfClustering","text":"one rank provided, NMF clustering performed. multiple ranks provided, function determine optimal number communities (K) assessing cophenetic coefficient across different values K.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/nmfClustering.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Robust Clustering via NMF (non-negative matrix factorization) — nmfClustering","text":"","code":"nmfClustering(   mat,   ranks = 10,   nrun.per.rank = 30,   min.coph = 0.95,   nmf.method = \"brunet\",   ncores = 1,   plot = FALSE,   seed = 2024,   ... )"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/nmfClustering.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Robust Clustering via NMF (non-negative matrix factorization) — nmfClustering","text":"mat Numeric matrix representing input data clustering analysis. ranks Numeric vector specifying number clusters evaluate. nrun.per.rank Integer specifying number runs per rank clustering. min.coph Numeric specifying minimum cophenetic coefficient required rank optimal. nmf.method Character string specifying method NMF analysis. ncores Integer specifying number CPU cores use parallel processing. plot Logical indicating whether plot results. seed integer used seed random number generator NMF analysis. ... Additional arguments passed nmf function.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/nmfClustering.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Robust Clustering via NMF (non-negative matrix factorization) — nmfClustering","text":"NMFfitX1 object one rank provided. list containing optimal number communities (bestK), list NMFfitX1 objects (NMFfits), ggplot object (p) displaying cophenetic coefficient across different values K.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/nmfClustering.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Robust Clustering via NMF (non-negative matrix factorization) — nmfClustering","text":"","code":"library(NMF) library(SpatialEcoTyper) mat <- matrix(rnorm(1000, 3), 20) mat[mat<0] = 0  ## Specify one rank result <- nmfClustering(mat = mat, ranks = 3, nrun.per.rank = 3) predict(result) #>  [1] 2 1 2 1 3 3 3 1 3 3 1 1 3 3 1 1 2 1 2 1 1 3 1 3 1 2 3 3 1 2 1 1 1 2 1 1 2 3 #> [39] 2 2 1 2 1 1 2 1 3 1 3 1 #> attr(,\"what\") #> [1] columns #> Levels: 1 2 3  ## Determine optimal ranks by testing multiple ranks result <- nmfClustering(mat = mat, ranks = 2:5, nrun.per.rank = 3) result$p  result$bestK #> [1] 2 predict(result$NMFfits[[paste0(\"K.\", result$bestK)]]) #>  [1] 2 2 2 1 2 2 2 1 2 2 1 1 2 2 1 1 2 1 2 1 1 2 1 2 1 1 2 2 1 2 1 1 2 1 1 1 1 2 #> [39] 2 1 1 1 1 1 1 1 2 2 2 1 #> attr(,\"what\") #> [1] columns #> Levels: 1 2"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rankSparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a Sparse Matrix to Rank Space (Rank Non-zeros in Each Column) — rankSparse","title":"Transform a Sparse Matrix to Rank Space (Rank Non-zeros in Each Column) — rankSparse","text":"function ranks non-zero elements sparse matrix within column. ranks scaled dividing number rows matrix, resulting ranks normalized 0 1. original zero values left unchanged.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rankSparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a Sparse Matrix to Rank Space (Rank Non-zeros in Each Column) — rankSparse","text":"","code":"rankSparse(sparseMat)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rankSparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a Sparse Matrix to Rank Space (Rank Non-zeros in Each Column) — rankSparse","text":"sparseMat sparse matrix","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rankSparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a Sparse Matrix to Rank Space (Rank Non-zeros in Each Column) — rankSparse","text":"sparse matrix dimensions input, non-zero elements         replaced ranks within column, normalized number rows.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rankSparse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a Sparse Matrix to Rank Space (Rank Non-zeros in Each Column) — rankSparse","text":"","code":"library(Matrix) # Create a sample sparse matrix sparseMat <- rsparsematrix(5, 5, density = 0.5) # Apply the ranking function rankedSparseMat <- rankSparse(sparseMat) print(rankedSparseMat) #> 5 x 5 sparse Matrix of class \"dgCMatrix\" #>                          #> [1,] 0.4 .   0.2 .   0.6 #> [2,] 0.6 .   0.4 .   .   #> [3,] 0.2 .   .   0.4 0.2 #> [4,] .   0.2 0.6 .   .   #> [5,] .   .   .   0.2 0.4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rank_sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a sparse matrix to rank space (rank non-zeros in each column) — rank_sparse","title":"Transform a sparse matrix to rank space (rank non-zeros in each column) — rank_sparse","text":"function ranks non-zero elements sparse matrix within column. ranks scaled dividing number rows matrix, resulting ranks normalized 0 1. original zero values left unchanged.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rank_sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a sparse matrix to rank space (rank non-zeros in each column) — rank_sparse","text":"","code":"rank_sparse(sparseMat)"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rank_sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a sparse matrix to rank space (rank non-zeros in each column) — rank_sparse","text":"sparseMat sparse matrix","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rank_sparse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a sparse matrix to rank space (rank non-zeros in each column) — rank_sparse","text":"sparse matrix dimensions input, non-zero elements         replaced ranks within column, normalized number rows.","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/reference/rank_sparse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a sparse matrix to rank space (rank non-zeros in each column) — rank_sparse","text":"","code":"library(Matrix) # Create a sample sparse matrix sparseMat <- rsparsematrix(5, 5, density = 0.5) # Apply the ranking function rankedSparseMat <- rank_sparse(sparseMat) print(rankedSparseMat) #> 5 x 5 sparse Matrix of class \"dgCMatrix\" #>                          #> [1,] 0.4 .   0.2 .   0.6 #> [2,] 0.6 .   0.4 .   .   #> [3,] 0.2 .   .   0.4 0.2 #> [4,] .   0.2 0.6 .   .   #> [5,] .   .   .   0.2 0.4"},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/news/index.html","id":"spatialecotyper-001","dir":"Changelog","previous_headings":"","what":"SpatialEcoTyper 0.0.1","title":"SpatialEcoTyper 0.0.1","text":"SpatialEcoTyper: SE discovery single sample MultiSpatialEcoTyper: Integrative analysis SEs multiple samples IntegrateSpatialEcoTyper: Integrative analysis SEs multiple samples RecoverSE: SE recovery nmfClustering: NMF clustering SpatialView: draw spatial map tissue HeatmapView: draw heatmap CreatePseudobulks: create pseudobulk mixtures NMFGenerateW: train NMF model SE deconvolution bulk expression profiles NMFGenerateWList: train cell-type specific NMF model SE recovery","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/news/index.html","id":"spatialecotyper-002","dir":"Changelog","previous_headings":"","what":"SpatialEcoTyper 0.0.2","title":"SpatialEcoTyper 0.0.2","text":"Reduce memory usage computing distance spatial neighbors pairwise distances","code":""},{"path":"https://digitalcytometry.github.io/SpatialEcoTyper/news/index.html","id":"spatialecotyper-003","dir":"Changelog","previous_headings":"","what":"SpatialEcoTyper 0.0.3","title":"SpatialEcoTyper 0.0.3","text":"Reduce memory usage replacing Reduce() loops Add seeds nmfClustering Re-organize documentation integrative analysis Test refine documentations","code":""},{"path":[]}]
